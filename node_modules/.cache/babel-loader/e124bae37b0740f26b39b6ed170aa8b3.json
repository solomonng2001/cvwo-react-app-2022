{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize\n  } = ownerState;\n  const slots = {\n    root: ['root', color && `color${capitalize(color)}`, fontSize && `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, {});\n};\n\nconst SvgIconRoot = styled('svg', {\n  name: 'JoySvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n\n  var _theme$variants$plain, _theme$variants$plain2;\n\n  return _extends({}, ownerState.instanceFontSize && ownerState.instanceFontSize !== 'inherit' && {\n    '--Icon-fontSize': theme.vars.fontSize[ownerState.instanceFontSize]\n  }, {\n    userSelect: 'none',\n    margin: 'var(--Icon-margin)',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    transition: 'fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, ownerState.fontSize && ownerState.fontSize !== 'inherit' && {\n    fontSize: `var(--Icon-fontSize, ${theme.fontSize[ownerState.fontSize]})`\n  }, {\n    color: 'var(--Icon-color)'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'context' && theme.vars.palette[ownerState.color] && {\n    color: theme.vars.palette[ownerState.color].plainColor\n  }, ownerState.color === 'context' && {\n    color: (_theme$variants$plain = theme.variants.plain) == null ? void 0 : (_theme$variants$plain2 = _theme$variants$plain[ownerState.color]) == null ? void 0 : _theme$variants$plain2.color\n  });\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoySvgIcon'\n  });\n\n  const {\n    children,\n    className,\n    color = 'inherit',\n    component = 'svg',\n    fontSize = 'xl',\n    htmlColor,\n    inheritViewBox = false,\n    titleAccess,\n    viewBox = '0 0 24 24'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: SvgIconRoot,\n    externalForwardedProps: _extends({}, other, {\n      component\n    }),\n    ownerState,\n    additionalProps: _extends({\n      color: htmlColor,\n      focusable: false\n    }, titleAccess && {\n      role: 'img'\n    }, !titleAccess && {\n      'aria-hidden': true\n    }, !inheritViewBox && {\n      viewBox\n    })\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'inherit', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 1rem, but can be configure to inherit font size.\n   * @default 'xl'\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'lg', 'md', 'sm', 'xl', 'xl2', 'xl3', 'xl4', 'xl5', 'xl6', 'xl7', 'xs', 'xs2', 'xs3']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nexport default SvgIcon;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/SvgIcon/SvgIcon.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","unstable_composeClasses","composeClasses","unstable_capitalize","capitalize","clsx","PropTypes","React","styled","useThemeProps","useSlot","getSvgIconUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","color","fontSize","slots","root","SvgIconRoot","name","slot","overridesResolver","props","styles","theme","_theme$variants$plain","_theme$variants$plain2","instanceFontSize","vars","userSelect","margin","width","height","display","fill","flexShrink","transition","palette","plainColor","variants","plain","SvgIcon","forwardRef","inProps","ref","children","className","component","htmlColor","inheritViewBox","titleAccess","viewBox","other","classes","SlotRoot","rootProps","elementType","externalForwardedProps","additionalProps","focusable","role","process","env","NODE_ENV","propTypes","node","string","oneOfType","oneOf","bool","shapeRendering","sx","arrayOf","func","object"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize\n  } = ownerState;\n  const slots = {\n    root: ['root', color && `color${capitalize(color)}`, fontSize && `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, {});\n};\nconst SvgIconRoot = styled('svg', {\n  name: 'JoySvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants$plain, _theme$variants$plain2;\n  return _extends({}, ownerState.instanceFontSize && ownerState.instanceFontSize !== 'inherit' && {\n    '--Icon-fontSize': theme.vars.fontSize[ownerState.instanceFontSize]\n  }, {\n    userSelect: 'none',\n    margin: 'var(--Icon-margin)',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    transition: 'fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, ownerState.fontSize && ownerState.fontSize !== 'inherit' && {\n    fontSize: `var(--Icon-fontSize, ${theme.fontSize[ownerState.fontSize]})`\n  }, {\n    color: 'var(--Icon-color)'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'context' && theme.vars.palette[ownerState.color] && {\n    color: theme.vars.palette[ownerState.color].plainColor\n  }, ownerState.color === 'context' && {\n    color: (_theme$variants$plain = theme.variants.plain) == null ? void 0 : (_theme$variants$plain2 = _theme$variants$plain[ownerState.color]) == null ? void 0 : _theme$variants$plain2.color\n  });\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoySvgIcon'\n  });\n  const {\n      children,\n      className,\n      color = 'inherit',\n      component = 'svg',\n      fontSize = 'xl',\n      htmlColor,\n      inheritViewBox = false,\n      titleAccess,\n      viewBox = '0 0 24 24'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: SvgIconRoot,\n    externalForwardedProps: _extends({}, other, {\n      component\n    }),\n    ownerState,\n    additionalProps: _extends({\n      color: htmlColor,\n      focusable: false\n    }, titleAccess && {\n      role: 'img'\n    }, !titleAccess && {\n      'aria-hidden': true\n    }, !inheritViewBox && {\n      viewBox\n    })\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'inherit', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 1rem, but can be configure to inherit font size.\n   * @default 'xl'\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'lg', 'md', 'sm', 'xl', 'xl2', 'xl3', 'xl4', 'xl5', 'xl6', 'xl7', 'xs', 'xs2', 'xs3']),\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nexport default SvgIcon;"]},"metadata":{},"sourceType":"module"}