{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateComment.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateComment = _ref => {\n  _s();\n\n  let {\n    openCreateComment,\n    handleCloseCreateComment\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [severity, setSeverity] = useState('success');\n  const [message, setMessage] = useState([]);\n\n  const handleSubmitCreateComment = () => {\n    let new_message = [];\n\n    if (password !== confirmPassword) {\n      new_message.push(\"Passwords do not match\");\n    }\n\n    if (user === \"\" || password === \"\" || confirmPassword === \"\") {\n      new_message.push(\"Fill in all fields\");\n    }\n\n    if (new_message.length > 0) {\n      setSeverity('error');\n      setMessage(new_message);\n    } else {\n      fetch(\"http://localhost:3000/users\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user,\n          password\n        })\n      }).then(response => {\n        if (response.ok) {\n          setSeverity('success');\n          new_message.push(\"Account created successfully. Log in to do more!\");\n          setMessage(new_message);\n          resetFormInputs();\n        } else {\n          setSeverity('error');\n          new_message.push(\"Some error occured\");\n          setMessage(new_message);\n        }\n      }).catch(error => console.log(error.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openCreateComment,\n    onClose: handleCloseCreateComment,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"What's on your mind?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        type: \"text\",\n        margin: \"normal\",\n        label: \"Say something here...\",\n        fullWidth: true,\n        variant: \"standard\",\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCloseCreateComment,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmitCreateComment,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateComment, \"5eC21Zykv/8H2alw4yyULsjvKrY=\");\n\n_c = CreateComment;\nexport default CreateComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComment\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateComment.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","React","useState","CreateComment","openCreateComment","handleCloseCreateComment","title","setTitle","body","setBody","severity","setSeverity","message","setMessage","handleSubmitCreateComment","new_message","password","confirmPassword","push","user","length","fetch","method","headers","JSON","stringify","then","response","ok","resetFormInputs","catch","error","console","log"],"mappings":"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","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openCreateComment: boolean;\n    handleCloseCreateComment: () => void;\n}\n\nconst CreateComment: React.FC<Props> = ({openCreateComment, handleCloseCreateComment}: Props) => {\n    const [title, setTitle] = useState<string>(\"\");\n    const [body, setBody] = useState<string>(\"\");\n    const [severity, setSeverity] = useState<AlertColor | undefined>('success');\n    const [message, setMessage] = useState<string[]>([]);\n    \n    const handleSubmitCreateComment = () => {\n        let new_message: string[] = [];\n        if (password !== confirmPassword) {\n            new_message.push(\"Passwords do not match\");\n        }\n        if (user === \"\" || password === \"\" || confirmPassword === \"\") {\n            new_message.push(\"Fill in all fields\");\n        }\n        if (new_message.length > 0) {\n            setSeverity('error');\n            setMessage(new_message);\n        } else {\n            fetch(\"http://localhost:3000/users\", {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                body: JSON.stringify({\n                    user,\n                    password,\n                }),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSeverity('success');\n                        new_message.push(\"Account created successfully. Log in to do more!\")\n                        setMessage(new_message);\n                        resetFormInputs();\n                    } else {\n                        setSeverity('error');\n                        new_message.push(\"Some error occured\");\n                        setMessage(new_message);\n                    }\n                })\n                .catch((error) => console.log(error.message));\n        }\n    }\n\n    return (\n        <Dialog open={openCreateComment} onClose={handleCloseCreateComment} fullWidth>\n            <DialogTitle>What's on your mind?</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    type='text'\n                    margin=\"normal\"\n                    label=\"Say something here...\"\n                    fullWidth\n                    variant=\"standard\"\n                    multiline\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseCreateComment}>Cancel</Button>\n                <Button onClick={handleSubmitCreateComment}>Comment</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default CreateComment;"]},"metadata":{},"sourceType":"module"}