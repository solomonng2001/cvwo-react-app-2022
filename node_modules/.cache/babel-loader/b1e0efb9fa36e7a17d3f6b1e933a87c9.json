{"ast":null,"code":"import _slicedToArray from\"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Dialog,DialogActions,DialogContent,DialogTitle}from'@material-ui/core';import AlertUser from'../AlertUser';import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// Delete thread dialog page\nvar DeleteThread=function DeleteThread(_ref){var API=_ref.API,openDeleteThread=_ref.openDeleteThread,handleCloseDeleteThread=_ref.handleCloseDeleteThread,thread_page_id=_ref.thread_page_id;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),severity=_useState2[0],setSeverity=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];// On clicking submit button, delete thread in backend\nvar handleSubmitDeleteThread=function handleSubmitDeleteThread(){var new_message=[];fetch(API+\"/thread_pages/\"+thread_page_id.toString(),{method:'DELETE',headers:{\"Content-Type\":\"application/json\"}}).then(function(response){if(response.ok){setSeverity('success');new_message.push(\"You have deleted thread!\");setMessage(new_message);var url=window.location.href;// If page before opening dialog was individual threads page (ThreadView page), return to home, since thread deleted\n// Else, return to page user was on\nsetTimeout(url.startsWith(window.location.protocol+\"//\"+window.location.host+\"/thread\")?function(){return window.location.replace(window.location.protocol+\"//\"+window.location.host);}:function(){return window.location.reload();},1000);}else{setSeverity('error');new_message.push(\"Some error occured\");setMessage(new_message);}}).catch(function(error){return console.log(error.message);});};// Dialog page contains \"cancel\" and \"delete thread\" buttons\nreturn/*#__PURE__*/_jsxs(Dialog,{open:openDeleteThread,onClose:handleCloseDeleteThread,fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Are you sure you want to delete this thread?\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(AlertUser,{severity:severity,message:message})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDeleteThread,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmitDeleteThread,children:\"Delete Thread\"})]})]});};export default DeleteThread;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/thread/DeleteThread.tsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","AlertUser","React","useState","DeleteThread","API","openDeleteThread","handleCloseDeleteThread","thread_page_id","undefined","severity","setSeverity","message","setMessage","handleSubmitDeleteThread","new_message","fetch","toString","method","headers","then","response","ok","push","url","window","location","href","setTimeout","startsWith","protocol","host","replace","reload","catch","error","console","log"],"mappings":"oLAAA,OAASA,MAAT,CAAiBC,MAAjB,CAAyBC,aAAzB,CAAwCC,aAAxC,CACIC,WADJ,KACuB,mBADvB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAGA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFASA;AACA,GAAMC,CAAAA,YAA6B,CAAG,QAAhCA,CAAAA,YAAgC,MAA6E,IAA3EC,CAAAA,GAA2E,MAA3EA,GAA2E,CAAtEC,gBAAsE,MAAtEA,gBAAsE,CAApDC,uBAAoD,MAApDA,uBAAoD,CAA3BC,cAA2B,MAA3BA,cAA2B,CAC/G,cAAgCL,QAAQ,CAAyBM,SAAzB,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eACA,eAA8BR,QAAQ,CAAW,EAAX,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAEA;AACA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CACnC,GAAIC,CAAAA,WAAqB,CAAG,EAA5B,CACAC,KAAK,CAACX,GAAG,CAAG,gBAAN,CAAyBG,cAAc,CAACS,QAAf,EAA1B,CAAqD,CACtDC,MAAM,CAAE,QAD8C,CAEtDC,OAAO,CAAE,CACL,eAAgB,kBADX,CAF6C,CAArD,CAAL,CAMKC,IANL,CAMU,SAACC,QAAD,CAAc,CAChB,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACbX,WAAW,CAAC,SAAD,CAAX,CACAI,WAAW,CAACQ,IAAZ,CAAiB,0BAAjB,EACAV,UAAU,CAACE,WAAD,CAAV,CACA,GAAMS,CAAAA,GAAG,CAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B,CAEA;AACA;AACAC,UAAU,CAACJ,GAAG,CAACK,UAAJ,CAAeJ,MAAM,CAACC,QAAP,CAAgBI,QAAhB,CAA2B,IAA3B,CAAkCL,MAAM,CAACC,QAAP,CAAgBK,IAAlD,CAAyD,SAAxE,EACL,iBAAMN,CAAAA,MAAM,CAACC,QAAP,CAAgBM,OAAhB,CAAwBP,MAAM,CAACC,QAAP,CAAgBI,QAAhB,CAA2B,IAA3B,CAAkCL,MAAM,CAACC,QAAP,CAAgBK,IAA1E,CAAN,EADK,CAEL,iBAAMN,CAAAA,MAAM,CAACC,QAAP,CAAgBO,MAAhB,EAAN,EAFI,CAE4B,IAF5B,CAAV,CAGH,CAXD,IAWO,CACHtB,WAAW,CAAC,OAAD,CAAX,CACAI,WAAW,CAACQ,IAAZ,CAAiB,oBAAjB,EACAV,UAAU,CAACE,WAAD,CAAV,CACH,CACJ,CAvBL,EAwBKmB,KAxBL,CAwBW,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACvB,OAAlB,CAAX,EAxBX,EAyBH,CA3BD,CA6BA;AACA,mBACI,MAAC,MAAD,EAAQ,IAAI,CAAEN,gBAAd,CAAgC,OAAO,CAAEC,uBAAzC,CAAkE,SAAS,KAA3E,wBACI,KAAC,WAAD,2DADJ,cAGI,KAAC,aAAD,wBACI,KAAC,SAAD,EAAW,QAAQ,CAAEG,QAArB,CAA+B,OAAO,CAAEE,OAAxC,EADJ,EAHJ,cAMI,MAAC,aAAD,yBACI,KAAC,MAAD,EAAQ,OAAO,CAAEL,uBAAjB,oBADJ,cAEI,KAAC,MAAD,EAAQ,OAAO,CAAEO,wBAAjB,2BAFJ,GANJ,GADJ,CAaH,CAhDD,CAkDA,cAAeV,CAAAA,YAAf","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, \n    DialogTitle } from '@material-ui/core';\nimport AlertUser from '../AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openDeleteThread: boolean;\n    handleCloseDeleteThread: () => void;\n    thread_page_id: number;\n    API: string;\n}\n\n// Delete thread dialog page\nconst DeleteThread: React.FC<Props> = ({API, openDeleteThread, handleCloseDeleteThread, thread_page_id}: Props) => {\n    const [severity, setSeverity] = useState<AlertColor | undefined>(undefined);\n    const [message, setMessage] = useState<string[]>([]);\n    \n    // On clicking submit button, delete thread in backend\n    const handleSubmitDeleteThread = () => {\n        let new_message: string[] = [];\n        fetch(API + \"/thread_pages/\" + thread_page_id.toString(), {\n            method: 'DELETE',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                },\n        })\n            .then((response) => {\n                if (response.ok) {\n                    setSeverity('success');\n                    new_message.push(\"You have deleted thread!\")\n                    setMessage(new_message);\n                    const url = window.location.href;\n\n                    // If page before opening dialog was individual threads page (ThreadView page), return to home, since thread deleted\n                    // Else, return to page user was on\n                    setTimeout(url.startsWith(window.location.protocol + \"//\" + window.location.host + \"/thread\")\n                        ? () => window.location.replace(window.location.protocol + \"//\" + window.location.host)\n                        : () => window.location.reload(), 1000);\n                } else {\n                    setSeverity('error');\n                    new_message.push(\"Some error occured\");\n                    setMessage(new_message);\n                }\n            })\n            .catch((error) => console.log(error.message));\n    }\n\n    // Dialog page contains \"cancel\" and \"delete thread\" buttons\n    return (\n        <Dialog open={openDeleteThread} onClose={handleCloseDeleteThread} fullWidth>\n            <DialogTitle>Are you sure you want to delete this thread?</DialogTitle>\n            {/* Display success / error messages */}\n            <DialogContent>\n                <AlertUser severity={severity} message={message}/>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseDeleteThread}>Cancel</Button>\n                <Button onClick={handleSubmitDeleteThread}>Delete Thread</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default DeleteThread;"]},"metadata":{},"sourceType":"module"}