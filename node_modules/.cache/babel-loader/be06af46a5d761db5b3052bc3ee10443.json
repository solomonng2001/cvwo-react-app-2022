{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/ThreadMainPost.tsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport Header from './Header';\nimport AvatarUserTimeTags from './AvatarUserTimeTags';\nimport DeleteEditComment from './DeleteEditComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThreadMainPost = _ref => {\n  let {\n    toOverflow,\n    thread\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AvatarUserTimeTags, {\n          tagged: true,\n          user: \"John\",\n          time: thread.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: toOverflow,\n          align: \"left\",\n          variant: \"body1\",\n          children: \"During the development phase, you will likely be running and hosting your application on your local machine, and therefore only you will be able to access it. Deployment means making the application available for use to the public. To do so, you need a server to build and run your application and to accept client requests. In addition, a domain name is necessary so that people can access your application through a URL.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteEditComment, {\n          commentable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ThreadMainPost;\nexport default ThreadMainPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreadMainPost\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/ThreadMainPost.tsx"],"names":["React","Card","CardContent","Typography","Stack","Header","AvatarUserTimeTags","DeleteEditComment","ThreadMainPost","toOverflow","thread","created_at"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,QAA6C,mBAA7C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAQA,MAAMC,cAA+B,GAAG,QAAkC;AAAA,MAAhC;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAgC;AACtE,sBACI,QAAC,IAAD;AAAA,2BACA,QAAC,WAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,OAAO,EAAE,CAAnC;AAAA,gCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,kBAAD;AAAoB,UAAA,MAAM,EAAE,IAA5B;AAAkC,UAAA,IAAI,EAAE,MAAxC;AAAgD,UAAA,IAAI,EAAEA,MAAM,CAACC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,UAAD;AAAY,UAAA,MAAM,EAAEF,UAApB;AAAgC,UAAA,KAAK,EAAC,MAAtC;AAA6C,UAAA,OAAO,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAMI,QAAC,iBAAD;AAAmB,UAAA,WAAW,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAfD;;KAAMD,c;AAiBN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography} from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport Header from './Header';\nimport AvatarUserTimeTags from './AvatarUserTimeTags';\nimport DeleteEditComment from './DeleteEditComment';\nimport Thread from '../types/Thread';\n\ntype Props = {\n    toOverflow: boolean;\n    thread: Thread;\n}\n\nconst ThreadMainPost: React.FC<Props> = ( {toOverflow, thread}: Props) => {\n    return (\n        <Card>\n        <CardContent>\n            <Stack direction='column' spacing={3}>\n                <Header />\n                <AvatarUserTimeTags tagged={true} user={\"John\"} time={thread.created_at}/>\n                <Typography noWrap={toOverflow} align='left' variant=\"body1\">                   \n        During the development phase, you will likely be running and hosting your application on your local machine, and therefore only you will be able to access it. Deployment means making the application available for use to the public. To do so, you need a server to build and run your application and to accept client requests. In addition, a domain name is necessary so that people can access your application through a URL.\n                </Typography>\n                <DeleteEditComment commentable={true}/>\n            </Stack>\n        </CardContent>\n        </Card>\n    );\n};\n\nexport default ThreadMainPost;"]},"metadata":{},"sourceType":"module"}