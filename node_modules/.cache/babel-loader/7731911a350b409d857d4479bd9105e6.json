{"ast":null,"code":"import _slicedToArray from\"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Home from'./pages/Home';import ThreadPage from'./pages/ThreadPage';import React,{useEffect,useState}from'react';import'./App.css';import{BrowserRouter,Route,Routes}from'react-router-dom';import{createTheme,ThemeProvider}from'@mui/material/styles';import NavBar from'./components/NavBar';import GlobalMessage from'./components/GlobalMessage';import MyThreads from'./pages/MyThreads';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API=\"http://localhost:3000/\";var theme=createTheme({palette:{primary:{light:'#757ce8',main:'#3f50b5',dark:'#002884',contrastText:'#fff'},secondary:{light:'#ff7961',main:'#f44336',dark:'#ba000d',contrastText:'#000'}}});var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),globalMessage=_useState2[0],setGlobalMessage=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),severityGlobalMessage=_useState4[0],setSeverityGlobalMessage=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),openGlobalMessage=_useState6[0],setOpenGlobalMessage=_useState6[1];var handleCloseGlobalMessage=function handleCloseGlobalMessage(){setOpenGlobalMessage(false);setSeverityGlobalMessage(undefined);setGlobalMessage([]);};var handleOpenGlobalMessage=function handleOpenGlobalMessage(){setOpenGlobalMessage(true);};var globalMessageState={setGlobalMessage:setGlobalMessage,setSeverityGlobalMessage:setSeverityGlobalMessage,handleOpenGlobalMessage:handleOpenGlobalMessage};var emptyCurrentUser={id:0,username:\"\",password_digest:\"\",created_at:\"\",updated_at:\"\"};var _useState7=useState(emptyCurrentUser),_useState8=_slicedToArray(_useState7,2),currentUser=_useState8[0],setCurrentUser=_useState8[1];var currentUserState={currentUser:currentUser,setCurrentUser:setCurrentUser,emptyCurrentUser:emptyCurrentUser,isLoggedIn:currentUser.id!==0};useEffect(function(){var new_message=[];var token=localStorage.getItem(\"token\");if(token){fetch(API+\"/login\",{method:\"GET\",headers:{Authorization:\"\".concat(token)}}).then(function(response){return response.json();}).then(function(data){if(data.error){setSeverityGlobalMessage('error');data.error.map(function(error){return new_message.push(error);});setGlobalMessage(new_message);}else{setCurrentUser(data);}});}},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(NavBar,{API:API,currentUserState:currentUserState,globalMessageState:globalMessageState}),/*#__PURE__*/_jsx(GlobalMessage,{globalMessage:globalMessage,severityGlobalMessage:severityGlobalMessage,openGlobalMessage:openGlobalMessage,handleCloseGlobalMessage:handleCloseGlobalMessage}),/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/thread/:threadID\",element:/*#__PURE__*/_jsx(ThreadPage,{globalMessageState:globalMessageState,currentUserState:currentUserState,API:API})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{globalMessageState:globalMessageState,currentUserState:currentUserState,API:API})}),/*#__PURE__*/_jsx(Route,{path:\"/mythreads\",element:/*#__PURE__*/_jsx(MyThreads,{globalMessageState:globalMessageState,currentUserState:currentUserState,API:API})})]})})]})});};export default App;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/App.tsx"],"names":["Home","ThreadPage","React","useEffect","useState","BrowserRouter","Route","Routes","createTheme","ThemeProvider","NavBar","GlobalMessage","MyThreads","API","theme","palette","primary","light","main","dark","contrastText","secondary","App","globalMessage","setGlobalMessage","undefined","severityGlobalMessage","setSeverityGlobalMessage","openGlobalMessage","setOpenGlobalMessage","handleCloseGlobalMessage","handleOpenGlobalMessage","globalMessageState","emptyCurrentUser","id","username","password_digest","created_at","updated_at","currentUser","setCurrentUser","currentUserState","isLoggedIn","new_message","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","data","error","map","push"],"mappings":"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","sourcesContent":["import Home from './pages/Home';\nimport ThreadPage from './pages/ThreadPage';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport NavBar from './components/NavBar';\nimport CurrentUser from './types/CurrentUser';\nimport GlobalMessage from './components/GlobalMessage';\nimport { AlertColor } from '@mui/material/Alert';\nimport MyThreads from './pages/MyThreads';\n\nconst API: string = \"http://localhost:3000/\";\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        light: '#757ce8',\n        main: '#3f50b5',\n        dark: '#002884',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n  });\n\nconst App: React.FC = () => {\n  const [globalMessage, setGlobalMessage] = useState<string[]>([]);\n  const [severityGlobalMessage, setSeverityGlobalMessage] = useState<AlertColor | undefined>(undefined);\n  const [openGlobalMessage, setOpenGlobalMessage] = useState<boolean>(true);\n  const handleCloseGlobalMessage = () => {\n      setOpenGlobalMessage(false);\n      setSeverityGlobalMessage(undefined);\n      setGlobalMessage([]);\n  }\n  const handleOpenGlobalMessage = () => {\n    setOpenGlobalMessage(true);\n  }\n  const globalMessageState = {\n    setGlobalMessage: setGlobalMessage,\n    setSeverityGlobalMessage: setSeverityGlobalMessage,\n    handleOpenGlobalMessage: handleOpenGlobalMessage,\n  }\n\n  const emptyCurrentUser = {\n    id: 0,\n    username: \"\",\n    password_digest: \"\",\n    created_at: \"\",\n    updated_at: \"\",\n  }\n  const [currentUser, setCurrentUser] = useState<CurrentUser>(emptyCurrentUser);\n  const currentUserState = {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    emptyCurrentUser: emptyCurrentUser,\n    isLoggedIn: currentUser.id !== 0,\n  }\n\n  useEffect(() => {\n    let new_message: string[] = [];\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      fetch(API + \"/login\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `${token}`\n        }\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.error) {\n          setSeverityGlobalMessage('error');\n          data.error.map((error: string) =>\n              new_message.push(error));\n          setGlobalMessage(new_message);\n        } else {\n          setCurrentUser(data);\n        }\n      })\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n          <NavBar API={API} currentUserState={currentUserState} globalMessageState={globalMessageState}/>\n          < GlobalMessage globalMessage={globalMessage} severityGlobalMessage={severityGlobalMessage} openGlobalMessage={openGlobalMessage} handleCloseGlobalMessage={handleCloseGlobalMessage}/>\n          <BrowserRouter>\n            <Routes>\n                <Route path=\"/thread/:threadID\" element={<ThreadPage globalMessageState={globalMessageState} currentUserState={currentUserState} API={API}/>} />\n                <Route path=\"/\" element={<Home globalMessageState={globalMessageState} currentUserState={currentUserState} API={API}/>} />\n                <Route path=\"/mythreads\" element={<MyThreads globalMessageState={globalMessageState} currentUserState={currentUserState} API={API}/>} />\n            </Routes>\n         </BrowserRouter>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}