{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"children\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getCardCoverUtilityClass } from './cardCoverClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardCoverUtilityClass, {});\n};\n\nconst CardCoverRoot = styled('div', {\n  name: 'JoyCardCover',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  borderRadius: 'var(--CardCover-radius)',\n  // use data-attribute instead of :first-child to support zero config SSR (emotion)\n  // use nested selector for integrating with nextjs image `fill` layout (spans are inserted on top of the img)\n  '& [data-first-child]': {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    boxSizing: 'border-box',\n    borderRadius: 'var(--CardCover-radius)',\n    margin: 0,\n    padding: 0,\n    '& > img': {\n      // support art-direction that uses <picture><img /></picture>\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover'\n    }\n  }\n});\nconst CardCover = /*#__PURE__*/React.forwardRef(function CardCover(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCardCover'\n  });\n\n  const {\n    className,\n    component = 'div',\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(CardCoverRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: React.Children.map(children, (child, index) => index === 0 && /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n      'data-first-child': ''\n    }) : child)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardCover.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used to render icon or text elements inside the CardCover if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardCover;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/CardCover/CardCover.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","PropTypes","unstable_composeClasses","composeClasses","useThemeProps","styled","getCardCoverUtilityClass","jsx","_jsx","useUtilityClasses","slots","root","CardCoverRoot","name","slot","overridesResolver","props","styles","position","zIndex","top","left","width","height","borderRadius","display","justifyContent","alignItems","objectFit","boxSizing","margin","padding","CardCover","forwardRef","inProps","ref","className","component","children","other","ownerState","classes","as","Children","map","child","index","isValidElement","cloneElement","process","env","NODE_ENV","propTypes","node","string","elementType","sx","oneOfType","arrayOf","func","object","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\", \"children\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getCardCoverUtilityClass } from './cardCoverClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardCoverUtilityClass, {});\n};\nconst CardCoverRoot = styled('div', {\n  name: 'JoyCardCover',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  borderRadius: 'var(--CardCover-radius)',\n  // use data-attribute instead of :first-child to support zero config SSR (emotion)\n  // use nested selector for integrating with nextjs image `fill` layout (spans are inserted on top of the img)\n  '& [data-first-child]': {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    boxSizing: 'border-box',\n    borderRadius: 'var(--CardCover-radius)',\n    margin: 0,\n    padding: 0,\n    '& > img': {\n      // support art-direction that uses <picture><img /></picture>\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover'\n    }\n  }\n});\nconst CardCover = /*#__PURE__*/React.forwardRef(function CardCover(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCardCover'\n  });\n  const {\n      className,\n      component = 'div',\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(CardCoverRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: React.Children.map(children, (child, index) => index === 0 && /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n      'data-first-child': ''\n    }) : child)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardCover.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the CardCover if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardCover;"]},"metadata":{},"sourceType":"module"}