{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"size\", \"variant\", \"children\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AvatarGroupContext = /*#__PURE__*/React.createContext(undefined);\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, {});\n};\n\nconst AvatarGroupGroupRoot = styled('div', {\n  name: 'JoyAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return _extends({}, ownerState.size === 'sm' && {\n    '--AvatarGroup-gap': '-0.375rem',\n    '--Avatar-ringSize': '2px'\n  }, ownerState.size === 'md' && {\n    '--AvatarGroup-gap': '-0.5rem',\n    '--Avatar-ringSize': '2px'\n  }, ownerState.size === 'lg' && {\n    '--AvatarGroup-gap': '-0.625rem',\n    '--Avatar-ringSize': '4px'\n  }, {\n    '--Avatar-ring': `0 0 0 var(--Avatar-ringSize) var(--Avatar-ringColor, ${theme.vars.palette.background.surface})`,\n    '--Avatar-marginInlineStart': 'var(--AvatarGroup-gap)',\n    display: 'flex',\n    marginInlineStart: 'calc(-1 * var(--AvatarGroup-gap))'\n  });\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAvatarGroup'\n  });\n\n  const {\n    className,\n    color,\n    component = 'div',\n    size = 'md',\n    variant,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = React.useMemo(() => _extends({}, props, {\n    color,\n    component,\n    size,\n    variant\n  }), [color, component, props, size, variant]);\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(AvatarGroupContext.Provider, {\n    value: ownerState,\n    children: /*#__PURE__*/_jsx(AvatarGroupGroupRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used to render icon or text elements inside the AvatarGroup if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['lg', 'md', 'sm']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/AvatarGroup/AvatarGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","clsx","PropTypes","unstable_composeClasses","composeClasses","useThemeProps","styled","getAvatarGroupUtilityClass","jsx","_jsx","AvatarGroupContext","createContext","undefined","useUtilityClasses","slots","root","AvatarGroupGroupRoot","name","slot","overridesResolver","props","styles","ownerState","theme","size","vars","palette","background","surface","display","marginInlineStart","AvatarGroup","forwardRef","inProps","ref","className","color","component","variant","children","other","useMemo","classes","Provider","value","as","process","env","NODE_ENV","propTypes","node","string","oneOfType","oneOf","elementType","sx","arrayOf","func","object","bool"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"size\", \"variant\", \"children\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const AvatarGroupContext = /*#__PURE__*/React.createContext(undefined);\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, {});\n};\nconst AvatarGroupGroupRoot = styled('div', {\n  name: 'JoyAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => _extends({}, ownerState.size === 'sm' && {\n  '--AvatarGroup-gap': '-0.375rem',\n  '--Avatar-ringSize': '2px'\n}, ownerState.size === 'md' && {\n  '--AvatarGroup-gap': '-0.5rem',\n  '--Avatar-ringSize': '2px'\n}, ownerState.size === 'lg' && {\n  '--AvatarGroup-gap': '-0.625rem',\n  '--Avatar-ringSize': '4px'\n}, {\n  '--Avatar-ring': `0 0 0 var(--Avatar-ringSize) var(--Avatar-ringColor, ${theme.vars.palette.background.surface})`,\n  '--Avatar-marginInlineStart': 'var(--AvatarGroup-gap)',\n  display: 'flex',\n  marginInlineStart: 'calc(-1 * var(--AvatarGroup-gap))'\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAvatarGroup'\n  });\n  const {\n      className,\n      color,\n      component = 'div',\n      size = 'md',\n      variant,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = React.useMemo(() => _extends({}, props, {\n    color,\n    component,\n    size,\n    variant\n  }), [color, component, props, size, variant]);\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(AvatarGroupContext.Provider, {\n    value: ownerState,\n    children: /*#__PURE__*/_jsx(AvatarGroupGroupRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the AvatarGroup if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['lg', 'md', 'sm']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"]},"metadata":{},"sourceType":"module"}