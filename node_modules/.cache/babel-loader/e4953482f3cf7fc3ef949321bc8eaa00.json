{"ast":null,"code":"import React from'react';import{Card,CardContent,makeStyles}from'@material-ui/core';import Stack from'@mui/material/Stack';import AvatarUserTimeTags from'../AvatarUserTimeTags';import DeleteEditOnComment from'./DeleteEditOnComment';import BodyAddHTML from'../BodyAddHTML';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({commentBody:{fontSize:16,whiteSpace:'pre-wrap',paddingBottom:'1em'},commentCard:{marginBottom:'1em'},metadata:{fontSize:14}});// comment card\nvar CommentItem=function CommentItem(_ref){var API=_ref.API,comment=_ref.comment,currentUserState=_ref.currentUserState;var classes=useStyles();return/*#__PURE__*/_jsx(Card,{className:classes.commentCard,children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Stack,{direction:\"column\",spacing:3,children:[/*#__PURE__*/_jsx(AvatarUserTimeTags,{tagged:false,user:comment.user.username,time:new Date(comment.created_at),tags:\"\"}),/*#__PURE__*/_jsx(BodyAddHTML,{body:comment.body,toOverflow:false}),/*#__PURE__*/_jsx(DeleteEditOnComment,{API:API,comment:comment,currentUserState:currentUserState})]})})});};export default CommentItem;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/comment/CommentItem.tsx"],"names":["React","Card","CardContent","makeStyles","Stack","AvatarUserTimeTags","DeleteEditOnComment","BodyAddHTML","useStyles","commentBody","fontSize","whiteSpace","paddingBottom","commentCard","marginBottom","metadata","CommentItem","API","comment","currentUserState","classes","user","username","Date","created_at","body"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,WAAf,CAA4BC,UAA5B,KAA8C,mBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,C,wFASA,GAAMC,CAAAA,SAAS,CAAGL,UAAU,CAAC,CACzBM,WAAW,CAAE,CACTC,QAAQ,CAAE,EADD,CAETC,UAAU,CAAE,UAFH,CAGTC,aAAa,CAAE,KAHN,CADY,CAMzBC,WAAW,CAAE,CACTC,YAAY,CAAE,KADL,CANY,CASzBC,QAAQ,CAAE,CACNL,QAAQ,CAAE,EADJ,CATe,CAAD,CAA5B,CAcA;AACA,GAAMM,CAAAA,WAA4B,CAAG,QAA/BA,CAAAA,WAA+B,MAA+C,IAA5CC,CAAAA,GAA4C,MAA5CA,GAA4C,CAAvCC,OAAuC,MAAvCA,OAAuC,CAA9BC,gBAA8B,MAA9BA,gBAA8B,CAChF,GAAMC,CAAAA,OAAO,CAAGZ,SAAS,EAAzB,CACI,mBACI,KAAC,IAAD,EAAM,SAAS,CAAEY,OAAO,CAACP,WAAzB,uBACI,KAAC,WAAD,wBACI,MAAC,KAAD,EAAO,SAAS,CAAC,QAAjB,CAA0B,OAAO,CAAE,CAAnC,wBAEI,KAAC,kBAAD,EAAoB,MAAM,CAAE,KAA5B,CAAmC,IAAI,CAAEK,OAAO,CAACG,IAAR,CAAaC,QAAtD,CAAgE,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAASL,OAAO,CAACM,UAAjB,CAAtE,CAAoG,IAAI,CAAE,EAA1G,EAFJ,cAII,KAAC,WAAD,EAAa,IAAI,CAAEN,OAAO,CAACO,IAA3B,CAAiC,UAAU,CAAE,KAA7C,EAJJ,cAMI,KAAC,mBAAD,EAAqB,GAAG,CAAER,GAA1B,CAA+B,OAAO,CAAEC,OAAxC,CAAiD,gBAAgB,CAAEC,gBAAnE,EANJ,GADJ,EADJ,EADJ,CAcP,CAhBD,CAkBA,cAAeH,CAAAA,WAAf","sourcesContent":["import Comment from '../../types/Comment';\nimport React from 'react';\nimport { Card, CardContent, makeStyles } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport AvatarUserTimeTags from '../AvatarUserTimeTags';\nimport DeleteEditOnComment from './DeleteEditOnComment';\nimport BodyAddHTML from '../BodyAddHTML';\nimport CurrentUserState from '../../types/CurrentUserState';\n\ntype Props = {\n    comment: Comment;\n    currentUserState: CurrentUserState;\n    API: string;\n};\n\nconst useStyles = makeStyles({\n    commentBody: {\n        fontSize: 16,\n        whiteSpace: 'pre-wrap',\n        paddingBottom: '1em',\n    },\n    commentCard: {\n        marginBottom: '1em',\n    },\n    metadata: {\n        fontSize: 14,\n    },\n});\n\n// comment card\nconst CommentItem: React.FC<Props> = ({ API, comment, currentUserState }: Props) => {\n    const classes = useStyles();\n        return (\n            <Card className={classes.commentCard}>\n                <CardContent>\n                    <Stack direction='column' spacing={3}>\n                        {/* user, date and time (tags disabled for comments, since only threads have tags, but both use the same abstracted element) */}\n                        <AvatarUserTimeTags tagged={false} user={comment.user.username} time={new Date(comment.created_at)} tags={\"\"}/>\n                        {/* body text with html properties handled by a parser */}\n                        <BodyAddHTML body={comment.body} toOverflow={false}/>\n                        {/* delete and edit buttons: clickable only for creators that are logged in */}\n                        <DeleteEditOnComment API={API} comment={comment} currentUserState={currentUserState}/>\n                    </Stack>\n                </CardContent>\n            </Card>\n        );\n};\n\nexport default CommentItem;\n"]},"metadata":{},"sourceType":"module"}