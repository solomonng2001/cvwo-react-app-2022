{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles } from '@mui/system';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(_ref) {\n  let {\n    children,\n    disableColorScheme = false\n  } = _ref;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => {\n        var _components$JoyTypogr, _components, _components$JoyTypogr2, _components$JoyTypogr3;\n\n        const colorSchemeStyles = {};\n\n        if (!disableColorScheme) {\n          // The CssBaseline is wrapped inside a CssVarsProvider\n          Object.entries(theme.colorSchemes).forEach(_ref2 => {\n            let [key, scheme] = _ref2;\n\n            var _scheme$palette;\n\n            colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n              colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n            };\n          });\n        }\n\n        const defaultTypographyLevel = (_components$JoyTypogr = (_components = theme.components) == null ? void 0 : (_components$JoyTypogr2 = _components.JoyTypography) == null ? void 0 : (_components$JoyTypogr3 = _components$JoyTypogr2.defaultProps) == null ? void 0 : _components$JoyTypogr3.level) != null ? _components$JoyTypogr : 'body1';\n        return _extends({\n          html: {\n            WebkitFontSmoothing: 'antialiased',\n            MozOsxFontSmoothing: 'grayscale',\n            // Change from `box-sizing: content-box` so that `width`\n            // is not affected by `padding` or `border`.\n            boxSizing: 'border-box',\n            // Fix font resize problem in iOS\n            WebkitTextSizeAdjust: '100%'\n          },\n          '*, *::before, *::after': {\n            boxSizing: 'inherit'\n          },\n          'strong, b': {\n            fontWeight: 'bold'\n          },\n          body: _extends({\n            margin: 0,\n            // Remove the margin in all browsers.\n            color: theme.vars.palette.text.primary,\n            fontFamily: theme.vars.fontFamily.body\n          }, theme.typography[defaultTypographyLevel], {\n            backgroundColor: theme.vars.palette.background.body,\n            '@media print': {\n              // Save printer ink.\n              backgroundColor: theme.vars.palette.common.white\n            },\n            // Add support for document.body.requestFullScreen().\n            // Other elements, if background transparent, are not supported.\n            '&::backdrop': {\n              backgroundColor: theme.vars.palette.background.backdrop\n            }\n          })\n        }, colorSchemeStyles);\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable `color-scheme` CSS property.\n   *\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  disableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/CssBaseline/CssBaseline.js"],"names":["_extends","React","PropTypes","GlobalStyles","jsx","_jsx","jsxs","_jsxs","CssBaseline","children","disableColorScheme","Fragment","styles","theme","_components$JoyTypogr","_components","_components$JoyTypogr2","_components$JoyTypogr3","colorSchemeStyles","Object","entries","colorSchemes","forEach","key","scheme","_scheme$palette","getColorSchemeSelector","replace","colorScheme","palette","mode","defaultTypographyLevel","components","JoyTypography","defaultProps","level","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","fontWeight","body","margin","color","vars","text","primary","fontFamily","typography","backgroundColor","background","common","white","backdrop","process","env","NODE_ENV","propTypes","node","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles } from '@mui/system';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline({\n  children,\n  disableColorScheme = false\n}) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => {\n        var _components$JoyTypogr, _components, _components$JoyTypogr2, _components$JoyTypogr3;\n        const colorSchemeStyles = {};\n        if (!disableColorScheme) {\n          // The CssBaseline is wrapped inside a CssVarsProvider\n          Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n            var _scheme$palette;\n            colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n              colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n            };\n          });\n        }\n        const defaultTypographyLevel = (_components$JoyTypogr = (_components = theme.components) == null ? void 0 : (_components$JoyTypogr2 = _components.JoyTypography) == null ? void 0 : (_components$JoyTypogr3 = _components$JoyTypogr2.defaultProps) == null ? void 0 : _components$JoyTypogr3.level) != null ? _components$JoyTypogr : 'body1';\n        return _extends({\n          html: {\n            WebkitFontSmoothing: 'antialiased',\n            MozOsxFontSmoothing: 'grayscale',\n            // Change from `box-sizing: content-box` so that `width`\n            // is not affected by `padding` or `border`.\n            boxSizing: 'border-box',\n            // Fix font resize problem in iOS\n            WebkitTextSizeAdjust: '100%'\n          },\n          '*, *::before, *::after': {\n            boxSizing: 'inherit'\n          },\n          'strong, b': {\n            fontWeight: 'bold'\n          },\n          body: _extends({\n            margin: 0,\n            // Remove the margin in all browsers.\n            color: theme.vars.palette.text.primary,\n            fontFamily: theme.vars.fontFamily.body\n          }, theme.typography[defaultTypographyLevel], {\n            backgroundColor: theme.vars.palette.background.body,\n            '@media print': {\n              // Save printer ink.\n              backgroundColor: theme.vars.palette.common.white\n            },\n            // Add support for document.body.requestFullScreen().\n            // Other elements, if background transparent, are not supported.\n            '&::backdrop': {\n              backgroundColor: theme.vars.palette.background.backdrop\n            }\n          })\n        }, colorSchemeStyles);\n      }\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Disable `color-scheme` CSS property.\n   *\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  disableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"]},"metadata":{},"sourceType":"module"}