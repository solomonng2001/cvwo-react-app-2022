{"ast":null,"code":"import _slicedToArray from\"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,TextField,Dialog,DialogActions,DialogContent,DialogTitle,DialogContentText}from'@material-ui/core';import AlertUser from'./AlertUser';import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateAccount=function CreateAccount(_ref){var API=_ref.API,openCreateAccount=_ref.openCreateAccount,handleCloseCreateAccount=_ref.handleCloseCreateAccount;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password_confirmation=_useState6[0],setPassword_confirmation=_useState6[1];var _useState7=useState(undefined),_useState8=_slicedToArray(_useState7,2),severity=_useState8[0],setSeverity=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var resetCreateAccount=function resetCreateAccount(){setUsername(\"\");setPassword(\"\");setPassword_confirmation(\"\");};var handleSubmitCreateAccount=function handleSubmitCreateAccount(){var new_message=[];fetch(API+\"/users\",{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username:username,password:password,password_confirmation:password_confirmation})}).then(function(response){if(response.ok){setSeverity('success');new_message.push(\"Account created successfully. Log in to do more!\");setMessage(new_message);resetCreateAccount();setTimeout(function(){return window.location.reload();},1000);}return response.json();}).then(function(data){if(data.error){setSeverity('error');data.error.map(function(error){return new_message.push(error);});setMessage(new_message);}}).catch(function(error){return console.log(error.message);});};return/*#__PURE__*/_jsxs(Dialog,{open:openCreateAccount,onClose:handleCloseCreateAccount,fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Join the ChitChat Community!\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"Dont have an account? Create one to create threads, comment and more...\"}),/*#__PURE__*/_jsx(AlertUser,{severity:severity,message:message}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,value:username,type:\"text\",margin:\"normal\",label:\"Username\",fullWidth:true,variant:\"outlined\",onChange:function onChange(event){return setUsername(event.target.value);}}),/*#__PURE__*/_jsx(TextField,{value:password,type:\"password\",margin:\"normal\",label:\"Password\",fullWidth:true,variant:\"outlined\",onChange:function onChange(event){return setPassword(event.target.value);}}),/*#__PURE__*/_jsx(TextField,{value:password_confirmation,type:\"password\",margin:\"normal\",label:\"Confirm Password\",fullWidth:true,variant:\"outlined\",onChange:function onChange(event){return setPassword_confirmation(event.target.value);}})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseCreateAccount,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmitCreateAccount,children:\"Create Account\"})]})]});};export default CreateAccount;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateAccount.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","AlertUser","React","useState","CreateAccount","API","openCreateAccount","handleCloseCreateAccount","username","setUsername","password","setPassword","password_confirmation","setPassword_confirmation","undefined","severity","setSeverity","message","setMessage","resetCreateAccount","handleSubmitCreateAccount","new_message","fetch","method","headers","body","JSON","stringify","then","response","ok","push","setTimeout","window","location","reload","json","data","error","map","catch","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle, DialogContentText } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openCreateAccount: boolean;\n    handleCloseCreateAccount: () => void;\n    API: string;\n}\n\nconst CreateAccount: React.FC<Props> = ({API, openCreateAccount, handleCloseCreateAccount}: Props) => {\n    const [username, setUsername] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [password_confirmation, setPassword_confirmation] = useState<string>(\"\");\n    const [severity, setSeverity] = useState<AlertColor | undefined>(undefined);\n    const [message, setMessage] = useState<string[]>([]);\n\n    const resetCreateAccount = () => {\n        setUsername(\"\");\n        setPassword(\"\");\n        setPassword_confirmation(\"\");\n    }\n\n    const handleSubmitCreateAccount = () => {\n        let new_message: string[] = [];\n        fetch(API + \"/users\", {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                },\n            body: JSON.stringify({\n                username,\n                password,\n                password_confirmation,\n            }),\n        })\n            .then((response) => {\n                if (response.ok) {\n                    setSeverity('success');\n                    new_message.push(\"Account created successfully. Log in to do more!\")\n                    setMessage(new_message);\n                    resetCreateAccount();\n                    setTimeout(() => window.location.reload(), 1000);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                if (data.error) {\n                    setSeverity('error');\n                    data.error.map((error: string) =>\n                        new_message.push(error));\n                    setMessage(new_message);\n                }\n            })\n            .catch((error) => console.log(error.message));\n    }\n\n    return (\n        <Dialog open={openCreateAccount} onClose={handleCloseCreateAccount} fullWidth>\n            <DialogTitle>Join the ChitChat Community!</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Dont have an account? Create one to create threads, comment and more...\n                </DialogContentText>\n                <AlertUser severity={severity} message={message}/>\n                    <TextField\n                        autoFocus\n                        value={username}\n                        type='text'\n                        margin=\"normal\"\n                        label=\"Username\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        value={password}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setPassword(event.target.value)}\n                    />\n                    <TextField\n                        value={password_confirmation}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Confirm Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setPassword_confirmation(event.target.value)}\n                    />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseCreateAccount}>Close</Button>\n                <Button onClick={handleSubmitCreateAccount}>Create Account</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}