{"ast":null,"code":"import React from'react';import{Grid,Chip,Typography}from'@material-ui/core';import Avatar from'@mui/material/Avatar';import moment from'moment';import Stack from'@mui/material/Stack';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// layout of user avatar, username, datae and time, and tags\nvar AvatarUserTimeTags=function AvatarUserTimeTags(_ref){var tagged=_ref.tagged,user=_ref.user,time=_ref.time,tags=_ref.tags;// if tags to be displayed (for threads)\nif(tagged){// empty array if tags is empty (so that tags array will not display empty chip)\nvar tagsArray=tags===\"\"?[]:tags.split(\",\");return/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:2,children:[/*#__PURE__*/_jsx(Avatar,{}),/*#__PURE__*/_jsxs(Stack,{direction:\"column\",children:[/*#__PURE__*/_jsx(Typography,{align:\"left\",variant:\"h5\",children:user}),/*#__PURE__*/_jsx(Typography,{align:\"left\",variant:\"subtitle1\",color:\"textSecondary\",children:moment(time).fromNow()})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:6,direction:\"row\",spacing:1,justifyContent:\"flex-end\",alignItems:\"flex-start\",children:tagsArray.map(function(tag){return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Chip,{label:tag})},tag);})})]});}// Without tags (for comments)\nreturn/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:2,children:[/*#__PURE__*/_jsx(Avatar,{}),/*#__PURE__*/_jsxs(Stack,{direction:\"column\",children:[/*#__PURE__*/_jsx(Typography,{align:\"left\",variant:\"h5\",children:user}),/*#__PURE__*/_jsx(Typography,{align:\"left\",variant:\"subtitle1\",color:\"textSecondary\",children:moment(time).fromNow()})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6})]});};export default AvatarUserTimeTags;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/AvatarUserTimeTags.tsx"],"names":["React","Grid","Chip","Typography","Avatar","moment","Stack","AvatarUserTimeTags","tagged","user","time","tags","tagsArray","split","fromNow","map","tag"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,UAArB,KAAuC,mBAAvC,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,C,wFASA;AACA,GAAMC,CAAAA,kBAAmC,CAAG,QAAtCA,CAAAA,kBAAsC,MAAyC,IAAtCC,CAAAA,MAAsC,MAAtCA,MAAsC,CAA9BC,IAA8B,MAA9BA,IAA8B,CAAxBC,IAAwB,MAAxBA,IAAwB,CAAlBC,IAAkB,MAAlBA,IAAkB,CAEjF;AACA,GAAIH,MAAJ,CAAY,CACR;AACA,GAAMI,CAAAA,SAAS,CAAGD,IAAI,GAAK,EAAT,CAAc,EAAd,CAAmBA,IAAI,CAACE,KAAL,CAAW,GAAX,CAArC,CACA,mBACI,MAAC,IAAD,EAAM,SAAS,KAAf,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACI,MAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,OAAO,CAAE,CAAhC,wBACI,KAAC,MAAD,IADJ,cAEI,MAAC,KAAD,EAAO,SAAS,CAAC,QAAjB,wBACI,KAAC,UAAD,EAAY,KAAK,CAAC,MAAlB,CAAyB,OAAO,CAAC,IAAjC,UAAwCJ,IAAxC,EADJ,cAEI,KAAC,UAAD,EAAY,KAAK,CAAC,MAAlB,CAAyB,OAAO,CAAC,WAAjC,CAA6C,KAAK,CAAC,eAAnD,UAAoEJ,MAAM,CAACK,IAAD,CAAN,CAAaI,OAAb,EAApE,EAFJ,GAFJ,GADJ,EADJ,cAUI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,SAAS,KAApB,CAAqB,EAAE,CAAE,CAAzB,CAA4B,SAAS,CAAC,KAAtC,CAA4C,OAAO,CAAE,CAArD,CAAwD,cAAc,CAAC,UAAvE,CAAkF,UAAU,CAAC,YAA7F,UACMF,SAAS,CAACG,GAAV,CAAc,SAAAC,GAAG,qBACf,KAAC,IAAD,EAAM,IAAI,KAAV,uBACI,KAAC,IAAD,EAAM,KAAK,CAAEA,GAAb,EADJ,EAAgBA,GAAhB,CADe,EAAjB,CADN,EAVJ,GADJ,CAoBH,CAED;AACA,mBACI,MAAC,IAAD,EAAM,SAAS,KAAf,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACI,MAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,OAAO,CAAE,CAAhC,wBACI,KAAC,MAAD,IADJ,cAEI,MAAC,KAAD,EAAO,SAAS,CAAC,QAAjB,wBACI,KAAC,UAAD,EAAY,KAAK,CAAC,MAAlB,CAAyB,OAAO,CAAC,IAAjC,UAAwCP,IAAxC,EADJ,cAEI,KAAC,UAAD,EAAY,KAAK,CAAC,MAAlB,CAAyB,OAAO,CAAC,WAAjC,CAA6C,KAAK,CAAC,eAAnD,UAAoEJ,MAAM,CAACK,IAAD,CAAN,CAAaI,OAAb,EAApE,EAFJ,GAFJ,GADJ,EADJ,cAUI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EAVJ,GADJ,CAeH,CA5CD,CA8CA,cAAeP,CAAAA,kBAAf","sourcesContent":["import React from 'react';\nimport { Grid, Chip, Typography } from '@material-ui/core';\nimport Avatar from '@mui/material/Avatar';\nimport moment from 'moment';\nimport Stack from '@mui/material/Stack';\n\ntype Props = {\n    tagged: boolean;\n    user: string;\n    time: Date;\n    tags: string;\n};\n\n// layout of user avatar, username, datae and time, and tags\nconst AvatarUserTimeTags: React.FC<Props> = ({ tagged, user, time, tags }: Props) => {\n\n    // if tags to be displayed (for threads)\n    if (tagged) {\n        // empty array if tags is empty (so that tags array will not display empty chip)\n        const tagsArray = tags === \"\" ? [] : tags.split(\",\");\n        return (\n            <Grid container>\n                <Grid item xs={6}>\n                    <Stack direction='row' spacing={2}>\n                        <Avatar/>\n                        <Stack direction='column'>\n                            <Typography align='left' variant='h5'>{ user }</Typography>\n                            <Typography align='left' variant='subtitle1' color='textSecondary'>{moment(time).fromNow()}</Typography>\n                        </Stack>\n                    </Stack>\n                </Grid>\n                <Grid item container xs={6} direction='row' spacing={1} justifyContent='flex-end' alignItems='flex-start'>\n                    { tagsArray.map(tag =>\n                        <Grid item key={tag}>\n                            <Chip label={tag} />\n                        </Grid>\n                    )}\n                </Grid>\n            </Grid>\n        );\n    }\n\n    // Without tags (for comments)\n    return (\n        <Grid container>\n            <Grid item xs={6}>\n                <Stack direction='row' spacing={2}>\n                    <Avatar/>\n                    <Stack direction='column'>\n                        <Typography align='left' variant='h5'>{ user }</Typography>\n                        <Typography align='left' variant='subtitle1' color='textSecondary'>{moment(time).fromNow()}</Typography>\n                    </Stack>\n                </Stack>\n            </Grid>\n            <Grid item xs={6}>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default AvatarUserTimeTags;"]},"metadata":{},"sourceType":"module"}