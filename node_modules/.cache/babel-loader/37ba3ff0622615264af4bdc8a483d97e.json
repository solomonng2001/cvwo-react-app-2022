{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/BodyAddHTML.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BodyAddHTML = _ref => {\n  let {\n    body,\n    toOverflow\n  } = _ref;\n  // const body_array: string[] = body.split('\\n').filter(ele => ele !== \"\");\n  return (\n    /*#__PURE__*/\n    // <Stack direction='column' spacing={0}>\n    //     { body_array.map(line => (\n    //         <>\n    //             <Typography noWrap={toOverflow} align='left' variant=\"body1\">\n    //                 {line}\n    //             </Typography>\n    //             <br />\n    //         </>\n    //     ))}\n    // </Stack>\n    _jsxDEV(\"div\", {\n      children: body.replace(/\\n/g, '<br />')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = BodyAddHTML;\nexport default BodyAddHTML;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyAddHTML\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/BodyAddHTML.tsx"],"names":["React","BodyAddHTML","body","toOverflow","replace"],"mappings":";AAIA,OAAOA,KAAP,MAAkB,OAAlB;;;AAOA,MAAMC,WAA4B,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAgC;AAClE;AAEA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,gBACKD,IAAI,CAACE,OAAL,CAAa,KAAb,EAAoB,QAApB;AADL;AAAA;AAAA;AAAA;AAAA;AAXJ;AAeH,CAlBD;;KAAMH,W;AAoBN,eAAeA,WAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport { lineHeight } from '@mui/system';\n\nimport React from 'react';\n\ntype Props = {\n    toOverflow: boolean;\n    body: string;\n}\n\nconst BodyAddHTML: React.FC<Props> = ({ body, toOverflow }: Props) => {\n    // const body_array: string[] = body.split('\\n').filter(ele => ele !== \"\");\n\n    return (\n        // <Stack direction='column' spacing={0}>\n        //     { body_array.map(line => (\n        //         <>\n        //             <Typography noWrap={toOverflow} align='left' variant=\"body1\">\n        //                 {line}\n        //             </Typography>\n        //             <br />\n        //         </>\n        //     ))}\n        // </Stack>\n        <div >\n            {body.replace(/\\n/g, '<br />')}\n        </div>\n    );\n};\n\nexport default BodyAddHTML;"]},"metadata":{},"sourceType":"module"}