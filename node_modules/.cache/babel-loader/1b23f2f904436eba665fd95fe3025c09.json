{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/DeleteComment.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteComment = _ref => {\n  _s();\n\n  let {\n    API,\n    openDeleteComment,\n    handleCloseDeleteComment,\n    comment\n  } = _ref;\n  const [severity, setSeverity] = useState(undefined);\n  const [message, setMessage] = useState([]);\n\n  const handleSubmitDeleteComment = () => {\n    let new_message = [];\n    fetch(API + \"/thread_pages/\" + comment.thread_page_id.toString() + \"/comments/\" + comment.id.toString(), {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.ok) {\n        setSeverity('success');\n        new_message.push(\"You have deleted comment!\");\n        setMessage(new_message);\n        setTimeout(() => window.location.reload(), 1000);\n      } else {\n        setSeverity('error');\n        new_message.push(\"Some error occured\");\n        setMessage(new_message);\n      }\n    }).catch(error => console.log(error.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openDeleteComment,\n    onClose: handleCloseDeleteComment,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Are you sure you want to delete this comment?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(AlertUser, {\n        severity: severity,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCloseDeleteComment,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmitDeleteComment,\n        children: \"Delete Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteComment, \"pEr66OlwwUNh2zEF56GTfKAOO9Q=\");\n\n_c = DeleteComment;\nexport default DeleteComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteComment\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/DeleteComment.tsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","AlertUser","React","useState","DeleteComment","API","openDeleteComment","handleCloseDeleteComment","comment","severity","setSeverity","undefined","message","setMessage","handleSubmitDeleteComment","new_message","fetch","thread_page_id","toString","id","method","headers","then","response","ok","push","setTimeout","window","location","reload","catch","error","console","log"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EACIC,WADJ,QACuB,mBADvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAIA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AASA,MAAMC,aAA8B,GAAG,QAAwE;AAAA;;AAAA,MAAvE;AAACC,IAAAA,GAAD;AAAMC,IAAAA,iBAAN;AAAyBC,IAAAA,wBAAzB;AAAmDC,IAAAA;AAAnD,GAAuE;AAC3G,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAyBQ,SAAzB,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAW,EAAX,CAAtC;;AAEA,QAAMW,yBAAyB,GAAG,MAAM;AACpC,QAAIC,WAAqB,GAAG,EAA5B;AACAC,IAAAA,KAAK,CAACX,GAAG,GAAG,gBAAN,GAAyBG,OAAO,CAACS,cAAR,CAAuBC,QAAvB,EAAzB,GAA6D,YAA7D,GAA4EV,OAAO,CAACW,EAAR,CAAWD,QAAX,EAA7E,EAAoG;AACrGE,MAAAA,MAAM,EAAE,QAD6F;AAErGC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAF4F,KAApG,CAAL,CAMKC,IANL,CAMWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbd,QAAAA,WAAW,CAAC,SAAD,CAAX;AACAK,QAAAA,WAAW,CAACU,IAAZ,CAAiB,2BAAjB;AACAZ,QAAAA,UAAU,CAACE,WAAD,CAAV;AACAW,QAAAA,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAP,EAAiC,IAAjC,CAAV;AACH,OALD,MAKO;AACHnB,QAAAA,WAAW,CAAC,OAAD,CAAX;AACAK,QAAAA,WAAW,CAACU,IAAZ,CAAiB,oBAAjB;AACAZ,QAAAA,UAAU,CAACE,WAAD,CAAV;AACH;AACJ,KAjBL,EAkBKe,KAlBL,CAkBYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACnB,OAAlB,CAlBtB;AAmBH,GArBD;;AAuBA,sBACI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEN,iBAAd;AAAiC,IAAA,OAAO,EAAEC,wBAA1C;AAAoE,IAAA,SAAS,MAA7E;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEE,QAArB;AAA+B,QAAA,OAAO,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,aAAD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEL,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEO,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAvCD;;GAAMV,a;;KAAAA,a;AAyCN,eAAeA,aAAf","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, \n    DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\nimport Comment from '../types/Comment';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openDeleteComment: boolean;\n    handleCloseDeleteComment: () => void;\n    comment: Comment;\n    API: string;\n}\n\nconst DeleteComment: React.FC<Props> = ({API, openDeleteComment, handleCloseDeleteComment, comment}: Props) => {\n    const [severity, setSeverity] = useState<AlertColor | undefined>(undefined);\n    const [message, setMessage] = useState<string[]>([]);\n    \n    const handleSubmitDeleteComment = () => {\n        let new_message: string[] = [];\n        fetch(API + \"/thread_pages/\" + comment.thread_page_id.toString() + \"/comments/\" + comment.id.toString(), {\n            method: 'DELETE',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                },\n        })\n            .then((response) => {\n                if (response.ok) {\n                    setSeverity('success');\n                    new_message.push(\"You have deleted comment!\")\n                    setMessage(new_message);\n                    setTimeout(() => window.location.reload(), 1000);\n                } else {\n                    setSeverity('error');\n                    new_message.push(\"Some error occured\");\n                    setMessage(new_message);\n                }\n            })\n            .catch((error) => console.log(error.message));\n    }\n\n    return (\n        <Dialog open={openDeleteComment} onClose={handleCloseDeleteComment} fullWidth>\n            <DialogTitle>Are you sure you want to delete this comment?</DialogTitle>\n            <DialogContent>\n                <AlertUser severity={severity} message={message}/>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseDeleteComment}>Cancel</Button>\n                <Button onClick={handleSubmitDeleteComment}>Delete Comment</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default DeleteComment;"]},"metadata":{},"sourceType":"module"}