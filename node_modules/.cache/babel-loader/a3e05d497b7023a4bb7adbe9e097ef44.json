{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"ratio\", \"minHeight\", \"maxHeight\", \"objectFit\", \"color\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport styled from '../styles/styled';\nimport { getAspectRatioUtilityClass } from './aspectRatioClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getAspectRatioUtilityClass, {});\n}; // Use to control the width of the content, usually in a flexbox row container\n\n\nconst AspectRatioRoot = styled('div', {\n  name: 'JoyAspectRatio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    ownerState\n  } = _ref;\n  const minHeight = typeof ownerState.minHeight === 'number' ? `${ownerState.minHeight}px` : ownerState.minHeight;\n  const maxHeight = typeof ownerState.maxHeight === 'number' ? `${ownerState.maxHeight}px` : ownerState.maxHeight;\n  return {\n    // a context variable for any child component\n    '--AspectRatio-paddingBottom': minHeight || maxHeight ? `clamp(${minHeight || '0px'}, calc(100% / (${ownerState.ratio})), ${maxHeight || '9999px'})` : `calc(100% / (${ownerState.ratio}))`,\n    flexDirection: 'column',\n    margin: 'var(--AspectRatio-margin)'\n  };\n});\nconst AspectRatioContent = styled('div', {\n  name: 'JoyAspectRatio',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n\n  var _theme$variants;\n\n  return [{\n    flex: 1,\n    position: 'relative',\n    borderRadius: 'var(--AspectRatio-radius)',\n    height: 0,\n    paddingBottom: 'var(--AspectRatio-paddingBottom)',\n    overflow: 'hidden',\n    // use data-attribute instead of :first-child to support zero config SSR (emotion)\n    // use nested selector for integrating with nextjs image `fill` layout (spans are inserted on top of the img)\n    '& [data-first-child]': {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      objectFit: ownerState.objectFit,\n      margin: 0,\n      padding: 0,\n      '& > img': {\n        // support art-direction that uses <picture><img /></picture>\n        width: '100%',\n        height: '100%',\n        objectFit: ownerState.objectFit\n      }\n    }\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];\n});\nconst AspectRatio = /*#__PURE__*/React.forwardRef(function AspectRatio(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAspectRatio'\n  });\n\n  const {\n    children,\n    ratio = '16 / 9',\n    minHeight,\n    maxHeight,\n    objectFit = 'cover',\n    color = 'neutral',\n    variant = 'soft'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    minHeight,\n    maxHeight,\n    objectFit,\n    ratio,\n    color,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: AspectRatioRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotContent, contentProps] = useSlot('content', {\n    className: classes.content,\n    elementType: AspectRatioContent,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsx(SlotContent, _extends({}, contentProps, {\n      children: React.Children.map(children, (child, index) => index === 0 && /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n        'data-first-child': ''\n      }) : child)\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AspectRatio.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used to render icon or text elements inside the AspectRatio if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']),\n\n  /**\n   * The maximum calculated height of the element (not the CSS height).\n   */\n  maxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The minimum calculated height of the element (not the CSS height).\n   */\n  minHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The CSS object-fit value of the first-child.\n   */\n  objectFit: PropTypes.oneOf(['-moz-initial', 'contain', 'cover', 'fill', 'inherit', 'initial', 'none', 'revert-layer', 'revert', 'scale-down', 'unset']),\n\n  /**\n   * The aspect-ratio of the element. The current implementation uses padding instead of the CSS aspect-ratio due to browser support.\n   * https://caniuse.com/?search=aspect-ratio\n   * @default '16 / 9'\n   */\n  ratio: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AspectRatio;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/AspectRatio/AspectRatio.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_composeClasses","composeClasses","unstable_capitalize","capitalize","useThemeProps","useSlot","styled","getAspectRatioUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","variant","color","slots","root","content","AspectRatioRoot","name","slot","overridesResolver","props","styles","minHeight","maxHeight","ratio","flexDirection","margin","AspectRatioContent","theme","_theme$variants","flex","position","borderRadius","height","paddingBottom","overflow","display","justifyContent","alignItems","boxSizing","width","objectFit","padding","variants","AspectRatio","forwardRef","inProps","ref","children","other","classes","SlotRoot","rootProps","className","elementType","externalForwardedProps","SlotContent","contentProps","Children","map","child","index","isValidElement","cloneElement","process","env","NODE_ENV","propTypes","node","oneOf","oneOfType","number","string","sx","arrayOf","func","object","bool"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,UAAD,EAAa,OAAb,EAAsB,WAAtB,EAAmC,WAAnC,EAAgD,WAAhD,EAA6D,OAA7D,EAAsE,SAAtE,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,WAA1D;AACA,SAASC,mBAAmB,IAAIC,UAAhC,QAAkD,YAAlD;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,0BAAT,QAA2C,sBAA3C;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AACA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA;AAFI,MAGFF,UAHJ;AAIA,QAAMG,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,CADM;AAEZC,IAAAA,OAAO,EAAE,CAAC,SAAD,EAAYJ,OAAO,IAAK,UAAST,UAAU,CAACS,OAAD,CAAU,EAArD,EAAwDC,KAAK,IAAK,QAAOV,UAAU,CAACU,KAAD,CAAQ,EAA3F;AAFG,GAAd;AAIA,SAAOZ,cAAc,CAACa,KAAD,EAAQP,0BAAR,EAAoC,EAApC,CAArB;AACD,CAVD,C,CAYA;;;AACA,MAAMU,eAAe,GAAGX,MAAM,CAAC,KAAD,EAAQ;AACpCY,EAAAA,IAAI,EAAE,gBAD8B;AAEpCC,EAAAA,IAAI,EAAE,MAF8B;AAGpCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACP;AAHT,CAAR,CAAN,CAIrB,QAEG;AAAA,MAFF;AACFJ,IAAAA;AADE,GAEE;AACJ,QAAMY,SAAS,GAAG,OAAOZ,UAAU,CAACY,SAAlB,KAAgC,QAAhC,GAA4C,GAAEZ,UAAU,CAACY,SAAU,IAAnE,GAAyEZ,UAAU,CAACY,SAAtG;AACA,QAAMC,SAAS,GAAG,OAAOb,UAAU,CAACa,SAAlB,KAAgC,QAAhC,GAA4C,GAAEb,UAAU,CAACa,SAAU,IAAnE,GAAyEb,UAAU,CAACa,SAAtG;AACA,SAAO;AACL;AACA,mCAA+BD,SAAS,IAAIC,SAAb,GAA0B,SAAQD,SAAS,IAAI,KAAM,kBAAiBZ,UAAU,CAACc,KAAM,OAAMD,SAAS,IAAI,QAAS,GAAnH,GAAyH,gBAAeb,UAAU,CAACc,KAAM,IAFnL;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,MAAM,EAAE;AAJH,GAAP;AAMD,CAfuB,CAAxB;AAgBA,MAAMC,kBAAkB,GAAGtB,MAAM,CAAC,KAAD,EAAQ;AACvCY,EAAAA,IAAI,EAAE,gBADiC;AAEvCC,EAAAA,IAAI,EAAE,SAFiC;AAGvCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACN;AAHN,CAAR,CAAN,CAIxB,SAGG;AAAA,MAHF;AACFa,IAAAA,KADE;AAEFlB,IAAAA;AAFE,GAGE;;AACJ,MAAImB,eAAJ;;AACA,SAAO,CAAC;AACNC,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,QAAQ,EAAE,UAFJ;AAGNC,IAAAA,YAAY,EAAE,2BAHR;AAINC,IAAAA,MAAM,EAAE,CAJF;AAKNC,IAAAA,aAAa,EAAE,kCALT;AAMNC,IAAAA,QAAQ,EAAE,QANJ;AAON;AACA;AACA,4BAAwB;AACtBC,MAAAA,OAAO,EAAE,MADa;AAEtBC,MAAAA,cAAc,EAAE,QAFM;AAGtBC,MAAAA,UAAU,EAAE,QAHU;AAItBC,MAAAA,SAAS,EAAE,YAJW;AAKtBR,MAAAA,QAAQ,EAAE,UALY;AAMtBS,MAAAA,KAAK,EAAE,MANe;AAOtBP,MAAAA,MAAM,EAAE,MAPc;AAQtBQ,MAAAA,SAAS,EAAE/B,UAAU,CAAC+B,SARA;AAStBf,MAAAA,MAAM,EAAE,CATc;AAUtBgB,MAAAA,OAAO,EAAE,CAVa;AAWtB,iBAAW;AACT;AACAF,QAAAA,KAAK,EAAE,MAFE;AAGTP,QAAAA,MAAM,EAAE,MAHC;AAITQ,QAAAA,SAAS,EAAE/B,UAAU,CAAC+B;AAJb;AAXW;AATlB,GAAD,EA2BJ,CAACZ,eAAe,GAAGD,KAAK,CAACe,QAAN,CAAejC,UAAU,CAACC,OAA1B,CAAnB,KAA0D,IAA1D,GAAiE,KAAK,CAAtE,GAA0EkB,eAAe,CAACnB,UAAU,CAACE,KAAZ,CA3BrF,CAAP;AA4BD,CArC0B,CAA3B;AAsCA,MAAMgC,WAAW,GAAG,aAAa/C,KAAK,CAACgD,UAAN,CAAiB,SAASD,WAAT,CAAqBE,OAArB,EAA8BC,GAA9B,EAAmC;AACnF,QAAM3B,KAAK,GAAGjB,aAAa,CAAC;AAC1BiB,IAAAA,KAAK,EAAE0B,OADmB;AAE1B7B,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAIA,QAAM;AACF+B,IAAAA,QADE;AAEFxB,IAAAA,KAAK,GAAG,QAFN;AAGFF,IAAAA,SAHE;AAIFC,IAAAA,SAJE;AAKFkB,IAAAA,SAAS,GAAG,OALV;AAMF7B,IAAAA,KAAK,GAAG,SANN;AAOFD,IAAAA,OAAO,GAAG;AAPR,MAQAS,KARN;AAAA,QASE6B,KAAK,GAAGtD,6BAA6B,CAACyB,KAAD,EAAQxB,SAAR,CATvC;;AAUA,QAAMc,UAAU,GAAGhB,QAAQ,CAAC,EAAD,EAAK0B,KAAL,EAAY;AACrCE,IAAAA,SADqC;AAErCC,IAAAA,SAFqC;AAGrCkB,IAAAA,SAHqC;AAIrCjB,IAAAA,KAJqC;AAKrCZ,IAAAA,KALqC;AAMrCD,IAAAA;AANqC,GAAZ,CAA3B;;AAQA,QAAMuC,OAAO,GAAGzC,iBAAiB,CAACC,UAAD,CAAjC;AACA,QAAM,CAACyC,QAAD,EAAWC,SAAX,IAAwBhD,OAAO,CAAC,MAAD,EAAS;AAC5C2C,IAAAA,GAD4C;AAE5CM,IAAAA,SAAS,EAAEH,OAAO,CAACpC,IAFyB;AAG5CwC,IAAAA,WAAW,EAAEtC,eAH+B;AAI5CuC,IAAAA,sBAAsB,EAAEN,KAJoB;AAK5CvC,IAAAA;AAL4C,GAAT,CAArC;AAOA,QAAM,CAAC8C,WAAD,EAAcC,YAAd,IAA8BrD,OAAO,CAAC,SAAD,EAAY;AACrDiD,IAAAA,SAAS,EAAEH,OAAO,CAACnC,OADkC;AAErDuC,IAAAA,WAAW,EAAE3B,kBAFwC;AAGrD4B,IAAAA,sBAAsB,EAAEN,KAH6B;AAIrDvC,IAAAA;AAJqD,GAAZ,CAA3C;AAMA,SAAO,aAAaF,IAAI,CAAC2C,QAAD,EAAWzD,QAAQ,CAAC,EAAD,EAAK0D,SAAL,EAAgB;AACzDJ,IAAAA,QAAQ,EAAE,aAAaxC,IAAI,CAACgD,WAAD,EAAc9D,QAAQ,CAAC,EAAD,EAAK+D,YAAL,EAAmB;AAClET,MAAAA,QAAQ,EAAEnD,KAAK,CAAC6D,QAAN,CAAeC,GAAf,CAAmBX,QAAnB,EAA6B,CAACY,KAAD,EAAQC,KAAR,KAAkBA,KAAK,KAAK,CAAV,IAAe,aAAahE,KAAK,CAACiE,cAAN,CAAqBF,KAArB,CAA5B,GAA0D,aAAa/D,KAAK,CAACkE,YAAN,CAAmBH,KAAnB,EAA0B;AACxJ,4BAAoB;AADoI,OAA1B,CAAvE,GAEpDA,KAFK;AADwD,KAAnB,CAAtB;AAD8B,GAAhB,CAAnB,CAAxB;AAOD,CA5CgC,CAAjC;AA6CAI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,WAAW,CAACuB;AAAU;AAAtB,EAA+C;AACrF;AACA;AACA;AACA;;AACA;AACF;AACA;AACA;AACEnB,EAAAA,QAAQ,EAAElD,SAAS,CAACsE,IATiE;;AAUrF;AACF;AACA;AACA;AACExD,EAAAA,KAAK,EAAEd,SAAS,CAACuE,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,SAA9B,EAAyC,SAAzC,EAAoD,SAApD,CAAhB,CAd8E;;AAerF;AACF;AACA;AACE9C,EAAAA,SAAS,EAAEzB,SAAS,CAACwE,SAAV,CAAoB,CAACxE,SAAS,CAACyE,MAAX,EAAmBzE,SAAS,CAAC0E,MAA7B,CAApB,CAlB0E;;AAmBrF;AACF;AACA;AACElD,EAAAA,SAAS,EAAExB,SAAS,CAACwE,SAAV,CAAoB,CAACxE,SAAS,CAACyE,MAAX,EAAmBzE,SAAS,CAAC0E,MAA7B,CAApB,CAtB0E;;AAuBrF;AACF;AACA;AACE/B,EAAAA,SAAS,EAAE3C,SAAS,CAACuE,KAAV,CAAgB,CAAC,cAAD,EAAiB,SAAjB,EAA4B,OAA5B,EAAqC,MAArC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,MAAnE,EAA2E,cAA3E,EAA2F,QAA3F,EAAqG,YAArG,EAAmH,OAAnH,CAAhB,CA1B0E;;AA2BrF;AACF;AACA;AACA;AACA;AACE7C,EAAAA,KAAK,EAAE1B,SAAS,CAACwE,SAAV,CAAoB,CAACxE,SAAS,CAACyE,MAAX,EAAmBzE,SAAS,CAAC0E,MAA7B,CAApB,CAhC8E;;AAiCrF;AACF;AACA;AACEC,EAAAA,EAAE,EAAE3E,SAAS,CAACwE,SAAV,CAAoB,CAACxE,SAAS,CAAC4E,OAAV,CAAkB5E,SAAS,CAACwE,SAAV,CAAoB,CAACxE,SAAS,CAAC6E,IAAX,EAAiB7E,SAAS,CAAC8E,MAA3B,EAAmC9E,SAAS,CAAC+E,IAA7C,CAApB,CAAlB,CAAD,EAA6F/E,SAAS,CAAC6E,IAAvG,EAA6G7E,SAAS,CAAC8E,MAAvH,CAApB,CApCiF;;AAqCrF;AACF;AACA;AACA;AACEjE,EAAAA,OAAO,EAAEb;AAAU;AAAD,GAAuCwE,SAAhD,CAA0D,CAACxE,SAAS,CAACuE,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,EAAsB,MAAtB,EAA8B,OAA9B,CAAhB,CAAD,EAA0DvE,SAAS,CAAC0E,MAApE,CAA1D;AAzC4E,CAAvF,GA0CI,KAAK,CA1CT;AA2CA,eAAe5B,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"ratio\", \"minHeight\", \"maxHeight\", \"objectFit\", \"color\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport styled from '../styles/styled';\nimport { getAspectRatioUtilityClass } from './aspectRatioClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getAspectRatioUtilityClass, {});\n};\n\n// Use to control the width of the content, usually in a flexbox row container\nconst AspectRatioRoot = styled('div', {\n  name: 'JoyAspectRatio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState\n}) => {\n  const minHeight = typeof ownerState.minHeight === 'number' ? `${ownerState.minHeight}px` : ownerState.minHeight;\n  const maxHeight = typeof ownerState.maxHeight === 'number' ? `${ownerState.maxHeight}px` : ownerState.maxHeight;\n  return {\n    // a context variable for any child component\n    '--AspectRatio-paddingBottom': minHeight || maxHeight ? `clamp(${minHeight || '0px'}, calc(100% / (${ownerState.ratio})), ${maxHeight || '9999px'})` : `calc(100% / (${ownerState.ratio}))`,\n    flexDirection: 'column',\n    margin: 'var(--AspectRatio-margin)'\n  };\n});\nconst AspectRatioContent = styled('div', {\n  name: 'JoyAspectRatio',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants;\n  return [{\n    flex: 1,\n    position: 'relative',\n    borderRadius: 'var(--AspectRatio-radius)',\n    height: 0,\n    paddingBottom: 'var(--AspectRatio-paddingBottom)',\n    overflow: 'hidden',\n    // use data-attribute instead of :first-child to support zero config SSR (emotion)\n    // use nested selector for integrating with nextjs image `fill` layout (spans are inserted on top of the img)\n    '& [data-first-child]': {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      objectFit: ownerState.objectFit,\n      margin: 0,\n      padding: 0,\n      '& > img': {\n        // support art-direction that uses <picture><img /></picture>\n        width: '100%',\n        height: '100%',\n        objectFit: ownerState.objectFit\n      }\n    }\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];\n});\nconst AspectRatio = /*#__PURE__*/React.forwardRef(function AspectRatio(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAspectRatio'\n  });\n  const {\n      children,\n      ratio = '16 / 9',\n      minHeight,\n      maxHeight,\n      objectFit = 'cover',\n      color = 'neutral',\n      variant = 'soft'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    minHeight,\n    maxHeight,\n    objectFit,\n    ratio,\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: AspectRatioRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotContent, contentProps] = useSlot('content', {\n    className: classes.content,\n    elementType: AspectRatioContent,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsx(SlotContent, _extends({}, contentProps, {\n      children: React.Children.map(children, (child, index) => index === 0 && /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n        'data-first-child': ''\n      }) : child)\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AspectRatio.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Used to render icon or text elements inside the AspectRatio if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']),\n  /**\n   * The maximum calculated height of the element (not the CSS height).\n   */\n  maxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The minimum calculated height of the element (not the CSS height).\n   */\n  minHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The CSS object-fit value of the first-child.\n   */\n  objectFit: PropTypes.oneOf(['-moz-initial', 'contain', 'cover', 'fill', 'inherit', 'initial', 'none', 'revert-layer', 'revert', 'scale-down', 'unset']),\n  /**\n   * The aspect-ratio of the element. The current implementation uses padding instead of the CSS aspect-ratio due to browser support.\n   * https://caniuse.com/?search=aspect-ratio\n   * @default '16 / 9'\n   */\n  ratio: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default AspectRatio;"]},"metadata":{},"sourceType":"module"}