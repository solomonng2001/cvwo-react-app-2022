{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createCssVarsProvider as createCssVarsProvider, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\n\nvar shouldSkipGeneratingVar = function shouldSkipGeneratingVar(keys) {\n  var _keys$;\n\n  return !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/) || keys[0] === 'palette' && !!((_keys$ = keys[1]) != null && _keys$.match(/(mode|contrastThreshold|tonalOffset)/));\n};\n\nvar defaultTheme = experimental_extendTheme();\n\nvar _createCssVarsProvide = createCssVarsProvider({\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  resolveTheme: function resolveTheme(theme) {\n    var newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n\n    return newTheme;\n  },\n  shouldSkipGeneratingVar: shouldSkipGeneratingVar,\n  excludeVariablesFromRoot: excludeVariablesFromRoot\n}),\n    CssVarsProvider = _createCssVarsProvide.CssVarsProvider,\n    useColorScheme = _createCssVarsProvide.useColorScheme,\n    getInitColorSchemeScript = _createCssVarsProvide.getInitColorSchemeScript;\n\nexport { useColorScheme, getInitColorSchemeScript, shouldSkipGeneratingVar, CssVarsProvider as Experimental_CssVarsProvider };","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/material/styles/CssVarsProvider.js"],"names":["_extends","unstable_createCssVarsProvider","createCssVarsProvider","unstable_styleFunctionSx","styleFunctionSx","experimental_extendTheme","createTypography","excludeVariablesFromRoot","shouldSkipGeneratingVar","keys","_keys$","match","defaultTheme","theme","attribute","modeStorageKey","colorSchemeStorageKey","defaultColorScheme","light","dark","resolveTheme","newTheme","typography","palette","unstable_sx","sx","props","CssVarsProvider","useColorScheme","getInitColorSchemeScript","Experimental_CssVarsProvider"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,8BAA8B,IAAIC,qBAA3C,EAAkEC,wBAAwB,IAAIC,eAA9F,QAAqH,aAArH;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,wBAAP,MAAqC,4BAArC;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,IAAI,EAAI;AACtC,MAAIC,MAAJ;;AACA,SAAO,CAAC,CAACD,IAAI,CAAC,CAAD,CAAJ,CAAQE,KAAR,CAAc,uDAAd,CAAF,IAA4EF,IAAI,CAAC,CAAD,CAAJ,KAAY,SAAZ,IAAyB,CAAC,EAAE,CAACC,MAAM,GAAGD,IAAI,CAAC,CAAD,CAAd,KAAsB,IAAtB,IAA8BC,MAAM,CAACC,KAAP,CAAa,sCAAb,CAAhC,CAA7G;AACD,CAHD;;AAIA,IAAMC,YAAY,GAAGP,wBAAwB,EAA7C;;AACA,4BAIIH,qBAAqB,CAAC;AACxBW,EAAAA,KAAK,EAAED,YADiB;AAExBE,EAAAA,SAAS,EAAE,uBAFa;AAGxBC,EAAAA,cAAc,EAAE,UAHQ;AAIxBC,EAAAA,qBAAqB,EAAE,kBAJC;AAKxBC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,KAAK,EAAE,OADW;AAElBC,IAAAA,IAAI,EAAE;AAFY,GALI;AASxBC,EAAAA,YAAY,EAAE,sBAAAP,KAAK,EAAI;AACrB,QAAMQ,QAAQ,GAAGrB,QAAQ,CAAC,EAAD,EAAKa,KAAL,EAAY;AACnCS,MAAAA,UAAU,EAAEhB,gBAAgB,CAACO,KAAK,CAACU,OAAP,EAAgBV,KAAK,CAACS,UAAtB;AADO,KAAZ,CAAzB;;AAGAD,IAAAA,QAAQ,CAACG,WAAT,GAAuB,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AACxC,aAAOtB,eAAe,CAAC;AACrBqB,QAAAA,EAAE,EAAEC,KADiB;AAErBb,QAAAA,KAAK,EAAE;AAFc,OAAD,CAAtB;AAID,KALD;;AAMA,WAAOQ,QAAP;AACD,GApBuB;AAqBxBb,EAAAA,uBAAuB,EAAvBA,uBArBwB;AAsBxBD,EAAAA,wBAAwB,EAAxBA;AAtBwB,CAAD,CAJzB;AAAA,IACEoB,eADF,yBACEA,eADF;AAAA,IAEEC,cAFF,yBAEEA,cAFF;AAAA,IAGEC,wBAHF,yBAGEA,wBAHF;;AA4BA,SAASD,cAAT,EAAyBC,wBAAzB,EAAmDrB,uBAAnD,EAA4EmB,eAAe,IAAIG,4BAA/F","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createCssVarsProvider as createCssVarsProvider, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\nconst shouldSkipGeneratingVar = keys => {\n  var _keys$;\n  return !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/) || keys[0] === 'palette' && !!((_keys$ = keys[1]) != null && _keys$.match(/(mode|contrastThreshold|tonalOffset)/));\n};\nconst defaultTheme = experimental_extendTheme();\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = createCssVarsProvider({\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  resolveTheme: theme => {\n    const newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  },\n  shouldSkipGeneratingVar,\n  excludeVariablesFromRoot\n});\nexport { useColorScheme, getInitColorSchemeScript, shouldSkipGeneratingVar, CssVarsProvider as Experimental_CssVarsProvider };"]},"metadata":{},"sourceType":"module"}