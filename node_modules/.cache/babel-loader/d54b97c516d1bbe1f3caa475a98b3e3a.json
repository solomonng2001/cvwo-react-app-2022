{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"component\", \"children\", \"disabled\", \"value\", \"label\", \"variant\", \"color\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { useSlotProps } from '@mui/base/utils';\nimport { SelectUnstyledContext } from '@mui/base/SelectUnstyled';\nimport { StyledListItemButton } from '../ListItemButton/ListItemButton';\nimport { styled, useThemeProps } from '../styles';\nimport optionClasses, { getOptionUtilityClass } from './optionClasses';\nimport RowListContext from '../List/RowListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUtilityClass, {});\n};\n\nconst OptionRoot = styled(StyledListItemButton, {\n  name: 'JoyOption',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n\n  var _theme$vars$palette;\n\n  return {\n    [`&.${optionClasses.highlighted}`]: {\n      backgroundColor: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}HoverBg`]\n    }\n  };\n});\nconst Option = /*#__PURE__*/React.forwardRef(function Option(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyOption'\n  });\n\n  const {\n    component = 'li',\n    children,\n    disabled,\n    value,\n    label,\n    variant = 'plain',\n    color: colorProp = 'neutral'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const row = React.useContext(RowListContext);\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const selectOption = {\n    value,\n    label: label || children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n  const listboxRef = selectContext.listboxRef;\n  let color = colorProp;\n\n  if (optionState.selected && !inProps.color) {\n    color = 'primary';\n  }\n\n  const ownerState = _extends({}, props, optionState, {\n    component,\n    variant,\n    color,\n    row\n  });\n\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    elementType: OptionRoot,\n    externalSlotProps: {},\n    externalForwardedProps: other,\n    additionalProps: _extends({}, optionProps, {\n      ref: handleRef,\n      as: component\n    }),\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(OptionRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Option.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The option value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Option;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/Option/Option.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","composeClasses","useSlotProps","SelectUnstyledContext","StyledListItemButton","styled","useThemeProps","optionClasses","getOptionUtilityClass","RowListContext","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","OptionRoot","name","slot","overridesResolver","props","styles","theme","_theme$vars$palette","backgroundColor","vars","palette","color","variant","Option","forwardRef","inProps","ref","component","children","value","label","colorProp","other","row","useContext","selectContext","Error","selectOption","optionState","getOptionState","optionProps","getOptionProps","listboxRef","optionRef","useRef","handleRef","useEffect","current","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","classes","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","className","process","env","NODE_ENV","propTypes","node","oneOfType","oneOf","string","bool","element","sx","arrayOf","func","object","any"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"component\", \"children\", \"disabled\", \"value\", \"label\", \"variant\", \"color\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { useSlotProps } from '@mui/base/utils';\nimport { SelectUnstyledContext } from '@mui/base/SelectUnstyled';\nimport { StyledListItemButton } from '../ListItemButton/ListItemButton';\nimport { styled, useThemeProps } from '../styles';\nimport optionClasses, { getOptionUtilityClass } from './optionClasses';\nimport RowListContext from '../List/RowListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUtilityClass, {});\n};\nconst OptionRoot = styled(StyledListItemButton, {\n  name: 'JoyOption',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$palette;\n  return {\n    [`&.${optionClasses.highlighted}`]: {\n      backgroundColor: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}HoverBg`]\n    }\n  };\n});\nconst Option = /*#__PURE__*/React.forwardRef(function Option(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyOption'\n  });\n  const {\n      component = 'li',\n      children,\n      disabled,\n      value,\n      label,\n      variant = 'plain',\n      color: colorProp = 'neutral'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const row = React.useContext(RowListContext);\n  const selectContext = React.useContext(SelectUnstyledContext);\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n  const selectOption = {\n    value,\n    label: label || children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n  const listboxRef = selectContext.listboxRef;\n  let color = colorProp;\n  if (optionState.selected && !inProps.color) {\n    color = 'primary';\n  }\n  const ownerState = _extends({}, props, optionState, {\n    component,\n    variant,\n    color,\n    row\n  });\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    // Scroll to the currently highlighted option\n    if (optionState.highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [optionState.highlighted, listboxRef]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    elementType: OptionRoot,\n    externalSlotProps: {},\n    externalForwardedProps: other,\n    additionalProps: _extends({}, optionProps, {\n      ref: handleRef,\n      as: component\n    }),\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(OptionRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Option.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The option value.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Option;"]},"metadata":{},"sourceType":"module"}