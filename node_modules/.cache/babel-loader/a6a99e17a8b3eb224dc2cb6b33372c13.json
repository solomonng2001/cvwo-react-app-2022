{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateAccount.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateAccount = _ref => {\n  _s();\n\n  let {\n    openCreateAccount,\n    handleCloseCreateAccount\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSubmitCreateAccount = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"filled\",\n      severity: \"error\",\n      children: \"This is an error alert \\u2014 check it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openCreateAccount,\n      onClose: handleCloseCreateAccount,\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Join the ChitChat Community!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Dont have an account? Create one to create threads, comment and more...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          value: username,\n          type: \"text\",\n          margin: \"normal\",\n          label: \"Username\",\n          fullWidth: true,\n          variant: \"outlined\",\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: password,\n          type: \"password\",\n          margin: \"normal\",\n          label: \"Password\",\n          fullWidth: true,\n          variant: \"outlined\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: confirmPassword,\n          type: \"password\",\n          margin: \"normal\",\n          label: \"Confirm Password\",\n          fullWidth: true,\n          variant: \"outlined\",\n          onChange: event => setConfirmPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseCreateAccount,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmitCreateAccount,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateAccount, \"rdm1APKdkVgeD/89w0q4MU079tk=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateAccount.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","React","useState","CreateAccount","openCreateAccount","handleCloseCreateAccount","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleSubmitCreateAccount","event","target","value"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,MAA5B,EAAoCC,aAApC,EAAmDC,aAAnD,EACIC,WADJ,EACiBC,iBADjB,QAC0C,mBAD1C;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAOA,MAAMC,aAA8B,GAAG,QAA0D;AAAA;;AAAA,MAAzD;AAACC,IAAAA,iBAAD;AAAoBC,IAAAA;AAApB,GAAyD;AAC7F,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAS,EAAT,CAAtD;;AAEA,QAAMU,yBAAyB,GAAG,MAAM,CAEvC,CAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,QAAQ,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAER,iBAAd;AAAiC,MAAA,OAAO,EAAEC,wBAA1C;AAAoE,MAAA,SAAS,MAA7E;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA,gCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,KAAK,EAAEC,QAFX;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,MAAM,EAAC,QAJX;AAKI,UAAA,KAAK,EAAC,UALV;AAMI,UAAA,SAAS,MANb;AAOI,UAAA,OAAO,EAAC,UAPZ;AAQI,UAAA,QAAQ,EAAEO,KAAK,IAAIN,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd;AARlC;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAcI,QAAC,SAAD;AACI,UAAA,KAAK,EAAEP,QADX;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,MAAM,EAAC,QAHX;AAII,UAAA,KAAK,EAAC,UAJV;AAKI,UAAA,SAAS,MALb;AAMI,UAAA,OAAO,EAAC,UANZ;AAOI,UAAA,QAAQ,EAAEK,KAAK,IAAIJ,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd;AAPlC;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAuBI,QAAC,SAAD;AACI,UAAA,KAAK,EAAEL,eADX;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,MAAM,EAAC,QAHX;AAII,UAAA,KAAK,EAAC,kBAJV;AAKI,UAAA,SAAS,MALb;AAMI,UAAA,OAAO,EAAC,UANZ;AAOI,UAAA,QAAQ,EAAEG,KAAK,IAAIF,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd;AAPzC;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAmCI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEV,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEO,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AA+CH,CAxDD;;GAAMT,a;;KAAAA,a;AA0DN,eAAeA,aAAf","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle, DialogContentText } from '@material-ui/core';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openCreateAccount: boolean;\n    handleCloseCreateAccount: () => void;\n}\n\nconst CreateAccount: React.FC<Props> = ({openCreateAccount, handleCloseCreateAccount}: Props) => {\n    const [username, setUsername] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\n\n    const handleSubmitCreateAccount = () => {\n\n    }\n\n    return (\n        <>\n            <Alert variant=\"filled\" severity=\"error\">\n            This is an error alert â€” check it out!\n            </Alert>\n            <Dialog open={openCreateAccount} onClose={handleCloseCreateAccount} fullWidth>\n                <DialogTitle>Join the ChitChat Community!</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Dont have an account? Create one to create threads, comment and more...\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        value={username}\n                        type='text'\n                        margin=\"normal\"\n                        label=\"Username\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        value={password}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setPassword(event.target.value)}\n                    />\n                    <TextField\n                        value={confirmPassword}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Confirm Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setConfirmPassword(event.target.value)}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseCreateAccount}>Cancel</Button>\n                    <Button onClick={handleSubmitCreateAccount}>Create Account</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}