{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/BodyAddHTML.tsx\";\nimport { Typography } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BodyAddHTML = _ref => {\n  let {\n    body,\n    toOverflow\n  } = _ref;\n  const body_array = body.split('\\n').filter(ele => ele !== \"\");\n  const last = body_array.pop();\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"column\",\n    spacing: 0,\n    children: [body_array.map(line => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        noWrap: toOverflow,\n        align: \"left\",\n        variant: \"body1\",\n        children: line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)), /*#__PURE__*/_jsxDEV(Typography, {\n      noWrap: toOverflow,\n      align: \"left\",\n      variant: \"body1\",\n      children: last\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BodyAddHTML;\nexport default BodyAddHTML;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyAddHTML\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/BodyAddHTML.tsx"],"names":["Typography","Stack","React","BodyAddHTML","body","toOverflow","body_array","split","filter","ele","last","pop","map","line"],"mappings":";AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAOA,MAAMC,WAA4B,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAgC;AAClE,QAAMC,UAAoB,GAAGF,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBC,MAAjB,CAAwBC,GAAG,IAAIA,GAAG,KAAK,EAAvC,CAA7B;AACA,QAAMC,IAAwB,GAAGJ,UAAU,CAACK,GAAX,EAAjC;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAE,CAAnC;AAAA,eACML,UAAU,CAACM,GAAX,CAAeC,IAAI,iBACjB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAER,UAApB;AAAgC,QAAA,KAAK,EAAC,MAAtC;AAA6C,QAAA,OAAO,EAAC,OAArD;AAAA,kBACKQ;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADF,CADN,eASI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAER,UAApB;AAAgC,MAAA,KAAK,EAAC,MAAtC;AAA6C,MAAA,OAAO,EAAC,OAArD;AAAA,gBACKK;AADL;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAnBD;;KAAMP,W;AAqBN,eAAeA,WAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport { lineHeight } from '@mui/system';\n\nimport React from 'react';\n\ntype Props = {\n    toOverflow: boolean;\n    body: string;\n}\n\nconst BodyAddHTML: React.FC<Props> = ({ body, toOverflow }: Props) => {\n    const body_array: string[] = body.split('\\n').filter(ele => ele !== \"\");\n    const last: string | undefined = body_array.pop();\n\n    return (\n        <Stack direction='column' spacing={0}>\n            { body_array.map(line => (\n                <>\n                    <Typography noWrap={toOverflow} align='left' variant=\"body1\">\n                        {line}\n                    </Typography>\n                    <br />\n                </>\n            ))}\n            <Typography noWrap={toOverflow} align='left' variant=\"body1\">\n                {last}\n            </Typography>\n        </Stack>\n    );\n};\n\nexport default BodyAddHTML;"]},"metadata":{},"sourceType":"module"}