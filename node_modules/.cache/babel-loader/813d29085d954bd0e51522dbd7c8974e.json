{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"badgeInset\", \"children\", \"size\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    size,\n    anchorOrigin,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible', anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, {});\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({}, ownerState.size === 'sm' && _extends({\n    '--Badge-minHeight': '0.5rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1rem'\n  }, {\n    '--Badge-paddingX': '0.25rem',\n    fontSize: theme.vars.fontSize.xs\n  }), ownerState.size === 'md' && _extends({\n    '--Badge-minHeight': '0.75rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1.25rem'\n  }, {\n    '--Badge-paddingX': '0.375rem',\n    fontSize: theme.vars.fontSize.sm\n  }), ownerState.size === 'lg' && _extends({\n    '--Badge-minHeight': '1rem'\n  }, ownerState.badgeContent && {\n    '--Badge-minHeight': '1.5rem'\n  }, {\n    '--Badge-paddingX': '0.5rem',\n    fontSize: theme.vars.fontSize.md\n  }), {\n    '--Badge-ringSize': '2px',\n    '--Badge-ring': `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,\n    position: 'relative',\n    display: 'inline-flex',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    flexShrink: 0\n  });\n});\nconst BadgeBadge = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => styles.badge\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n\n  var _ownerState$anchorOri, _ownerState$anchorOri2, _ownerState$anchorOri3, _ownerState$anchorOri4, _theme$variants;\n\n  const inset = {\n    top: ownerState.badgeInset,\n    left: ownerState.badgeInset,\n    bottom: ownerState.badgeInset,\n    right: ownerState.badgeInset\n  };\n\n  if (typeof ownerState.badgeInset === 'string') {\n    const insetValues = ownerState.badgeInset.split(' ');\n\n    if (insetValues.length > 1) {\n      inset.top = insetValues[0];\n      inset.right = insetValues[1];\n\n      if (insetValues.length === 2) {\n        inset.bottom = insetValues[0];\n        inset.left = insetValues[1];\n      }\n\n      if (insetValues.length === 3) {\n        inset.left = insetValues[1];\n        inset.bottom = insetValues[2];\n      }\n\n      if (insetValues.length === 4) {\n        inset.bottom = insetValues[2];\n        inset.left = insetValues[3];\n      }\n    }\n  }\n\n  const translateY = ((_ownerState$anchorOri = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri.vertical) === 'top' ? 'translateY(-50%)' : 'translateY(50%)';\n  const translateX = ((_ownerState$anchorOri2 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri2.horizontal) === 'left' ? 'translateX(-50%)' : 'translateX(50%)';\n  const transformOriginY = ((_ownerState$anchorOri3 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri3.vertical) === 'top' ? '0%' : '100%';\n  const transformOriginX = ((_ownerState$anchorOri4 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri4.horizontal) === 'left' ? '0%' : '100%';\n  return _extends({\n    display: 'inline-flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    boxShadow: 'var(--Badge-ring)',\n    fontFamily: theme.vars.fontFamily.body,\n    fontWeight: theme.vars.fontWeight.md,\n    lineHeight: 1,\n    padding: 'calc(var(--Badge-paddingX) / 2 - var(--variant-borderWidth)) calc(var(--Badge-paddingX) - var(--variant-borderWidth))',\n    minHeight: 'var(--Badge-minHeight)',\n    minWidth: 'var(--Badge-minHeight)',\n    borderRadius: 'var(--Badge-radius, var(--Badge-minHeight))',\n    zIndex: 1,\n    transition: 'transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    backgroundColor: theme.vars.palette.background.surface,\n    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],\n    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],\n    transform: `scale(1) ${translateX} ${translateY}`,\n    transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    [`&.${badgeClasses.invisible}`]: {\n      transform: `scale(0) ${translateX} ${translateY}`\n    }\n  }, ownerState.invisible && {\n    transition: 'transform 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    badgeInset: badgeInsetProp = 0,\n    children,\n    size: sizeProp = 'md',\n    color: colorProp = 'primary',\n    invisible: invisibleProp = false,\n    max = 99,\n    badgeContent: badgeContentProp = '',\n    showZero = false,\n    variant: variantProp = 'solid'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    size: sizeProp,\n    badgeInset: badgeInsetProp,\n    color: colorProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    size = sizeProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp,\n    badgeInset = badgeInsetProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeInset,\n    variant,\n    invisible,\n    color,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n\n  if (invisible && badgeContentProp === 0) {\n    displayValue = '';\n  }\n\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: BadgeRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotBadge, badgeProps] = useSlot('badge', {\n    className: classes.badge,\n    elementType: BadgeBadge,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(SlotBadge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The inset of the badge. Support shorthand syntax as described in https://developer.mozilla.org/en-US/docs/Web/CSS/inset.\n   * @default 0\n   */\n  badgeInset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/Badge/Badge.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","unstable_capitalize","capitalize","usePreviousProps","unstable_composeClasses","composeClasses","styled","useThemeProps","useSlot","badgeClasses","getBadgeUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","color","variant","size","anchorOrigin","invisible","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","theme","badgeContent","fontSize","vars","xs","sm","md","palette","background","surface","position","display","verticalAlign","flexShrink","BadgeBadge","_ownerState$anchorOri","_ownerState$anchorOri2","_ownerState$anchorOri3","_ownerState$anchorOri4","_theme$variants","inset","top","badgeInset","left","bottom","right","insetValues","split","length","translateY","translateX","transformOriginY","transformOriginX","flexWrap","justifyContent","alignContent","alignItems","boxSizing","boxShadow","fontFamily","body","fontWeight","lineHeight","padding","minHeight","minWidth","borderRadius","zIndex","transition","backgroundColor","transform","transformOrigin","variants","Badge","forwardRef","inProps","ref","anchorOriginProp","badgeInsetProp","children","sizeProp","colorProp","invisibleProp","max","badgeContentProp","showZero","variantProp","other","prevProps","classes","displayValue","Number","SlotRoot","rootProps","className","elementType","externalForwardedProps","SlotBadge","badgeProps","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","oneOfType","number","string","bool","sx","arrayOf","func","object"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"badgeInset\", \"children\", \"size\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize, usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    size,\n    anchorOrigin,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible', anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, {});\n};\nconst BadgeRoot = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.size === 'sm' && _extends({\n  '--Badge-minHeight': '0.5rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1rem'\n}, {\n  '--Badge-paddingX': '0.25rem',\n  fontSize: theme.vars.fontSize.xs\n}), ownerState.size === 'md' && _extends({\n  '--Badge-minHeight': '0.75rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1.25rem'\n}, {\n  '--Badge-paddingX': '0.375rem',\n  fontSize: theme.vars.fontSize.sm\n}), ownerState.size === 'lg' && _extends({\n  '--Badge-minHeight': '1rem'\n}, ownerState.badgeContent && {\n  '--Badge-minHeight': '1.5rem'\n}, {\n  '--Badge-paddingX': '0.5rem',\n  fontSize: theme.vars.fontSize.md\n}), {\n  '--Badge-ringSize': '2px',\n  '--Badge-ring': `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n}));\nconst BadgeBadge = styled('span', {\n  name: 'JoyBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => styles.badge\n})(({\n  theme,\n  ownerState\n}) => {\n  var _ownerState$anchorOri, _ownerState$anchorOri2, _ownerState$anchorOri3, _ownerState$anchorOri4, _theme$variants;\n  const inset = {\n    top: ownerState.badgeInset,\n    left: ownerState.badgeInset,\n    bottom: ownerState.badgeInset,\n    right: ownerState.badgeInset\n  };\n  if (typeof ownerState.badgeInset === 'string') {\n    const insetValues = ownerState.badgeInset.split(' ');\n    if (insetValues.length > 1) {\n      inset.top = insetValues[0];\n      inset.right = insetValues[1];\n      if (insetValues.length === 2) {\n        inset.bottom = insetValues[0];\n        inset.left = insetValues[1];\n      }\n      if (insetValues.length === 3) {\n        inset.left = insetValues[1];\n        inset.bottom = insetValues[2];\n      }\n      if (insetValues.length === 4) {\n        inset.bottom = insetValues[2];\n        inset.left = insetValues[3];\n      }\n    }\n  }\n  const translateY = ((_ownerState$anchorOri = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri.vertical) === 'top' ? 'translateY(-50%)' : 'translateY(50%)';\n  const translateX = ((_ownerState$anchorOri2 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri2.horizontal) === 'left' ? 'translateX(-50%)' : 'translateX(50%)';\n  const transformOriginY = ((_ownerState$anchorOri3 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri3.vertical) === 'top' ? '0%' : '100%';\n  const transformOriginX = ((_ownerState$anchorOri4 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri4.horizontal) === 'left' ? '0%' : '100%';\n  return _extends({\n    display: 'inline-flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    boxShadow: 'var(--Badge-ring)',\n    fontFamily: theme.vars.fontFamily.body,\n    fontWeight: theme.vars.fontWeight.md,\n    lineHeight: 1,\n    padding: 'calc(var(--Badge-paddingX) / 2 - var(--variant-borderWidth)) calc(var(--Badge-paddingX) - var(--variant-borderWidth))',\n    minHeight: 'var(--Badge-minHeight)',\n    minWidth: 'var(--Badge-minHeight)',\n    borderRadius: 'var(--Badge-radius, var(--Badge-minHeight))',\n    zIndex: 1,\n    transition: 'transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    backgroundColor: theme.vars.palette.background.surface,\n    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],\n    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],\n    transform: `scale(1) ${translateX} ${translateY}`,\n    transformOrigin: `${transformOriginX} ${transformOriginY}`,\n    [`&.${badgeClasses.invisible}`]: {\n      transform: `scale(0) ${translateX} ${translateY}`\n    }\n  }, ownerState.invisible && {\n    transition: 'transform 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      badgeInset: badgeInsetProp = 0,\n      children,\n      size: sizeProp = 'md',\n      color: colorProp = 'primary',\n      invisible: invisibleProp = false,\n      max = 99,\n      badgeContent: badgeContentProp = '',\n      showZero = false,\n      variant: variantProp = 'solid'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    size: sizeProp,\n    badgeInset: badgeInsetProp,\n    color: colorProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {\n    invisible = true;\n  }\n  const {\n    color = colorProp,\n    size = sizeProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp,\n    badgeInset = badgeInsetProp\n  } = invisible ? prevProps : props;\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    badgeInset,\n    variant,\n    invisible,\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  if (invisible && badgeContentProp === 0) {\n    displayValue = '';\n  }\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: BadgeRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotBadge, badgeProps] = useSlot('badge', {\n    className: classes.badge,\n    elementType: BadgeBadge,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(SlotBadge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The inset of the badge. Support shorthand syntax as described in https://developer.mozilla.org/en-US/docs/Web/CSS/inset.\n   * @default 0\n   */\n  badgeInset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Badge;"]},"metadata":{},"sourceType":"module"}