{"ast":null,"code":"import _slicedToArray from \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { defaultListboxReducer, useListbox, ActionTypes } from '../ListboxUnstyled';\n\nfunction stateReducer(state, action) {\n  if (action.type === ActionTypes.blur || action.type === ActionTypes.optionHover || action.type === ActionTypes.setValue) {\n    return state;\n  }\n\n  var newState = defaultListboxReducer(state, action);\n\n  if (action.type !== ActionTypes.setHighlight && newState.highlightedValue === null && action.props.options.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.props.options[0]\n    });\n  }\n\n  return newState;\n}\n\nexport default function useMenu() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var listboxRefProp = parameters.listboxRef,\n      _parameters$open = parameters.open,\n      open = _parameters$open === void 0 ? false : _parameters$open,\n      onClose = parameters.onClose,\n      listboxId = parameters.listboxId;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      menuItems = _React$useState2[0],\n      setMenuItems = _React$useState2[1];\n\n  var listboxRef = React.useRef(null);\n  var handleRef = useForkRef(listboxRef, listboxRefProp);\n  var registerItem = React.useCallback(function (id, metadata) {\n    setMenuItems(function (previousState) {\n      var newState = _extends({}, previousState);\n\n      newState[id] = metadata;\n      return newState;\n    });\n  }, []);\n  var unregisterItem = React.useCallback(function (id) {\n    setMenuItems(function (previousState) {\n      var newState = _extends({}, previousState);\n\n      delete newState[id];\n      return newState;\n    });\n  }, []);\n\n  var _useListbox = useListbox({\n    options: Object.keys(menuItems),\n    optionStringifier: function optionStringifier(id) {\n      var _menuItems$id$ref$cur;\n\n      return menuItems[id].label || ((_menuItems$id$ref$cur = menuItems[id].ref.current) == null ? void 0 : _menuItems$id$ref$cur.innerText);\n    },\n    isOptionDisabled: function isOptionDisabled(id) {\n      var _menuItems$id;\n\n      return (menuItems == null ? void 0 : (_menuItems$id = menuItems[id]) == null ? void 0 : _menuItems$id.disabled) || false;\n    },\n    listboxRef: handleRef,\n    focusManagement: 'DOM',\n    id: listboxId,\n    stateReducer: stateReducer,\n    disabledItemsFocusable: true\n  }),\n      getOptionState = _useListbox.getOptionState,\n      getOptionProps = _useListbox.getOptionProps,\n      getRootProps = _useListbox.getRootProps,\n      highlightedOption = _useListbox.highlightedOption,\n      setListboxHighlight = _useListbox.setHighlightedValue;\n\n  var highlightFirstItem = React.useCallback(function () {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[0]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  var highlightLastItem = React.useCallback(function () {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[Object.keys(menuItems).length - 1]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  React.useEffect(function () {\n    if (!open) {\n      highlightFirstItem();\n    }\n  }, [open, highlightFirstItem]);\n\n  var createHandleKeyDown = function createHandleKeyDown(otherHandlers) {\n    return function (e) {\n      var _otherHandlers$onKeyD;\n\n      (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (e.key === 'Escape' && open) {\n        onClose == null ? void 0 : onClose();\n      }\n    };\n  };\n\n  var createHandleBlur = function createHandleBlur(otherHandlers) {\n    return function (e) {\n      var _otherHandlers$onBlur, _listboxRef$current;\n\n      (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, e);\n\n      if (!((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(e.relatedTarget))) {\n        onClose == null ? void 0 : onClose();\n      }\n    };\n  };\n\n  React.useEffect(function () {\n    var _listboxRef$current2; // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n\n\n    if ((_listboxRef$current2 = listboxRef.current) != null && _listboxRef$current2.contains(document.activeElement) && highlightedOption !== null) {\n      var _menuItems$highlighte, _menuItems$highlighte2;\n\n      menuItems == null ? void 0 : (_menuItems$highlighte = menuItems[highlightedOption]) == null ? void 0 : (_menuItems$highlighte2 = _menuItems$highlighte.ref.current) == null ? void 0 : _menuItems$highlighte2.focus();\n    }\n  }, [highlightedOption, menuItems]);\n\n  var getListboxProps = function getListboxProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var rootProps = getRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    }));\n    return _extends({}, otherHandlers, rootProps, {\n      role: 'menu'\n    });\n  };\n\n  var getItemState = function getItemState(id) {\n    var _getOptionState = getOptionState(id),\n        disabled = _getOptionState.disabled,\n        highlighted = _getOptionState.highlighted;\n\n    return {\n      disabled: disabled,\n      highlighted: highlighted\n    };\n  };\n\n  React.useDebugValue({\n    menuItems: menuItems,\n    highlightedOption: highlightedOption\n  });\n  return {\n    registerItem: registerItem,\n    unregisterItem: unregisterItem,\n    menuItems: menuItems,\n    getListboxProps: getListboxProps,\n    getItemState: getItemState,\n    getItemProps: getOptionProps,\n    highlightedOption: highlightedOption,\n    highlightFirstItem: highlightFirstItem,\n    highlightLastItem: highlightLastItem\n  };\n}","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/base/MenuUnstyled/useMenu.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","defaultListboxReducer","useListbox","ActionTypes","stateReducer","state","action","type","blur","optionHover","setValue","newState","setHighlight","highlightedValue","props","options","length","useMenu","parameters","listboxRefProp","listboxRef","open","onClose","listboxId","useState","menuItems","setMenuItems","useRef","handleRef","registerItem","useCallback","id","metadata","previousState","unregisterItem","Object","keys","optionStringifier","_menuItems$id$ref$cur","label","ref","current","innerText","isOptionDisabled","_menuItems$id","disabled","focusManagement","disabledItemsFocusable","getOptionState","getOptionProps","getRootProps","highlightedOption","setListboxHighlight","setHighlightedValue","highlightFirstItem","highlightLastItem","useEffect","createHandleKeyDown","otherHandlers","e","_otherHandlers$onKeyD","onKeyDown","call","defaultPrevented","key","createHandleBlur","_otherHandlers$onBlur","_listboxRef$current","onBlur","contains","relatedTarget","_listboxRef$current2","document","activeElement","_menuItems$highlighte","_menuItems$highlighte2","focus","getListboxProps","rootProps","role","getItemState","highlighted","useDebugValue","getItemProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { defaultListboxReducer, useListbox, ActionTypes } from '../ListboxUnstyled';\nfunction stateReducer(state, action) {\n  if (action.type === ActionTypes.blur || action.type === ActionTypes.optionHover || action.type === ActionTypes.setValue) {\n    return state;\n  }\n  const newState = defaultListboxReducer(state, action);\n  if (action.type !== ActionTypes.setHighlight && newState.highlightedValue === null && action.props.options.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.props.options[0]\n    });\n  }\n  return newState;\n}\nexport default function useMenu(parameters = {}) {\n  const {\n    listboxRef: listboxRefProp,\n    open = false,\n    onClose,\n    listboxId\n  } = parameters;\n  const [menuItems, setMenuItems] = React.useState({});\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(listboxRef, listboxRefProp);\n  const registerItem = React.useCallback((id, metadata) => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n      newState[id] = metadata;\n      return newState;\n    });\n  }, []);\n  const unregisterItem = React.useCallback(id => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n      delete newState[id];\n      return newState;\n    });\n  }, []);\n  const {\n    getOptionState,\n    getOptionProps,\n    getRootProps,\n    highlightedOption,\n    setHighlightedValue: setListboxHighlight\n  } = useListbox({\n    options: Object.keys(menuItems),\n    optionStringifier: id => {\n      var _menuItems$id$ref$cur;\n      return menuItems[id].label || ((_menuItems$id$ref$cur = menuItems[id].ref.current) == null ? void 0 : _menuItems$id$ref$cur.innerText);\n    },\n    isOptionDisabled: id => {\n      var _menuItems$id;\n      return (menuItems == null ? void 0 : (_menuItems$id = menuItems[id]) == null ? void 0 : _menuItems$id.disabled) || false;\n    },\n    listboxRef: handleRef,\n    focusManagement: 'DOM',\n    id: listboxId,\n    stateReducer,\n    disabledItemsFocusable: true\n  });\n  const highlightFirstItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[0]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  const highlightLastItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[Object.keys(menuItems).length - 1]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  React.useEffect(() => {\n    if (!open) {\n      highlightFirstItem();\n    }\n  }, [open, highlightFirstItem]);\n  const createHandleKeyDown = otherHandlers => e => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    if (e.key === 'Escape' && open) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n  const createHandleBlur = otherHandlers => e => {\n    var _otherHandlers$onBlur, _listboxRef$current;\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, e);\n    if (!((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(e.relatedTarget))) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n  React.useEffect(() => {\n    var _listboxRef$current2;\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n    if ((_listboxRef$current2 = listboxRef.current) != null && _listboxRef$current2.contains(document.activeElement) && highlightedOption !== null) {\n      var _menuItems$highlighte, _menuItems$highlighte2;\n      menuItems == null ? void 0 : (_menuItems$highlighte = menuItems[highlightedOption]) == null ? void 0 : (_menuItems$highlighte2 = _menuItems$highlighte.ref.current) == null ? void 0 : _menuItems$highlighte2.focus();\n    }\n  }, [highlightedOption, menuItems]);\n  const getListboxProps = (otherHandlers = {}) => {\n    const rootProps = getRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    }));\n    return _extends({}, otherHandlers, rootProps, {\n      role: 'menu'\n    });\n  };\n  const getItemState = id => {\n    const {\n      disabled,\n      highlighted\n    } = getOptionState(id);\n    return {\n      disabled,\n      highlighted\n    };\n  };\n  React.useDebugValue({\n    menuItems,\n    highlightedOption\n  });\n  return {\n    registerItem,\n    unregisterItem,\n    menuItems,\n    getListboxProps,\n    getItemState,\n    getItemProps: getOptionProps,\n    highlightedOption,\n    highlightFirstItem,\n    highlightLastItem\n  };\n}"]},"metadata":{},"sourceType":"module"}