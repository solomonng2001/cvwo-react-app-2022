{"ast":null,"code":"import _slicedToArray from \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"defaultValue\", \"children\", \"component\", \"disabled\", \"error\", \"onChange\", \"required\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport FormControlUnstyledContext from './FormControlUnstyledContext';\nimport { getFormControlUnstyledUtilityClass } from './formControlUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0) && value !== '';\n}\n\nfunction useUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n      error = ownerState.error,\n      filled = ownerState.filled,\n      focused = ownerState.focused,\n      required = ownerState.required;\n  var slots = {\n    root: ['root', disabled && 'disabled', focused && 'focused', error && 'error', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormControlUnstyledUtilityClass, {});\n}\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n * *   FormLabel\n * *   FormHelperText\n * *   Input\n * *   InputLabel\n *\n * You can find one composition example below and more going to [the demos](https://mui.com/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n *\n * Demos:\n *\n * - [Unstyled Form Control](https://mui.com/base/react-form-control/)\n *\n * API:\n *\n * - [FormControlUnstyled API](https://mui.com/base/api/form-control-unstyled/)\n */\n\n\nvar FormControlUnstyled = /*#__PURE__*/React.forwardRef(function FormControlUnstyled(props, ref) {\n  var _ref;\n\n  var defaultValue = props.defaultValue,\n      children = props.children,\n      component = props.component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _onChange = props.onChange,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      incomingValue = props.value,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useControlled = useControlled({\n    controlled: incomingValue,\n    default: defaultValue,\n    name: 'FormControl',\n    state: 'value'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var filled = hasValue(value);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusedState = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var focused = focusedState && !disabled;\n  React.useEffect(function () {\n    return setFocused(function (isFocused) {\n      return disabled ? false : isFocused;\n    });\n  }, [disabled]);\n\n  var ownerState = _extends({}, props, {\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    required: required\n  });\n\n  var childContext = React.useMemo(function () {\n    return {\n      disabled: disabled,\n      error: error,\n      filled: filled,\n      focused: focused,\n      onBlur: function onBlur() {\n        setFocused(false);\n      },\n      onChange: function onChange(event) {\n        setValue(event.target.value);\n        _onChange == null ? void 0 : _onChange(event);\n      },\n      onFocus: function onFocus() {\n        setFocused(true);\n      },\n      required: required,\n      value: value != null ? value : ''\n    };\n  }, [disabled, error, filled, focused, _onChange, required, setValue, value]);\n  var classes = useUtilityClasses(ownerState);\n\n  var renderChildren = function renderChildren() {\n    if (typeof children === 'function') {\n      return children(childContext);\n    }\n\n    return children;\n  };\n\n  var Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: ref,\n      children: renderChildren()\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(FormControlUnstyledContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.node, PropTypes.func]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the FormControl.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the FormControl.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlUnstyled;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/base/FormControlUnstyled/FormControlUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useControlled","useControlled","FormControlUnstyledContext","getFormControlUnstyledUtilityClass","useSlotProps","composeClasses","jsx","_jsx","hasValue","value","Array","isArray","length","useUtilityClasses","ownerState","disabled","error","filled","focused","required","slots","root","FormControlUnstyled","forwardRef","props","ref","_ref","defaultValue","children","component","onChange","slotProps","incomingValue","other","controlled","default","name","state","setValue","useState","focusedState","setFocused","useEffect","isFocused","childContext","useMemo","onBlur","event","target","onFocus","classes","renderChildren","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Provider","process","env","NODE_ENV","propTypes","oneOfType","node","func","any","bool","shape","object"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultValue\", \"children\", \"component\", \"disabled\", \"error\", \"onChange\", \"required\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport FormControlUnstyledContext from './FormControlUnstyledContext';\nimport { getFormControlUnstyledUtilityClass } from './formControlUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0) && value !== '';\n}\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focused && 'focused', error && 'error', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormControlUnstyledUtilityClass, {});\n}\n\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n * *   FormLabel\n * *   FormHelperText\n * *   Input\n * *   InputLabel\n *\n * You can find one composition example below and more going to [the demos](https://mui.com/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n *\n * Demos:\n *\n * - [Unstyled Form Control](https://mui.com/base/react-form-control/)\n *\n * API:\n *\n * - [FormControlUnstyled API](https://mui.com/base/api/form-control-unstyled/)\n */\nconst FormControlUnstyled = /*#__PURE__*/React.forwardRef(function FormControlUnstyled(props, ref) {\n  var _ref;\n  const {\n      defaultValue,\n      children,\n      component,\n      disabled = false,\n      error = false,\n      onChange,\n      required = false,\n      slotProps = {},\n      slots = {},\n      value: incomingValue\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [value, setValue] = useControlled({\n    controlled: incomingValue,\n    default: defaultValue,\n    name: 'FormControl',\n    state: 'value'\n  });\n  const filled = hasValue(value);\n  const [focusedState, setFocused] = React.useState(false);\n  const focused = focusedState && !disabled;\n  React.useEffect(() => setFocused(isFocused => disabled ? false : isFocused), [disabled]);\n  const ownerState = _extends({}, props, {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  });\n  const childContext = React.useMemo(() => {\n    return {\n      disabled,\n      error,\n      filled,\n      focused,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onChange: event => {\n        setValue(event.target.value);\n        onChange == null ? void 0 : onChange(event);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      required,\n      value: value != null ? value : ''\n    };\n  }, [disabled, error, filled, focused, onChange, required, setValue, value]);\n  const classes = useUtilityClasses(ownerState);\n  const renderChildren = () => {\n    if (typeof children === 'function') {\n      return children(childContext);\n    }\n    return children;\n  };\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      children: renderChildren()\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(FormControlUnstyledContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.node, PropTypes.func]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside the FormControl.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the FormControl.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * @ignore\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlUnstyled;"]},"metadata":{},"sourceType":"module"}