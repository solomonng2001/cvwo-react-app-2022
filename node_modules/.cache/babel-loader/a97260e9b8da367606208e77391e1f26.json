{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/ChangePassword.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = _ref => {\n  _s();\n\n  let {\n    openChangePassword,\n    handleCloseChangePassword,\n    currentUserState\n  } = _ref;\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState(\"\");\n  const [severity, setSeverity] = useState(undefined);\n  const [message, setMessage] = useState([]);\n\n  const resetChangePassword = () => {\n    setNewPassword(\"\");\n    setNewPasswordConfirmation(\"\");\n  };\n\n  const handleSubmitChangePassword = () => {\n    const password = newPassword;\n    const password_confirmation = newPasswordConfirmation;\n    let new_message = [];\n    fetch(\"http://localhost:3000/users/\" + currentUserState.currentUser.id, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password // password_confirmation,\n\n      })\n    }).then(response => {\n      if (response.ok) {\n        setSeverity('success');\n        new_message.push(\"Password Changed!\");\n        setMessage(new_message);\n        resetChangePassword(); // setTimeout(() => window.location.reload(), 1000);\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data.error) {\n        setSeverity('error');\n        data.error.map(error => new_message.push(error));\n        setMessage(new_message);\n      }\n    }).catch(error => console.log(error.message)); // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openChangePassword,\n    onClose: handleCloseChangePassword,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(AlertUser, {\n        severity: severity,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: newPassword,\n        type: \"password\",\n        margin: \"normal\",\n        label: \"Password\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: event => setNewPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: newPasswordConfirmation,\n        type: \"password\",\n        margin: \"normal\",\n        label: \"Confirm Password\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: event => setNewPasswordConfirmation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCloseChangePassword,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmitChangePassword,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangePassword, \"AUfNVO54Oqaqvb556tlA8SE9qeU=\");\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/ChangePassword.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","AlertUser","React","useState","ChangePassword","openChangePassword","handleCloseChangePassword","currentUserState","newPassword","setNewPassword","newPasswordConfirmation","setNewPasswordConfirmation","severity","setSeverity","undefined","message","setMessage","resetChangePassword","handleSubmitChangePassword","password","password_confirmation","new_message","fetch","currentUser","id","method","headers","body","JSON","stringify","then","response","ok","push","json","data","error","map","catch","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle, DialogContentText } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\nimport CurrentUserState from '../types/CurrentUserState';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openChangePassword: boolean;\n    handleCloseChangePassword: () => void;\n    currentUserState: CurrentUserState;\n}\n\nconst ChangePassword: React.FC<Props> = ({openChangePassword, handleCloseChangePassword, currentUserState}: Props) => {\n    const [newPassword, setNewPassword] = useState<string>(\"\");\n    const [newPasswordConfirmation, setNewPasswordConfirmation] = useState<string>(\"\");\n    const [severity, setSeverity] = useState<AlertColor | undefined>(undefined);\n    const [message, setMessage] = useState<string[]>([]);\n\n    const resetChangePassword = () => {\n        setNewPassword(\"\");\n        setNewPasswordConfirmation(\"\");\n    }\n\n    const handleSubmitChangePassword = () => {\n        const password = newPassword;\n        const password_confirmation = newPasswordConfirmation;\n        let new_message: string[] = [];\n            fetch(\"http://localhost:3000/users/\" + currentUserState.currentUser.id, {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                body: JSON.stringify({\n                    password,\n                    // password_confirmation,\n                }),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSeverity('success');\n                        new_message.push(\"Password Changed!\")\n                        setMessage(new_message);\n                        resetChangePassword();\n                        // setTimeout(() => window.location.reload(), 1000);\n                    }\n                    return response.json();\n                })\n                .then((data) => {\n                    if (data.error) {\n                        setSeverity('error');\n                        data.error.map((error: string) =>\n                            new_message.push(error));\n                        setMessage(new_message);\n                    }\n                })\n                .catch((error) => console.log(error.message));\n        // }\n    }\n\n    return (\n        <Dialog open={openChangePassword} onClose={handleCloseChangePassword} fullWidth>\n            <DialogTitle>Change Password</DialogTitle>\n            <DialogContent>\n                <AlertUser severity={severity} message={message}/>\n                    <TextField\n                        value={newPassword}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setNewPassword(event.target.value)}\n                    />\n                    <TextField\n                        value={newPasswordConfirmation}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Confirm Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setNewPasswordConfirmation(event.target.value)}\n                    />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseChangePassword}>Close</Button>\n                <Button onClick={handleSubmitChangePassword}>Change Password</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}