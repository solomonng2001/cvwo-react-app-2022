{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/DeleteThread.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteThread = _ref => {\n  _s();\n\n  let {\n    openDeleteThread,\n    handleCloseDeleteThread,\n    thread_page_id\n  } = _ref;\n  const [severity, setSeverity] = useState(undefined);\n  const [message, setMessage] = useState([]);\n\n  const handleSubmitDeleteThread = () => {\n    let new_message = [];\n\n    if (body === \"\") {\n      new_message.push(\"Fill in all fields\");\n    }\n\n    if (new_message.length > 0) {\n      setSeverity('error');\n      setMessage(new_message);\n    } else {\n      fetch(\"http://localhost:3000/thread_pages/\" + thread_page_id.toString() + \"/comments\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          body,\n          user_id,\n          thread_page_id\n        })\n      }).then(response => {\n        if (response.ok) {\n          setSeverity('success');\n          new_message.push(\"You have created a new comment!\");\n          setMessage(new_message);\n        } else {\n          setSeverity('error');\n          new_message.push(\"Some error occured\");\n          setMessage(new_message);\n        }\n      }).catch(error => console.log(error.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openDeleteThread,\n    onClose: handleCloseDeleteThread,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Are you sure you want to delete this thread?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(AlertUser, {\n        severity: severity,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCloseDeleteThread,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmitDeleteThread,\n        children: \"Delete Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteThread, \"pEr66OlwwUNh2zEF56GTfKAOO9Q=\");\n\n_c = DeleteThread;\nexport default DeleteThread;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteThread\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/DeleteThread.tsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","AlertUser","React","useState","DeleteThread","openDeleteThread","handleCloseDeleteThread","thread_page_id","severity","setSeverity","undefined","message","setMessage","handleSubmitDeleteThread","new_message","body","push","length","fetch","toString","method","headers","JSON","stringify","user_id","then","response","ok","catch","error","console","log"],"mappings":";;;AAAA,SAASA,MAAT,EAA4BC,MAA5B,EAAoCC,aAApC,EAAmDC,aAAnD,EACIC,WADJ,QACuB,mBADvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAQA,MAAMC,YAA6B,GAAG,QAAwE;AAAA;;AAAA,MAAvE;AAACC,IAAAA,gBAAD;AAAmBC,IAAAA,uBAAnB;AAA4CC,IAAAA;AAA5C,GAAuE;AAC1G,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAyBO,SAAzB,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAW,EAAX,CAAtC;;AAEA,QAAMU,wBAAwB,GAAG,MAAM;AACnC,QAAIC,WAAqB,GAAG,EAA5B;;AACA,QAAIC,IAAI,KAAK,EAAb,EAAiB;AACbD,MAAAA,WAAW,CAACE,IAAZ,CAAiB,oBAAjB;AACH;;AACD,QAAIF,WAAW,CAACG,MAAZ,GAAqB,CAAzB,EAA4B;AACxBR,MAAAA,WAAW,CAAC,OAAD,CAAX;AACAG,MAAAA,UAAU,CAACE,WAAD,CAAV;AACH,KAHD,MAGO;AACHI,MAAAA,KAAK,CAAC,wCAAwCX,cAAc,CAACY,QAAf,EAAxC,GAAoE,WAArE,EAAkF;AACnFC,QAAAA,MAAM,EAAE,MAD2E;AAEnFC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF0E;AAKnFN,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAe;AACjBR,UAAAA,IADiB;AAEjBS,UAAAA,OAFiB;AAGjBjB,UAAAA;AAHiB,SAAf;AAL6E,OAAlF,CAAL,CAWKkB,IAXL,CAWWC,QAAD,IAAc;AAChB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACblB,UAAAA,WAAW,CAAC,SAAD,CAAX;AACAK,UAAAA,WAAW,CAACE,IAAZ,CAAiB,iCAAjB;AACAJ,UAAAA,UAAU,CAACE,WAAD,CAAV;AACH,SAJD,MAIO;AACHL,UAAAA,WAAW,CAAC,OAAD,CAAX;AACAK,UAAAA,WAAW,CAACE,IAAZ,CAAiB,oBAAjB;AACAJ,UAAAA,UAAU,CAACE,WAAD,CAAV;AACH;AACJ,OArBL,EAsBKc,KAtBL,CAsBYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAClB,OAAlB,CAtBtB;AAuBH;AACJ,GAjCD;;AAmCA,sBACI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEN,gBAAd;AAAgC,IAAA,OAAO,EAAEC,uBAAzC;AAAkE,IAAA,SAAS,MAA3E;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEE,QAArB;AAA+B,QAAA,OAAO,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,aAAD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEL,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEO,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAnDD;;GAAMT,Y;;KAAAA,Y;AAqDN,eAAeA,YAAf","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openDeleteThread: boolean;\n    handleCloseDeleteThread: () => void;\n    thread_page_id: number;\n}\n\nconst DeleteThread: React.FC<Props> = ({openDeleteThread, handleCloseDeleteThread, thread_page_id}: Props) => {\n    const [severity, setSeverity] = useState<AlertColor | undefined>(undefined);\n    const [message, setMessage] = useState<string[]>([]);\n    \n    const handleSubmitDeleteThread = () => {\n        let new_message: string[] = [];\n        if (body === \"\") {\n            new_message.push(\"Fill in all fields\");\n        }\n        if (new_message.length > 0) {\n            setSeverity('error');\n            setMessage(new_message);\n        } else {\n            fetch(\"http://localhost:3000/thread_pages/\" + thread_page_id.toString() + \"/comments\", {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                body: JSON.stringify({\n                    body,\n                    user_id,\n                    thread_page_id,\n                }),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSeverity('success');\n                        new_message.push(\"You have created a new comment!\")\n                        setMessage(new_message);\n                    } else {\n                        setSeverity('error');\n                        new_message.push(\"Some error occured\");\n                        setMessage(new_message);\n                    }\n                })\n                .catch((error) => console.log(error.message));\n        }\n    }\n\n    return (\n        <Dialog open={openDeleteThread} onClose={handleCloseDeleteThread} fullWidth>\n            <DialogTitle>Are you sure you want to delete this thread?</DialogTitle>\n            <DialogContent>\n                <AlertUser severity={severity} message={message}/>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseDeleteThread}>Cancel</Button>\n                <Button onClick={handleSubmitDeleteThread}>Delete Thread</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default DeleteThread;"]},"metadata":{},"sourceType":"module"}