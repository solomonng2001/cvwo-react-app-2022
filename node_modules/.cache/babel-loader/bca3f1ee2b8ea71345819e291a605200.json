{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nlet _ = t => t,\n    _t;\n\nconst _excluded = [\"color\", \"backgroundColor\"],\n      _excluded2 = [\"children\", \"className\", \"color\", \"size\", \"variant\", \"thickness\", \"determinate\", \"value\"];\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { css, keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst circulate = keyframes({\n  '0%': {\n    // let the progress start at the top of the ring\n    transform: 'rotate(-90deg)'\n  },\n  '100%': {\n    transform: 'rotate(270deg)'\n  }\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    determinate,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', determinate && 'determinate', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`],\n    svg: ['svg'],\n    track: ['track'],\n    progress: ['progress']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, {});\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'JoyCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref2 => {\n  let {\n    ownerState,\n    theme\n  } = _ref2;\n\n  var _theme$variants;\n\n  const _ref = ((_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]) || {},\n        {\n    color,\n    backgroundColor\n  } = _ref,\n        rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return _extends({\n    // integration with icon\n    '--Icon-fontSize': 'calc(0.4 * var(--_root-size))',\n    // public variables\n    '--CircularProgress-track-color': backgroundColor,\n    '--CircularProgress-progress-color': color,\n    '--CircularProgress-percent': ownerState.value,\n    // 0 - 100\n    '--CircularProgress-linecap': 'round'\n  }, ownerState.size === 'sm' && {\n    '--CircularProgress-track-thickness': '3px',\n    '--CircularProgress-progress-thickness': '3px',\n    '--_root-size': 'var(--CircularProgress-size, 24px)' // use --_root-size to let other components overrides via --CircularProgress-size\n\n  }, ownerState.instanceSize === 'sm' && {\n    '--CircularProgress-size': '24px'\n  }, ownerState.size === 'md' && {\n    '--CircularProgress-track-thickness': '6px',\n    '--CircularProgress-progress-thickness': '6px',\n    '--_root-size': 'var(--CircularProgress-size, 40px)'\n  }, ownerState.instanceSize === 'md' && {\n    '--CircularProgress-size': '40px'\n  }, ownerState.size === 'lg' && {\n    '--CircularProgress-track-thickness': '8px',\n    '--CircularProgress-progress-thickness': '8px',\n    '--_root-size': 'var(--CircularProgress-size, 64px)'\n  }, ownerState.instanceSize === 'lg' && {\n    '--CircularProgress-size': '64px'\n  }, ownerState.thickness && {\n    '--CircularProgress-track-thickness': `${ownerState.thickness}px`,\n    '--CircularProgress-progress-thickness': `${ownerState.thickness}px`\n  }, {\n    // internal variables\n    '--_thickness-diff': 'calc(var(--CircularProgress-track-thickness) - var(--CircularProgress-progress-thickness))',\n    '--_inner-size': 'calc(var(--_root-size) - 2 * var(--variant-borderWidth))',\n    '--_outlined-inset': 'max(var(--CircularProgress-track-thickness), var(--CircularProgress-progress-thickness))',\n    width: 'var(--_root-size)',\n    height: 'var(--_root-size)',\n    borderRadius: 'var(--_root-size)',\n    margin: 'var(--CircularProgress-margin)',\n    boxSizing: 'border-box',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    color\n  }, ownerState.children && {\n    // only add font related properties when there is a child.\n    // so that when there is no child, the size can be controlled by the parent font-size e.g. Link\n    fontFamily: theme.vars.fontFamily.body,\n    fontWeight: theme.vars.fontWeight.md,\n    fontSize: 'calc(0.2 * var(--_root-size))'\n  }, rest, ownerState.variant === 'outlined' && {\n    '&:before': _extends({\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      borderRadius: 'inherit',\n      top: 'var(--_outlined-inset)',\n      left: 'var(--_outlined-inset)',\n      right: 'var(--_outlined-inset)',\n      bottom: 'var(--_outlined-inset)'\n    }, rest)\n  });\n});\nconst CircularProgressSvg = styled('svg', {\n  name: 'JoyCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  width: 'inherit',\n  height: 'inherit',\n  display: 'inherit',\n  boxSizing: 'inherit',\n  position: 'absolute',\n  top: 'calc(-1 * var(--variant-borderWidth))',\n  // centered align\n  left: 'calc(-1 * var(--variant-borderWidth))' // centered align\n\n});\nconst CircularProgressTrack = styled('circle', {\n  name: 'JoyCircularProgress',\n  slot: 'track',\n  overridesResolver: (props, styles) => styles.track\n})({\n  cx: '50%',\n  cy: '50%',\n  r: 'calc(var(--_inner-size) / 2 - var(--CircularProgress-track-thickness) / 2 + min(0px, var(--_thickness-diff) / 2))',\n  fill: 'transparent',\n  strokeWidth: 'var(--CircularProgress-track-thickness)',\n  stroke: 'var(--CircularProgress-track-color)'\n});\nconst CircularProgressProgress = styled('circle', {\n  name: 'JoyCircularProgress',\n  slot: 'progress',\n  overridesResolver: (props, styles) => styles.progress\n})({\n  '--_progress-radius': 'calc(var(--_inner-size) / 2 - var(--CircularProgress-progress-thickness) / 2 - max(0px, var(--_thickness-diff) / 2))',\n  '--_progress-length': 'calc(2 * 3.1415926535 * var(--_progress-radius))',\n  // the circumference around the progress\n  cx: '50%',\n  cy: '50%',\n  r: 'var(--_progress-radius)',\n  fill: 'transparent',\n  strokeWidth: 'var(--CircularProgress-progress-thickness)',\n  stroke: 'var(--CircularProgress-progress-color)',\n  strokeLinecap: 'var(--CircularProgress-linecap, round)',\n  // can't use CSS variable directly, need to cast type.\n  strokeDasharray: 'var(--_progress-length)',\n  strokeDashoffset: 'calc(var(--_progress-length) - var(--CircularProgress-percent) * var(--_progress-length) / 100)',\n  transformOrigin: 'center',\n  transform: 'rotate(-90deg)' // to initially appear at the top-center of the circle.\n\n}, _ref3 => {\n  let {\n    ownerState\n  } = _ref3;\n  return ownerState.determinate ? {\n    transition: 'stroke-dashoffset 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms' // copy from Material UI CircularProgress\n\n  } : css(_t || (_t = _`\n          animation: var(\n              --CircularProgress-circulation,\n              0.8s linear 0s infinite normal none running\n            )\n            ${0};\n        `), circulate);\n});\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCircularProgress'\n  });\n\n  const {\n    children,\n    className,\n    color = 'primary',\n    size = 'md',\n    variant = 'soft',\n    thickness,\n    determinate = false,\n    value = determinate ? 0 : 25\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const ownerState = _extends({}, props, {\n    color,\n    size,\n    variant,\n    thickness,\n    value,\n    determinate,\n    instanceSize: inProps.size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: CircularProgressRoot,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: _extends({\n      role: 'progressbar',\n      style: {\n        // Setting this CSS varaible via inline-style\n        // prevents the generation of new CSS every time\n        // `value` prop updates\n        '--CircularProgress-percent': value\n      }\n    }, value && determinate && {\n      'aria-valuenow': typeof value === 'number' ? Math.round(value) : Math.round(Number(value || 0))\n    })\n  });\n  const [SlotSvg, svgProps] = useSlot('svg', {\n    className: classes.svg,\n    elementType: CircularProgressSvg,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotTrack, trackProps] = useSlot('track', {\n    className: classes.track,\n    elementType: CircularProgressTrack,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotProgress, progressProps] = useSlot('progress', {\n    className: classes.progress,\n    elementType: CircularProgressProgress,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotSvg, _extends({}, svgProps, {\n      children: [/*#__PURE__*/_jsx(SlotTrack, _extends({}, trackProps)), /*#__PURE__*/_jsx(SlotProgress, _extends({}, progressProps))]\n    })), children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The boolean to select a variant.\n   * Use indeterminate when there is no progress value.\n   * @default false\n   */\n  determinate: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   *\n   * For indeterminate, @default 25\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default CircularProgress;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/CircularProgress/CircularProgress.js"],"names":["_extends","_objectWithoutPropertiesLoose","_","t","_t","_excluded","_excluded2","PropTypes","React","clsx","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","css","keyframes","styled","useThemeProps","useSlot","getCircularProgressUtilityClass","jsx","_jsx","jsxs","_jsxs","circulate","transform","useUtilityClasses","ownerState","determinate","color","variant","size","slots","root","svg","track","progress","CircularProgressRoot","name","slot","overridesResolver","props","styles","theme","_theme$variants","_ref","variants","backgroundColor","rest","value","instanceSize","thickness","width","height","borderRadius","margin","boxSizing","display","justifyContent","alignItems","position","children","fontFamily","vars","body","fontWeight","md","fontSize","content","top","left","right","bottom","CircularProgressSvg","CircularProgressTrack","cx","cy","r","fill","strokeWidth","stroke","CircularProgressProgress","strokeLinecap","strokeDasharray","strokeDashoffset","transformOrigin","transition","CircularProgress","forwardRef","inProps","ref","className","other","classes","SlotRoot","rootProps","elementType","externalForwardedProps","additionalProps","role","style","Math","round","Number","SlotSvg","svgProps","SlotTrack","trackProps","SlotProgress","progressProps","process","env","NODE_ENV","propTypes","node","string","oneOfType","oneOf","bool","sx","arrayOf","func","object","number"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nlet _ = t => t,\n  _t;\nconst _excluded = [\"color\", \"backgroundColor\"],\n  _excluded2 = [\"children\", \"className\", \"color\", \"size\", \"variant\", \"thickness\", \"determinate\", \"value\"];\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { css, keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst circulate = keyframes({\n  '0%': {\n    // let the progress start at the top of the ring\n    transform: 'rotate(-90deg)'\n  },\n  '100%': {\n    transform: 'rotate(270deg)'\n  }\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    determinate,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', determinate && 'determinate', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`],\n    svg: ['svg'],\n    track: ['track'],\n    progress: ['progress']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, {});\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'JoyCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => {\n  var _theme$variants;\n  const _ref = ((_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]) || {},\n    {\n      color,\n      backgroundColor\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return _extends({\n    // integration with icon\n    '--Icon-fontSize': 'calc(0.4 * var(--_root-size))',\n    // public variables\n    '--CircularProgress-track-color': backgroundColor,\n    '--CircularProgress-progress-color': color,\n    '--CircularProgress-percent': ownerState.value,\n    // 0 - 100\n    '--CircularProgress-linecap': 'round'\n  }, ownerState.size === 'sm' && {\n    '--CircularProgress-track-thickness': '3px',\n    '--CircularProgress-progress-thickness': '3px',\n    '--_root-size': 'var(--CircularProgress-size, 24px)' // use --_root-size to let other components overrides via --CircularProgress-size\n  }, ownerState.instanceSize === 'sm' && {\n    '--CircularProgress-size': '24px'\n  }, ownerState.size === 'md' && {\n    '--CircularProgress-track-thickness': '6px',\n    '--CircularProgress-progress-thickness': '6px',\n    '--_root-size': 'var(--CircularProgress-size, 40px)'\n  }, ownerState.instanceSize === 'md' && {\n    '--CircularProgress-size': '40px'\n  }, ownerState.size === 'lg' && {\n    '--CircularProgress-track-thickness': '8px',\n    '--CircularProgress-progress-thickness': '8px',\n    '--_root-size': 'var(--CircularProgress-size, 64px)'\n  }, ownerState.instanceSize === 'lg' && {\n    '--CircularProgress-size': '64px'\n  }, ownerState.thickness && {\n    '--CircularProgress-track-thickness': `${ownerState.thickness}px`,\n    '--CircularProgress-progress-thickness': `${ownerState.thickness}px`\n  }, {\n    // internal variables\n    '--_thickness-diff': 'calc(var(--CircularProgress-track-thickness) - var(--CircularProgress-progress-thickness))',\n    '--_inner-size': 'calc(var(--_root-size) - 2 * var(--variant-borderWidth))',\n    '--_outlined-inset': 'max(var(--CircularProgress-track-thickness), var(--CircularProgress-progress-thickness))',\n    width: 'var(--_root-size)',\n    height: 'var(--_root-size)',\n    borderRadius: 'var(--_root-size)',\n    margin: 'var(--CircularProgress-margin)',\n    boxSizing: 'border-box',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    color\n  }, ownerState.children && {\n    // only add font related properties when there is a child.\n    // so that when there is no child, the size can be controlled by the parent font-size e.g. Link\n    fontFamily: theme.vars.fontFamily.body,\n    fontWeight: theme.vars.fontWeight.md,\n    fontSize: 'calc(0.2 * var(--_root-size))'\n  }, rest, ownerState.variant === 'outlined' && {\n    '&:before': _extends({\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      borderRadius: 'inherit',\n      top: 'var(--_outlined-inset)',\n      left: 'var(--_outlined-inset)',\n      right: 'var(--_outlined-inset)',\n      bottom: 'var(--_outlined-inset)'\n    }, rest)\n  });\n});\nconst CircularProgressSvg = styled('svg', {\n  name: 'JoyCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  width: 'inherit',\n  height: 'inherit',\n  display: 'inherit',\n  boxSizing: 'inherit',\n  position: 'absolute',\n  top: 'calc(-1 * var(--variant-borderWidth))',\n  // centered align\n  left: 'calc(-1 * var(--variant-borderWidth))' // centered align\n});\n\nconst CircularProgressTrack = styled('circle', {\n  name: 'JoyCircularProgress',\n  slot: 'track',\n  overridesResolver: (props, styles) => styles.track\n})({\n  cx: '50%',\n  cy: '50%',\n  r: 'calc(var(--_inner-size) / 2 - var(--CircularProgress-track-thickness) / 2 + min(0px, var(--_thickness-diff) / 2))',\n  fill: 'transparent',\n  strokeWidth: 'var(--CircularProgress-track-thickness)',\n  stroke: 'var(--CircularProgress-track-color)'\n});\nconst CircularProgressProgress = styled('circle', {\n  name: 'JoyCircularProgress',\n  slot: 'progress',\n  overridesResolver: (props, styles) => styles.progress\n})({\n  '--_progress-radius': 'calc(var(--_inner-size) / 2 - var(--CircularProgress-progress-thickness) / 2 - max(0px, var(--_thickness-diff) / 2))',\n  '--_progress-length': 'calc(2 * 3.1415926535 * var(--_progress-radius))',\n  // the circumference around the progress\n  cx: '50%',\n  cy: '50%',\n  r: 'var(--_progress-radius)',\n  fill: 'transparent',\n  strokeWidth: 'var(--CircularProgress-progress-thickness)',\n  stroke: 'var(--CircularProgress-progress-color)',\n  strokeLinecap: 'var(--CircularProgress-linecap, round)',\n  // can't use CSS variable directly, need to cast type.\n  strokeDasharray: 'var(--_progress-length)',\n  strokeDashoffset: 'calc(var(--_progress-length) - var(--CircularProgress-percent) * var(--_progress-length) / 100)',\n  transformOrigin: 'center',\n  transform: 'rotate(-90deg)' // to initially appear at the top-center of the circle.\n}, ({\n  ownerState\n}) => ownerState.determinate ? {\n  transition: 'stroke-dashoffset 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms' // copy from Material UI CircularProgress\n} : css(_t || (_t = _`\n          animation: var(\n              --CircularProgress-circulation,\n              0.8s linear 0s infinite normal none running\n            )\n            ${0};\n        `), circulate));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCircularProgress'\n  });\n  const {\n      children,\n      className,\n      color = 'primary',\n      size = 'md',\n      variant = 'soft',\n      thickness,\n      determinate = false,\n      value = determinate ? 0 : 25\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    color,\n    size,\n    variant,\n    thickness,\n    value,\n    determinate,\n    instanceSize: inProps.size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: CircularProgressRoot,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: _extends({\n      role: 'progressbar',\n      style: {\n        // Setting this CSS varaible via inline-style\n        // prevents the generation of new CSS every time\n        // `value` prop updates\n        '--CircularProgress-percent': value\n      }\n    }, value && determinate && {\n      'aria-valuenow': typeof value === 'number' ? Math.round(value) : Math.round(Number(value || 0))\n    })\n  });\n  const [SlotSvg, svgProps] = useSlot('svg', {\n    className: classes.svg,\n    elementType: CircularProgressSvg,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotTrack, trackProps] = useSlot('track', {\n    className: classes.track,\n    elementType: CircularProgressTrack,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotProgress, progressProps] = useSlot('progress', {\n    className: classes.progress,\n    elementType: CircularProgressProgress,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotSvg, _extends({}, svgProps, {\n      children: [/*#__PURE__*/_jsx(SlotTrack, _extends({}, trackProps)), /*#__PURE__*/_jsx(SlotProgress, _extends({}, progressProps))]\n    })), children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The boolean to select a variant.\n   * Use indeterminate when there is no progress value.\n   * @default false\n   */\n  determinate: PropTypes.bool,\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   *\n   * For indeterminate, @default 25\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default CircularProgress;"]},"metadata":{},"sourceType":"module"}