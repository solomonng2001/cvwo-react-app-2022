{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/base/composeClasses';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport { getFormLabelUtilityClass } from './formLabelClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    asterisk: ['asterisk']\n  };\n  return composeClasses(slots, getFormLabelUtilityClass, {});\n};\n\nconst FormLabelRoot = styled('label', {\n  name: 'JoyFormLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    WebkitTapHighlightColor: 'transparent',\n    alignSelf: 'var(--FormLabel-alignSelf)',\n    // to not fill the block space. It seems like a bug when clicking on empty space (within the label area), even though it is not.\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    userSelect: 'none',\n    fontFamily: theme.vars.fontFamily.body,\n    fontSize: `var(--FormLabel-fontSize, ${theme.vars.fontSize.sm})`,\n    fontWeight: theme.vars.fontWeight.md,\n    lineHeight: theme.vars.lineHeight.md,\n    color: `var(--FormLabel-color, ${theme.vars.palette.text.primary})`,\n    margin: 'var(--FormLabel-margin, 0px)'\n  };\n});\nconst AsteriskComponent = styled('span', {\n  name: 'JoyFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})({\n  color: 'var(--FormLabel-asterisk-color)'\n});\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  var _ref, _inProps$required;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyFormLabel'\n  });\n\n  const {\n    children,\n    component = 'label'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const formControl = React.useContext(FormControlContext);\n  const required = (_ref = (_inProps$required = inProps.required) != null ? _inProps$required : formControl == null ? void 0 : formControl.required) != null ? _ref : false;\n\n  const ownerState = _extends({}, props, {\n    required\n  });\n\n  const classes = useUtilityClasses();\n\n  const externalForwardedProps = _extends({}, other, {\n    component\n  });\n\n  const [SlotRoot, rootProps] = useSlot('root', {\n    additionalProps: {\n      htmlFor: formControl == null ? void 0 : formControl.htmlFor,\n      id: formControl == null ? void 0 : formControl.labelId\n    },\n    ref,\n    className: classes.root,\n    elementType: FormLabelRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotAsterisk, asteriskProps] = useSlot('asterisk', {\n    additionalProps: {\n      'aria-hidden': true\n    },\n    className: classes.asterisk,\n    elementType: AsteriskComponent,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, required && /*#__PURE__*/_jsxs(SlotAsterisk, _extends({}, asteriskProps, {\n      children: [\"\\u2009\", '*']\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The asterisk is added if required=`true`\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/FormLabel/FormLabel.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","styled","useThemeProps","useSlot","getFormLabelUtilityClass","FormControlContext","jsxs","_jsxs","useUtilityClasses","slots","root","asterisk","FormLabelRoot","name","slot","overridesResolver","props","styles","theme","WebkitTapHighlightColor","alignSelf","display","alignItems","flexWrap","userSelect","fontFamily","vars","body","fontSize","sm","fontWeight","md","lineHeight","color","palette","text","primary","margin","AsteriskComponent","FormLabel","forwardRef","inProps","ref","_ref","_inProps$required","children","component","other","formControl","useContext","required","ownerState","classes","externalForwardedProps","SlotRoot","rootProps","additionalProps","htmlFor","id","labelId","className","elementType","SlotAsterisk","asteriskProps","process","env","NODE_ENV","propTypes","node","bool","sx","oneOfType","arrayOf","func","object"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/base/composeClasses';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport { getFormLabelUtilityClass } from './formLabelClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    asterisk: ['asterisk']\n  };\n  return composeClasses(slots, getFormLabelUtilityClass, {});\n};\nconst FormLabelRoot = styled('label', {\n  name: 'JoyFormLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  WebkitTapHighlightColor: 'transparent',\n  alignSelf: 'var(--FormLabel-alignSelf)',\n  // to not fill the block space. It seems like a bug when clicking on empty space (within the label area), even though it is not.\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  userSelect: 'none',\n  fontFamily: theme.vars.fontFamily.body,\n  fontSize: `var(--FormLabel-fontSize, ${theme.vars.fontSize.sm})`,\n  fontWeight: theme.vars.fontWeight.md,\n  lineHeight: theme.vars.lineHeight.md,\n  color: `var(--FormLabel-color, ${theme.vars.palette.text.primary})`,\n  margin: 'var(--FormLabel-margin, 0px)'\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'JoyFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})({\n  color: 'var(--FormLabel-asterisk-color)'\n});\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  var _ref, _inProps$required;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyFormLabel'\n  });\n  const {\n      children,\n      component = 'label'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const formControl = React.useContext(FormControlContext);\n  const required = (_ref = (_inProps$required = inProps.required) != null ? _inProps$required : formControl == null ? void 0 : formControl.required) != null ? _ref : false;\n  const ownerState = _extends({}, props, {\n    required\n  });\n  const classes = useUtilityClasses();\n  const externalForwardedProps = _extends({}, other, {\n    component\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    additionalProps: {\n      htmlFor: formControl == null ? void 0 : formControl.htmlFor,\n      id: formControl == null ? void 0 : formControl.labelId\n    },\n    ref,\n    className: classes.root,\n    elementType: FormLabelRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotAsterisk, asteriskProps] = useSlot('asterisk', {\n    additionalProps: {\n      'aria-hidden': true\n    },\n    className: classes.asterisk,\n    elementType: AsteriskComponent,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [children, required && /*#__PURE__*/_jsxs(SlotAsterisk, _extends({}, asteriskProps, {\n      children: [\"\\u2009\", '*']\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The asterisk is added if required=`true`\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;"]},"metadata":{},"sourceType":"module"}