{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"color\", \"textColor\"],\n      _excluded2 = [\"component\", \"gutterBottom\", \"noWrap\", \"level\", \"levelMapping\", \"children\", \"endDecorator\", \"startDecorator\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const TypographyContext = /*#__PURE__*/React.createContext(false);\n\nconst useUtilityClasses = ownerState => {\n  const {\n    gutterBottom,\n    noWrap,\n    level,\n    color,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', level, gutterBottom && 'gutterBottom', noWrap && 'noWrap', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`],\n    startDecorator: ['startDecorator'],\n    endDecorator: ['endDecorator']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, {});\n};\n\nconst StartDecorator = styled('span', {\n  name: 'JoyTypography',\n  slot: 'StartDecorator',\n  overridesResolver: (props, styles) => styles.startDecorator\n})(_ref => {\n  let {\n    ownerState\n  } = _ref;\n\n  var _ownerState$sx;\n\n  return _extends({\n    display: 'inline-flex',\n    marginInlineEnd: 'clamp(4px, var(--Typography-gap, 0.375em), 0.75rem)'\n  }, ((_ownerState$sx = ownerState.sx) == null ? void 0 : _ownerState$sx.alignItems) === 'flex-start' && {\n    marginTop: '2px' // this makes the alignment perfect in most cases\n\n  });\n});\nconst EndDecorator = styled('span', {\n  name: 'JoyTypography',\n  slot: 'endDecorator',\n  overridesResolver: (props, styles) => styles.endDecorator\n})(_ref2 => {\n  let {\n    ownerState\n  } = _ref2;\n\n  var _ownerState$sx2;\n\n  return _extends({\n    display: 'inline-flex',\n    marginInlineStart: 'clamp(4px, var(--Typography-gap, 0.375em), 0.75rem)'\n  }, ((_ownerState$sx2 = ownerState.sx) == null ? void 0 : _ownerState$sx2.alignItems) === 'flex-start' && {\n    marginTop: '2px' // this makes the alignment perfect in most cases\n\n  });\n});\nconst TypographyRoot = styled('span', {\n  name: 'JoyTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref3 => {\n  let {\n    theme,\n    ownerState\n  } = _ref3;\n\n  var _theme$vars$palette$o, _theme$variants$owner;\n\n  return _extends({\n    '--Icon-fontSize': '1.25em',\n    margin: 0\n  }, ownerState.nesting ? {\n    display: 'inline'\n  } : {\n    fontFamily: theme.vars.fontFamily.body,\n    // for nested typography, the font family will be inherited.\n    display: 'block'\n  }, (ownerState.startDecorator || ownerState.endDecorator) && _extends({\n    display: 'flex',\n    alignItems: 'center'\n  }, ownerState.nesting && _extends({\n    display: 'inline-flex'\n  }, ownerState.startDecorator && {\n    verticalAlign: 'bottom' // to make the text align with the parent's content\n\n  })), ownerState.level && ownerState.level !== 'inherit' && theme.typography[ownerState.level], ownerState.noWrap && {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }, ownerState.gutterBottom && {\n    marginBottom: '0.35em'\n  }, ownerState.color && {\n    color: `rgba(${(_theme$vars$palette$o = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette$o.mainChannel} / 1)`\n  }, ownerState.variant && _extends({\n    borderRadius: theme.vars.radius.xs,\n    paddingBlock: 'min(0.15em, 4px)',\n    paddingInline: '0.375em'\n  }, !ownerState.nesting && {\n    marginInline: '-0.375em'\n  }, (_theme$variants$owner = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants$owner[ownerState.color]));\n});\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  display1: 'h1',\n  display2: 'h2',\n  body1: 'p',\n  body2: 'p',\n  body3: 'span',\n  body4: 'span',\n  body5: 'span',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const _useThemeProps = useThemeProps({\n    props: inProps,\n    name: 'JoyTypography'\n  }),\n        {\n    color,\n    textColor\n  } = _useThemeProps,\n        themeProps = _objectWithoutPropertiesLoose(_useThemeProps, _excluded);\n\n  const nesting = React.useContext(TypographyContext);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color: textColor\n  }));\n\n  const {\n    component: componentProp,\n    gutterBottom = false,\n    noWrap = false,\n    level: levelProp = 'body1',\n    levelMapping = {},\n    children,\n    endDecorator,\n    startDecorator,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const level = nesting ? inProps.level || 'inherit' : levelProp;\n  const component = componentProp || (nesting ? 'span' : levelMapping[level] || defaultVariantMapping[level] || 'span');\n\n  const ownerState = _extends({}, props, {\n    level,\n    component,\n    color: variant ? color != null ? color : 'neutral' : color,\n    gutterBottom,\n    noWrap,\n    nesting,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const externalForwardedProps = _extends({}, other, {\n    component\n  });\n\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: TypographyRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotStartDecorator, startDecoratorProps] = useSlot('startDecorator', {\n    className: classes.startDecorator,\n    elementType: StartDecorator,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotEndDecorator, endDecoratorProps] = useSlot('endDecorator', {\n    className: classes.endDecorator,\n    elementType: EndDecorator,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(TypographyContext.Provider, {\n    value: true,\n    children: /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n      children: [startDecorator && /*#__PURE__*/_jsx(SlotStartDecorator, _extends({}, startDecoratorProps, {\n        children: startDecorator\n      })), children, endDecorator && /*#__PURE__*/_jsx(SlotEndDecorator, _extends({}, endDecoratorProps, {\n        children: endDecorator\n      }))]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Element placed after the children.\n   */\n  endDecorator: PropTypes.node,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  level: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'body3', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, body1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   body3: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  levelMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * Element placed before the children.\n   */\n  startDecorator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The system color.\n   */\n  textColor: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Typography;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/Typography/Typography.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","unstable_capitalize","capitalize","unstable_extendSxProp","extendSxProp","composeClasses","styled","useThemeProps","useSlot","getTypographyUtilityClass","jsx","_jsx","jsxs","_jsxs","TypographyContext","createContext","useUtilityClasses","ownerState","gutterBottom","noWrap","level","color","variant","slots","root","startDecorator","endDecorator","StartDecorator","name","slot","overridesResolver","props","styles","_ownerState$sx","display","marginInlineEnd","sx","alignItems","marginTop","EndDecorator","_ownerState$sx2","marginInlineStart","TypographyRoot","theme","_theme$vars$palette$o","_theme$variants$owner","margin","nesting","fontFamily","vars","body","verticalAlign","typography","overflow","textOverflow","whiteSpace","marginBottom","palette","mainChannel","borderRadius","radius","xs","paddingBlock","paddingInline","marginInline","variants","defaultVariantMapping","h1","h2","h3","h4","h5","h6","display1","display2","body1","body2","body3","body4","body5","inherit","Typography","forwardRef","inProps","ref","_useThemeProps","textColor","themeProps","useContext","component","componentProp","levelProp","levelMapping","children","other","classes","externalForwardedProps","SlotRoot","rootProps","className","elementType","SlotStartDecorator","startDecoratorProps","SlotEndDecorator","endDecoratorProps","Provider","value","process","env","NODE_ENV","propTypes","node","oneOfType","oneOf","string","bool","object","arrayOf","func","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"color\", \"textColor\"],\n  _excluded2 = [\"component\", \"gutterBottom\", \"noWrap\", \"level\", \"levelMapping\", \"children\", \"endDecorator\", \"startDecorator\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useSlot from '../utils/useSlot';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const TypographyContext = /*#__PURE__*/React.createContext(false);\nconst useUtilityClasses = ownerState => {\n  const {\n    gutterBottom,\n    noWrap,\n    level,\n    color,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', level, gutterBottom && 'gutterBottom', noWrap && 'noWrap', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`],\n    startDecorator: ['startDecorator'],\n    endDecorator: ['endDecorator']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, {});\n};\nconst StartDecorator = styled('span', {\n  name: 'JoyTypography',\n  slot: 'StartDecorator',\n  overridesResolver: (props, styles) => styles.startDecorator\n})(({\n  ownerState\n}) => {\n  var _ownerState$sx;\n  return _extends({\n    display: 'inline-flex',\n    marginInlineEnd: 'clamp(4px, var(--Typography-gap, 0.375em), 0.75rem)'\n  }, ((_ownerState$sx = ownerState.sx) == null ? void 0 : _ownerState$sx.alignItems) === 'flex-start' && {\n    marginTop: '2px' // this makes the alignment perfect in most cases\n  });\n});\n\nconst EndDecorator = styled('span', {\n  name: 'JoyTypography',\n  slot: 'endDecorator',\n  overridesResolver: (props, styles) => styles.endDecorator\n})(({\n  ownerState\n}) => {\n  var _ownerState$sx2;\n  return _extends({\n    display: 'inline-flex',\n    marginInlineStart: 'clamp(4px, var(--Typography-gap, 0.375em), 0.75rem)'\n  }, ((_ownerState$sx2 = ownerState.sx) == null ? void 0 : _ownerState$sx2.alignItems) === 'flex-start' && {\n    marginTop: '2px' // this makes the alignment perfect in most cases\n  });\n});\n\nconst TypographyRoot = styled('span', {\n  name: 'JoyTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$palette$o, _theme$variants$owner;\n  return _extends({\n    '--Icon-fontSize': '1.25em',\n    margin: 0\n  }, ownerState.nesting ? {\n    display: 'inline'\n  } : {\n    fontFamily: theme.vars.fontFamily.body,\n    // for nested typography, the font family will be inherited.\n    display: 'block'\n  }, (ownerState.startDecorator || ownerState.endDecorator) && _extends({\n    display: 'flex',\n    alignItems: 'center'\n  }, ownerState.nesting && _extends({\n    display: 'inline-flex'\n  }, ownerState.startDecorator && {\n    verticalAlign: 'bottom' // to make the text align with the parent's content\n  })), ownerState.level && ownerState.level !== 'inherit' && theme.typography[ownerState.level], ownerState.noWrap && {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }, ownerState.gutterBottom && {\n    marginBottom: '0.35em'\n  }, ownerState.color && {\n    color: `rgba(${(_theme$vars$palette$o = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette$o.mainChannel} / 1)`\n  }, ownerState.variant && _extends({\n    borderRadius: theme.vars.radius.xs,\n    paddingBlock: 'min(0.15em, 4px)',\n    paddingInline: '0.375em'\n  }, !ownerState.nesting && {\n    marginInline: '-0.375em'\n  }, (_theme$variants$owner = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants$owner[ownerState.color]));\n});\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  display1: 'h1',\n  display2: 'h2',\n  body1: 'p',\n  body2: 'p',\n  body3: 'span',\n  body4: 'span',\n  body5: 'span',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const _useThemeProps = useThemeProps({\n      props: inProps,\n      name: 'JoyTypography'\n    }),\n    {\n      color,\n      textColor\n    } = _useThemeProps,\n    themeProps = _objectWithoutPropertiesLoose(_useThemeProps, _excluded);\n  const nesting = React.useContext(TypographyContext);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color: textColor\n  }));\n  const {\n      component: componentProp,\n      gutterBottom = false,\n      noWrap = false,\n      level: levelProp = 'body1',\n      levelMapping = {},\n      children,\n      endDecorator,\n      startDecorator,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const level = nesting ? inProps.level || 'inherit' : levelProp;\n  const component = componentProp || (nesting ? 'span' : levelMapping[level] || defaultVariantMapping[level] || 'span');\n  const ownerState = _extends({}, props, {\n    level,\n    component,\n    color: variant ? color != null ? color : 'neutral' : color,\n    gutterBottom,\n    noWrap,\n    nesting,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = _extends({}, other, {\n    component\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: TypographyRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotStartDecorator, startDecoratorProps] = useSlot('startDecorator', {\n    className: classes.startDecorator,\n    elementType: StartDecorator,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotEndDecorator, endDecoratorProps] = useSlot('endDecorator', {\n    className: classes.endDecorator,\n    elementType: EndDecorator,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(TypographyContext.Provider, {\n    value: true,\n    children: /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n      children: [startDecorator && /*#__PURE__*/_jsx(SlotStartDecorator, _extends({}, startDecoratorProps, {\n        children: startDecorator\n      })), children, endDecorator && /*#__PURE__*/_jsx(SlotEndDecorator, _extends({}, endDecoratorProps, {\n        children: endDecorator\n      }))]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Element placed after the children.\n   */\n  endDecorator: PropTypes.node,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  level: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'body3', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, body1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   body3: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  levelMapping: PropTypes /* @typescript-to-proptypes-ignore */.object,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * Element placed before the children.\n   */\n  startDecorator: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The system color.\n   */\n  textColor: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Typography;"]},"metadata":{},"sourceType":"module"}