{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"color\", \"size\", \"variant\", \"thickness\", \"determinate\", \"value\", \"style\"];\n\nlet _ = t => t,\n    _t,\n    _t2;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { css, keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\"; // TODO: replace `left` with `inset-inline-start` in the future to work with writing-mode. https://caniuse.com/?search=inset-inline-start\n//       replace `width` with `inline-size`, not sure why inline-size does not work with animation in Safari.\n\nconst progressKeyframe = keyframes(_t || (_t = _`\n  0% {\n    left: var(--_LinearProgress-progressInset);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n\n  25% {\n    width: var(--LinearProgress-progressMaxWidth);\n  }\n\n  50% {\n    left: var(--_LinearProgress-progressLeft);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n\n  75% {\n    width: var(--LinearProgress-progressMaxWidth);\n  }\n  \n  100% {\n    left: var(--_LinearProgress-progressInset);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    determinate,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', determinate && 'determinate', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, {});\n};\n\nconst LinearProgressRoot = styled('div', {\n  name: 'JoyLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n\n  var _theme$variants;\n\n  return _extends({\n    // public variables\n    '--LinearProgress-radius': 'var(--LinearProgress-thickness)',\n    '--LinearProgress-progressThickness': 'var(--LinearProgress-thickness)',\n    '--LinearProgress-progressRadius': 'max(var(--LinearProgress-radius) - var(--_LinearProgress-padding), min(var(--_LinearProgress-padding) / 2, var(--LinearProgress-radius) / 2))'\n  }, ownerState.size === 'sm' && {\n    '--LinearProgress-thickness': '4px'\n  }, ownerState.size === 'md' && {\n    '--LinearProgress-thickness': '6px'\n  }, ownerState.size === 'lg' && {\n    '--LinearProgress-thickness': '8px'\n  }, ownerState.thickness && {\n    '--LinearProgress-thickness': `${ownerState.thickness}px`\n  }, !ownerState.determinate && {\n    '--LinearProgress-progressMinWidth': 'calc(var(--LinearProgress-percent) * 1% / 2)',\n    '--LinearProgress-progressMaxWidth': 'calc(var(--LinearProgress-percent) * 1%)',\n    '--_LinearProgress-progressLeft': 'calc(100% - var(--LinearProgress-progressMinWidth) - var(--_LinearProgress-progressInset))',\n    '--_LinearProgress-progressInset': 'calc(var(--LinearProgress-thickness) / 2 - var(--LinearProgress-progressThickness) / 2)'\n  }, {\n    minBlockSize: 'var(--LinearProgress-thickness)',\n    boxSizing: 'border-box',\n    borderRadius: 'var(--LinearProgress-radius)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    padding: 'var(--_LinearProgress-padding)',\n    position: 'relative'\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {\n    '--_LinearProgress-padding': 'max((var(--LinearProgress-thickness) - 2 * var(--variant-borderWidth) - var(--LinearProgress-progressThickness)) / 2, 0px)',\n    '&::before': {\n      content: '\"\"',\n      display: 'block',\n      boxSizing: 'inherit',\n      blockSize: 'var(--LinearProgress-progressThickness)',\n      borderRadius: 'var(--LinearProgress-progressRadius)',\n      backgroundColor: 'currentColor',\n      color: 'inherit',\n      position: 'absolute' // required to make `left` animation works.\n\n    }\n  });\n}, _ref2 => {\n  let {\n    ownerState\n  } = _ref2;\n  return ownerState.determinate ? {\n    '&::before': {\n      left: 'var(--_LinearProgress-padding)',\n      transition: 'inline-size 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n      inlineSize: 'calc(var(--LinearProgress-percent) * 1% - 2 * var(--_LinearProgress-padding))'\n    }\n  } : css(_t2 || (_t2 = _`\n          &::before {\n            animation: ${0}\n              var(--LinearProgress-circulation, 2.5s ease-in-out 0s infinite normal none running);\n          }\n        `), progressKeyframe);\n});\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyLinearProgress'\n  });\n\n  const {\n    children,\n    className,\n    component,\n    color = 'primary',\n    size = 'md',\n    variant = 'soft',\n    thickness,\n    determinate = false,\n    value = determinate ? 0 : 25,\n    // `25` is the 1/4 of the bar.\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    color,\n    size,\n    variant,\n    thickness,\n    value,\n    determinate,\n    instanceSize: inProps.size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinearProgressRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    role: \"progressbar\",\n    style: _extends({}, {\n      '--LinearProgress-percent': value\n    }, style),\n    ownerState: ownerState\n  }, typeof value === 'number' && determinate && {\n    'aria-valuenow': Math.round(value)\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The boolean to select a variant.\n   * Use indeterminate when there is no progress value.\n   * @default false\n   */\n  determinate: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the bar.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   *\n   * For indeterminate, @default 25\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default LinearProgress;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/LinearProgress/LinearProgress.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_","t","_t","_t2","React","PropTypes","clsx","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","css","keyframes","styled","useThemeProps","getLinearProgressUtilityClass","jsx","_jsx","progressKeyframe","useUtilityClasses","ownerState","determinate","color","variant","size","slots","root","LinearProgressRoot","name","slot","overridesResolver","props","styles","theme","_theme$variants","thickness","minBlockSize","boxSizing","borderRadius","display","justifyContent","alignItems","flex","padding","position","variants","content","blockSize","backgroundColor","left","transition","inlineSize","LinearProgress","forwardRef","inProps","ref","children","className","component","value","style","other","instanceSize","classes","as","role","Math","round","process","env","NODE_ENV","propTypes","node","string","oneOfType","oneOf","elementType","bool","object","sx","arrayOf","func","number"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"color\", \"size\", \"variant\", \"thickness\", \"determinate\", \"value\", \"style\"];\nlet _ = t => t,\n  _t,\n  _t2;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { css, keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO: replace `left` with `inset-inline-start` in the future to work with writing-mode. https://caniuse.com/?search=inset-inline-start\n//       replace `width` with `inline-size`, not sure why inline-size does not work with animation in Safari.\nconst progressKeyframe = keyframes(_t || (_t = _`\n  0% {\n    left: var(--_LinearProgress-progressInset);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n\n  25% {\n    width: var(--LinearProgress-progressMaxWidth);\n  }\n\n  50% {\n    left: var(--_LinearProgress-progressLeft);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n\n  75% {\n    width: var(--LinearProgress-progressMaxWidth);\n  }\n  \n  100% {\n    left: var(--_LinearProgress-progressInset);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    determinate,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', determinate && 'determinate', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, {});\n};\nconst LinearProgressRoot = styled('div', {\n  name: 'JoyLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => {\n  var _theme$variants;\n  return _extends({\n    // public variables\n    '--LinearProgress-radius': 'var(--LinearProgress-thickness)',\n    '--LinearProgress-progressThickness': 'var(--LinearProgress-thickness)',\n    '--LinearProgress-progressRadius': 'max(var(--LinearProgress-radius) - var(--_LinearProgress-padding), min(var(--_LinearProgress-padding) / 2, var(--LinearProgress-radius) / 2))'\n  }, ownerState.size === 'sm' && {\n    '--LinearProgress-thickness': '4px'\n  }, ownerState.size === 'md' && {\n    '--LinearProgress-thickness': '6px'\n  }, ownerState.size === 'lg' && {\n    '--LinearProgress-thickness': '8px'\n  }, ownerState.thickness && {\n    '--LinearProgress-thickness': `${ownerState.thickness}px`\n  }, !ownerState.determinate && {\n    '--LinearProgress-progressMinWidth': 'calc(var(--LinearProgress-percent) * 1% / 2)',\n    '--LinearProgress-progressMaxWidth': 'calc(var(--LinearProgress-percent) * 1%)',\n    '--_LinearProgress-progressLeft': 'calc(100% - var(--LinearProgress-progressMinWidth) - var(--_LinearProgress-progressInset))',\n    '--_LinearProgress-progressInset': 'calc(var(--LinearProgress-thickness) / 2 - var(--LinearProgress-progressThickness) / 2)'\n  }, {\n    minBlockSize: 'var(--LinearProgress-thickness)',\n    boxSizing: 'border-box',\n    borderRadius: 'var(--LinearProgress-radius)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    padding: 'var(--_LinearProgress-padding)',\n    position: 'relative'\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {\n    '--_LinearProgress-padding': 'max((var(--LinearProgress-thickness) - 2 * var(--variant-borderWidth) - var(--LinearProgress-progressThickness)) / 2, 0px)',\n    '&::before': {\n      content: '\"\"',\n      display: 'block',\n      boxSizing: 'inherit',\n      blockSize: 'var(--LinearProgress-progressThickness)',\n      borderRadius: 'var(--LinearProgress-progressRadius)',\n      backgroundColor: 'currentColor',\n      color: 'inherit',\n      position: 'absolute' // required to make `left` animation works.\n    }\n  });\n}, ({\n  ownerState\n}) => ownerState.determinate ? {\n  '&::before': {\n    left: 'var(--_LinearProgress-padding)',\n    transition: 'inline-size 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    inlineSize: 'calc(var(--LinearProgress-percent) * 1% - 2 * var(--_LinearProgress-padding))'\n  }\n} : css(_t2 || (_t2 = _`\n          &::before {\n            animation: ${0}\n              var(--LinearProgress-circulation, 2.5s ease-in-out 0s infinite normal none running);\n          }\n        `), progressKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyLinearProgress'\n  });\n  const {\n      children,\n      className,\n      component,\n      color = 'primary',\n      size = 'md',\n      variant = 'soft',\n      thickness,\n      determinate = false,\n      value = determinate ? 0 : 25,\n      // `25` is the 1/4 of the bar.\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    color,\n    size,\n    variant,\n    thickness,\n    value,\n    determinate,\n    instanceSize: inProps.size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinearProgressRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    role: \"progressbar\",\n    style: _extends({}, {\n      '--LinearProgress-percent': value\n    }, style),\n    ownerState: ownerState\n  }, typeof value === 'number' && determinate && {\n    'aria-valuenow': Math.round(value)\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The boolean to select a variant.\n   * Use indeterminate when there is no progress value.\n   * @default false\n   */\n  determinate: PropTypes.bool,\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the bar.\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   *\n   * For indeterminate, @default 25\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default LinearProgress;"]},"metadata":{},"sourceType":"module"}