{"ast":null,"code":"import _slicedToArray from\"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,TextField,Dialog,DialogActions,DialogContent,DialogTitle}from'@material-ui/core';import AlertUser from'./AlertUser';import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateComment=function CreateComment(_ref){var API=_ref.API,openCreateComment=_ref.openCreateComment,handleCloseCreateComment=_ref.handleCloseCreateComment,thread_page_id=_ref.thread_page_id,currentUserState=_ref.currentUserState;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),body=_useState2[0],setBody=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),severity=_useState4[0],setSeverity=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var resetCreateComment=function resetCreateComment(){setBody(\"\");};var handleSubmitCreateComment=function handleSubmitCreateComment(){var user_id=currentUserState.currentUser.id;var new_message=[];if(body===\"\"){new_message.push(\"Fill in all fields\");}if(new_message.length>0){setSeverity('error');setMessage(new_message);}else{fetch(API+\"/thread_pages/\"+thread_page_id.toString()+\"/comments\",{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({body:body,user_id:user_id,thread_page_id:thread_page_id})}).then(function(response){if(response.ok){setSeverity('success');new_message.push(\"You have created a new comment!\");setMessage(new_message);resetCreateComment();setTimeout(function(){return window.location.reload();},1000);}else{setSeverity('error');new_message.push(\"Some error occured\");setMessage(new_message);}}).catch(function(error){return console.log(error.message);});}};return/*#__PURE__*/_jsxs(Dialog,{open:openCreateComment,onClose:handleCloseCreateComment,fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"What's on your mind?\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(AlertUser,{severity:severity,message:message}),/*#__PURE__*/_jsx(TextField,{value:body,autoFocus:true,type:\"text\",margin:\"normal\",label:\"Say something here...\",fullWidth:true,variant:\"standard\",multiline:true,onChange:function onChange(event){return setBody(event.target.value);}})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseCreateComment,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmitCreateComment,children:\"Comment\"})]})]});};export default CreateComment;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateComment.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","AlertUser","React","useState","CreateComment","API","openCreateComment","handleCloseCreateComment","thread_page_id","currentUserState","body","setBody","undefined","severity","setSeverity","message","setMessage","resetCreateComment","handleSubmitCreateComment","user_id","currentUser","id","new_message","push","length","fetch","toString","method","headers","JSON","stringify","then","response","ok","setTimeout","window","location","reload","catch","error","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\nimport CurrentUserState from '../types/CurrentUserState';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openCreateComment: boolean;\n    handleCloseCreateComment: () => void;\n    thread_page_id: number;\n    currentUserState: CurrentUserState;\n    API: string;\n}\n\nconst CreateComment: React.FC<Props> = ({API, openCreateComment, handleCloseCreateComment, thread_page_id, currentUserState}: Props) => {\n    const [body, setBody] = useState<string>(\"\");\n    const [severity, setSeverity] = useState<AlertColor | undefined>(undefined);\n    const [message, setMessage] = useState<string[]>([]);\n\n    const resetCreateComment = () => {\n        setBody(\"\");\n    }\n    \n    const handleSubmitCreateComment = () => {\n        const user_id = currentUserState.currentUser.id\n        let new_message: string[] = [];\n        if (body === \"\") {\n            new_message.push(\"Fill in all fields\");\n        }\n        if (new_message.length > 0) {\n            setSeverity('error');\n            setMessage(new_message);\n        } else {\n            fetch(API + \"/thread_pages/\" + thread_page_id.toString() + \"/comments\", {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                body: JSON.stringify({\n                    body,\n                    user_id,\n                    thread_page_id,\n                }),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSeverity('success');\n                        new_message.push(\"You have created a new comment!\")\n                        setMessage(new_message);\n                        resetCreateComment();\n                        setTimeout(() => window.location.reload(), 1000);\n                    } else {\n                        setSeverity('error');\n                        new_message.push(\"Some error occured\");\n                        setMessage(new_message);\n                    }\n                })\n                .catch((error) => console.log(error.message));\n        }\n    }\n\n    return (\n        <Dialog open={openCreateComment} onClose={handleCloseCreateComment} fullWidth>\n            <DialogTitle>What's on your mind?</DialogTitle>\n            <DialogContent>\n                <AlertUser severity={severity} message={message}/>\n                <TextField\n                    value = {body}\n                    autoFocus\n                    type='text'\n                    margin=\"normal\"\n                    label=\"Say something here...\"\n                    fullWidth\n                    variant=\"standard\"\n                    multiline\n                    onChange={(event) => setBody(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseCreateComment}>Cancel</Button>\n                <Button onClick={handleSubmitCreateComment}>Comment</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default CreateComment;"]},"metadata":{},"sourceType":"module"}