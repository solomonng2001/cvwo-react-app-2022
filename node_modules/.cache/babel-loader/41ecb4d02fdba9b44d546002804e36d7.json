{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '../styles';\nimport { getFormHelperTextUtilityClass } from './formHelperTextClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport formLabelClasses from '../FormLabel/formLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClass, {});\n};\n\nconst FormHelperTextRoot = styled('p', {\n  name: 'JoyFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    fontFamily: theme.vars.fontFamily.body,\n    fontSize: `var(--FormHelperText-fontSize, ${theme.vars.fontSize.sm})`,\n    lineHeight: theme.vars.lineHeight.sm,\n    color: `var(--FormHelperText-color, ${theme.vars.palette.text.secondary})`,\n    margin: 'var(--FormHelperText-margin, 0px)',\n    [`.${formLabelClasses.root} + &`]: {\n      '--FormHelperText-margin': '0px' // remove the margin if the helper text is next to the form label.\n\n    }\n  };\n});\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyFormHelperText'\n  });\n\n  const {\n    children,\n    component\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, ref);\n  const formControl = React.useContext(FormControlContext);\n  const setHelperText = formControl == null ? void 0 : formControl.setHelperText;\n  React.useEffect(() => {\n    setHelperText == null ? void 0 : setHelperText(rootRef.current);\n    return () => {\n      setHelperText == null ? void 0 : setHelperText(null);\n    };\n  }, [setHelperText]);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses();\n  const rootProps = useSlotProps({\n    elementType: FormHelperTextRoot,\n    externalSlotProps: {},\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref: handleRef,\n      as: component,\n      id: formControl == null ? void 0 : formControl['aria-describedby']\n    },\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormHelperText;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/FormHelperText/FormHelperText.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","composeClasses","useSlotProps","styled","useThemeProps","getFormHelperTextUtilityClass","FormControlContext","formLabelClasses","jsx","_jsx","useUtilityClasses","slots","root","FormHelperTextRoot","name","slot","overridesResolver","props","styles","theme","display","alignItems","fontFamily","vars","body","fontSize","sm","lineHeight","color","palette","text","secondary","margin","FormHelperText","forwardRef","inProps","ref","children","component","other","rootRef","useRef","handleRef","formControl","useContext","setHelperText","useEffect","current","ownerState","classes","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","id","className","process","env","NODE_ENV","propTypes","node","object","sx","oneOfType","arrayOf","func","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport { useSlotProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '../styles';\nimport { getFormHelperTextUtilityClass } from './formHelperTextClasses';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport formLabelClasses from '../FormLabel/formLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClass, {});\n};\nconst FormHelperTextRoot = styled('p', {\n  name: 'JoyFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  fontFamily: theme.vars.fontFamily.body,\n  fontSize: `var(--FormHelperText-fontSize, ${theme.vars.fontSize.sm})`,\n  lineHeight: theme.vars.lineHeight.sm,\n  color: `var(--FormHelperText-color, ${theme.vars.palette.text.secondary})`,\n  margin: 'var(--FormHelperText-margin, 0px)',\n  [`.${formLabelClasses.root} + &`]: {\n    '--FormHelperText-margin': '0px' // remove the margin if the helper text is next to the form label.\n  }\n}));\n\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyFormHelperText'\n  });\n  const {\n      children,\n      component\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(rootRef, ref);\n  const formControl = React.useContext(FormControlContext);\n  const setHelperText = formControl == null ? void 0 : formControl.setHelperText;\n  React.useEffect(() => {\n    setHelperText == null ? void 0 : setHelperText(rootRef.current);\n    return () => {\n      setHelperText == null ? void 0 : setHelperText(null);\n    };\n  }, [setHelperText]);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses();\n  const rootProps = useSlotProps({\n    elementType: FormHelperTextRoot,\n    externalSlotProps: {},\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref: handleRef,\n      as: component,\n      id: formControl == null ? void 0 : formControl['aria-describedby']\n    },\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormHelperText;"]},"metadata":{},"sourceType":"module"}