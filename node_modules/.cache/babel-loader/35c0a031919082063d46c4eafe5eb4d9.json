{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\nimport CreateThread from './CreateThread';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const [openCreateThread, setOpenCreateThread] = React.useState(false);\n\n  const handleClickOpenCreateThread = () => {\n    setOpenCreateThread(true);\n  };\n\n  const handleCloseCreateThread = () => {\n    setOpenCreateThread(false);\n  };\n\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    setIsLoaded(false);\n    const title = search;\n    fetch(\"http://localhost:3000/thread_pages/search/title\", {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title\n      })\n    }).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setResults(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: '20px',\n      paddingBottom: '20px',\n      position: 'sticky',\n      top: '50px',\n      zIndex: '1100'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      sx: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          ml: 1,\n          flex: 1\n        },\n        placeholder: \"Who's chatting about what?\",\n        value: search,\n        onChange: event => setSearch(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          height: 28,\n          m: 0.5\n        },\n        orientation: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClickOpenCreateThread,\n        children: /*#__PURE__*/_jsxDEV(LibraryAddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateThread, {\n        openCreateThread: openCreateThread,\n        handleCloseCreateThread: handleCloseCreateThread\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"f9OeZgBnRh7zWthF9LMdsJKsK8c=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/SearchBar.tsx"],"names":["React","useEffect","useState","Paper","InputBase","Divider","IconButton","SearchIcon","LibraryAddIcon","CreateThread","SearchBar","openCreateThread","setOpenCreateThread","handleClickOpenCreateThread","handleCloseCreateThread","search","setSearch","results","setResults","error","setError","isLoaded","setIsLoaded","title","fetch","method","mode","headers","body","JSON","stringify","then","res","json","result","paddingTop","paddingBottom","position","top","zIndex","display","alignItems","ml","flex","event","target","value","height","m","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\nimport CreateThread from './CreateThread';\nimport { forEachTrailingCommentRange } from 'typescript';\n\nconst SearchBar: React.FC = () => {\n    const [openCreateThread, setOpenCreateThread] = React.useState<boolean>(false);\n\n    const handleClickOpenCreateThread = () => {\n      setOpenCreateThread(true);\n    };\n  \n    const handleCloseCreateThread = () => {\n      setOpenCreateThread(false);\n    };\n\n    const [search, setSearch] = useState<string>(\"\");\n    const [results, setResults] = useState<string[]>([]);\n    const [error, setError] = useState<any>(null);\n    const [isLoaded, setIsLoaded] = useState<boolean>(false);\n\n    useEffect(() => {\n        setIsLoaded(false);\n        const title = search;\n        fetch(\"http://localhost:3000/thread_pages/search/title\", {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                title,\n            }),\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setResults(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [search]);\n\n    return (\n        <div style={{paddingTop: '20px', paddingBottom: '20px', position: 'sticky', top: '50px', zIndex: '1100'}}>\n            <Paper\n            component=\"form\" \n            sx={{ display: 'flex', alignItems: 'center' }}\n            >\n                <InputBase\n                    sx={{ ml: 1, flex: 1 }}\n                    placeholder=\"Who's chatting about what?\"\n                    value={search}\n                    onChange={event => setSearch(event.target.value)}\n                />\n                <IconButton>\n                    <SearchIcon />\n                </IconButton>\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n                <IconButton onClick={handleClickOpenCreateThread}>\n                    <LibraryAddIcon />\n                </IconButton>\n                <CreateThread openCreateThread={openCreateThread} handleCloseCreateThread={handleCloseCreateThread} />\n            </Paper>\n            { results.map(result =>\n                <div>\n                    {result}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}