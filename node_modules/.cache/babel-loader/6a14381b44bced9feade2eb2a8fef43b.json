{"ast":null,"code":"import _slicedToArray from \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\nimport defaultOptionStringifier from './defaultOptionStringifier';\n\nfunction useSelect(props) {\n  var buttonRefProp = props.buttonRef,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      listboxIdProp = props.listboxId,\n      listboxRefProp = props.listboxRef,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onOpenChange = props.onOpenChange,\n      _props$open = props.open,\n      open = _props$open === void 0 ? false : _props$open,\n      options = props.options,\n      _props$optionStringif = props.optionStringifier,\n      optionStringifier = _props$optionStringif === void 0 ? defaultOptionStringifier : _props$optionStringif,\n      valueProp = props.value;\n  var buttonRef = React.useRef(null);\n  var handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  var listboxRef = React.useRef(null);\n  var listboxId = useId(listboxIdProp);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1]; // prevents closing the listbox on keyUp right after opening it\n\n\n  var ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  var ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      listboxFocusRequested = _React$useState2[0],\n      requestListboxFocus = _React$useState2[1];\n\n  var focusListboxIfRequested = React.useCallback(function () {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n  var handleListboxRef = useForkRef(listboxRefProp, listboxRef, focusListboxIfRequested);\n  React.useEffect(function () {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(function () {\n    requestListboxFocus(open);\n  }, [open]);\n\n  var createHandleMouseDown = function createHandleMouseDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n      if (!event.defaultPrevented && open) {\n        ignoreClick.current = true;\n      }\n    };\n  };\n\n  var createHandleButtonClick = function createHandleButtonClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n      if (!event.defaultPrevented && !ignoreClick.current) {\n        onOpenChange == null ? void 0 : onOpenChange(!open);\n      }\n\n      ignoreClick.current = false;\n    };\n  };\n\n  var createHandleButtonKeyDown = function createHandleButtonKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (event.key === 'Enter') {\n        ignoreEnterKeyUp.current = true;\n      }\n\n      if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        onOpenChange == null ? void 0 : onOpenChange(true);\n      }\n    };\n  };\n\n  var createHandleListboxKeyUp = function createHandleListboxKeyUp(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyU;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      var closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n      if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n        var _buttonRef$current;\n\n        buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n      }\n\n      ignoreEnterKeyUp.current = false;\n    };\n  };\n\n  var createHandleListboxItemClick = function createHandleListboxItemClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic2;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (!multiple) {\n        onOpenChange == null ? void 0 : onOpenChange(false);\n      }\n    };\n  };\n\n  var createHandleListboxBlur = function createHandleListboxBlur(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onBlur;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n\n      if (!event.defaultPrevented) {\n        onOpenChange == null ? void 0 : onOpenChange(false);\n      }\n    };\n  };\n\n  var listboxReducer = function listboxReducer(state, action) {\n    var newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  var _useButton = useButton({\n    disabled: disabled,\n    ref: handleButtonRef\n  }),\n      getButtonRootProps = _useButton.getRootProps,\n      buttonActive = _useButton.active,\n      buttonFocusVisible = _useButton.focusVisible;\n\n  var selectedOption = React.useMemo(function () {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(function (o) {\n      return value.includes(o.value);\n    }) : (_props$options$find = props.options.find(function (o) {\n      return o.value === value;\n    })) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  var useListboxParameters;\n\n  if (props.multiple) {\n    var onChangeMultiple = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: function isOptionDisabled(o) {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: function optionComparer(o, v) {\n        return (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value);\n      },\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: function onChange(e, newOptions) {\n        var newValues = newOptions.map(function (o) {\n          return o.value;\n        });\n        setValue(newValues);\n        onChangeMultiple == null ? void 0 : onChangeMultiple(e, newValues);\n      },\n      options: options,\n      optionStringifier: optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    var onChangeSingle = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: function isOptionDisabled(o) {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: function optionComparer(o, v) {\n        return (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value);\n      },\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: function onChange(e, option) {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChangeSingle == null ? void 0 : onChangeSingle(e, (_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options: options,\n      optionStringifier: optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  var _useListbox = useListbox(useListboxParameters),\n      getListboxRootProps = _useListbox.getRootProps,\n      getListboxOptionProps = _useListbox.getOptionProps,\n      getOptionState = _useListbox.getOptionState,\n      highlightedOption = _useListbox.highlightedOption,\n      listboxSelectedOption = _useListbox.selectedOption;\n\n  var getButtonProps = function getButtonProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox',\n      'aria-controls': listboxId\n    });\n  };\n\n  var getListboxProps = function getListboxProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return getListboxRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleListboxBlur(otherHandlers),\n      onKeyUp: createHandleListboxKeyUp(otherHandlers)\n    }));\n  };\n\n  var getOptionProps = function getOptionProps(option) {\n    var otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    highlightedOption: highlightedOption,\n    open: open\n  });\n  return {\n    buttonActive: buttonActive,\n    buttonFocusVisible: buttonFocusVisible,\n    disabled: disabled,\n    getButtonProps: getButtonProps,\n    getListboxProps: getListboxProps,\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState,\n    open: open,\n    value: value\n  };\n}\n\nexport default useSelect;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/base/SelectUnstyled/useSelect.js"],"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","unstable_useId","useId","useButton","useListbox","defaultListboxReducer","ActionTypes","defaultOptionStringifier","useSelect","props","buttonRefProp","buttonRef","defaultValue","disabled","listboxIdProp","listboxId","listboxRefProp","listboxRef","multiple","onChange","onOpenChange","open","options","optionStringifier","valueProp","value","useRef","handleButtonRef","controlled","default","name","state","setValue","ignoreEnterKeyUp","ignoreClick","useState","listboxFocusRequested","requestListboxFocus","focusListboxIfRequested","useCallback","current","focus","handleListboxRef","useEffect","createHandleMouseDown","otherHandlers","event","_otherHandlers$onMous","onMouseDown","call","defaultPrevented","createHandleButtonClick","_otherHandlers$onClic","onClick","createHandleButtonKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","createHandleListboxKeyUp","_otherHandlers$onKeyU","onKeyUp","closingKeys","includes","_buttonRef$current","createHandleListboxItemClick","_otherHandlers$onClic2","createHandleListboxBlur","_otherHandlers$onBlur","onBlur","listboxReducer","action","newState","type","keyDown","selectedValue","highlightedValue","blur","optionsChange","ref","getButtonRootProps","getRootProps","buttonActive","active","buttonFocusVisible","focusVisible","selectedOption","useMemo","_props$options$find","filter","o","find","useListboxParameters","onChangeMultiple","id","isOptionDisabled","_o$disabled","optionComparer","v","e","newOptions","newValues","map","onChangeSingle","_o$disabled2","option","_option$value","_option$value2","stateReducer","getListboxRootProps","getListboxOptionProps","getOptionProps","getOptionState","highlightedOption","listboxSelectedOption","getButtonProps","role","getListboxProps","useDebugValue"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nfunction useSelect(props) {\n  const {\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId: listboxIdProp,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    optionStringifier = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const listboxId = useId(listboxIdProp);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  });\n\n  // prevents closing the listbox on keyUp right after opening it\n  const ignoreEnterKeyUp = React.useRef(false);\n\n  // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n  const ignoreClick = React.useRef(false);\n\n  // Ensure the listbox is focused after opening\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n  const handleListboxRef = useForkRef(listboxRefProp, listboxRef, focusListboxIfRequested);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n    ignoreClick.current = false;\n  };\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n    ignoreEnterKeyUp.current = false;\n  };\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action);\n\n    // change selection when listbox is closed\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n    return newState;\n  };\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n  if (props.multiple) {\n    const onChangeMultiple = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: (e, newOptions) => {\n        const newValues = newOptions.map(o => o.value);\n        setValue(newValues);\n        onChangeMultiple == null ? void 0 : onChangeMultiple(e, newValues);\n      },\n      options,\n      optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    const onChangeSingle = onChange;\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: (e, option) => {\n        var _option$value, _option$value2;\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChangeSingle == null ? void 0 : onChangeSingle(e, (_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n  const getButtonProps = (otherHandlers = {}) => {\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox',\n      'aria-controls': listboxId\n    });\n  };\n  const getListboxProps = (otherHandlers = {}) => getListboxRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleListboxBlur(otherHandlers),\n    onKeyUp: createHandleListboxKeyUp(otherHandlers)\n  }));\n  const getOptionProps = (option, otherHandlers = {}) => {\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    highlightedOption,\n    open\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\nexport default useSelect;"]},"metadata":{},"sourceType":"module"}