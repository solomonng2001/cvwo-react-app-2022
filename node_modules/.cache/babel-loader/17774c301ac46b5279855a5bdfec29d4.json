{"ast":null,"code":"import { createContainer } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { useThemeProps } from '../styles';\nconst Container = createContainer({\n  componentName: 'JoyContainer',\n  createStyledComponent: styled('div', {\n    name: 'JoyContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'JoyContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/Container/Container.js"],"names":["createContainer","PropTypes","styled","useThemeProps","Container","componentName","createStyledComponent","name","slot","overridesResolver","props","styles","root","inProps","process","env","NODE_ENV","propTypes","children","node","component","elementType","disableGutters","bool","fixed","maxWidth","oneOfType","oneOf","string","sx","arrayOf","func","object"],"mappings":"AAAA,SAASA,eAAT,QAAgC,aAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,MAAMC,SAAS,GAAGJ,eAAe,CAAC;AAChCK,EAAAA,aAAa,EAAE,cADiB;AAEhCC,EAAAA,qBAAqB,EAAEJ,MAAM,CAAC,KAAD,EAAQ;AACnCK,IAAAA,IAAI,EAAE,cAD6B;AAEnCC,IAAAA,IAAI,EAAE,MAF6B;AAGnCC,IAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAHV,GAAR,CAFG;AAOhCT,EAAAA,aAAa,EAAEU,OAAO,IAAIV,aAAa,CAAC;AACtCO,IAAAA,KAAK,EAAEG,OAD+B;AAEtCN,IAAAA,IAAI,EAAE;AAFgC,GAAD;AAPP,CAAD,CAAjC;AAYAO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,SAAS,CAACa;AAAU;AAApB,EAA6C;AACnF;AACA;AACA;AACA;;AACA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAEjB,SAAS,CAACkB,IAR+D;;AASnF;AACF;AACA;AACA;AACEC,EAAAA,SAAS,EAAEnB,SAAS,CAACoB,WAb8D;;AAcnF;AACF;AACA;AACA;AACEC,EAAAA,cAAc,EAAErB,SAAS,CAACsB,IAlByD;;AAmBnF;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,KAAK,EAAEvB,SAAS,CAACsB,IA1BkE;;AA2BnF;AACF;AACA;AACA;AACA;AACA;AACEE,EAAAA,QAAQ,EAAExB;AAAU;AAAD,GAAuCyB,SAAhD,CAA0D,CAACzB,SAAS,CAAC0B,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,KAA/B,CAAhB,CAAD,EAAyD1B,SAAS,CAAC2B,MAAnE,CAA1D,CAjCyE;;AAkCnF;AACF;AACA;AACEC,EAAAA,EAAE,EAAE5B,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC6B,OAAV,CAAkB7B,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC8B,IAAX,EAAiB9B,SAAS,CAAC+B,MAA3B,EAAmC/B,SAAS,CAACsB,IAA7C,CAApB,CAAlB,CAAD,EAA6FtB,SAAS,CAAC8B,IAAvG,EAA6G9B,SAAS,CAAC+B,MAAvH,CAApB;AArC+E,CAArF,GAsCI,KAAK,CAtCT;AAuCA,eAAe5B,SAAf","sourcesContent":["import { createContainer } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { useThemeProps } from '../styles';\nconst Container = createContainer({\n  componentName: 'JoyContainer',\n  createStyledComponent: styled('div', {\n    name: 'JoyContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'JoyContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"]},"metadata":{},"sourceType":"module"}