{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"uncheckedIcon\", \"checkedIcon\", \"label\", \"defaultChecked\", \"disabled\", \"disableIcon\", \"overlay\", \"id\", \"indeterminate\", \"indeterminateIcon\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"value\", \"color\", \"variant\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSwitch } from '@mui/base/SwitchUnstyled';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport CheckIcon from '../internal/svg-icons/Check';\nimport IndeterminateIcon from '../internal/svg-icons/HorizontalRule';\nimport { TypographyContext } from '../Typography/Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    disableIcon,\n    focusVisible,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    checkbox: ['checkbox', checked && 'checked', disabled && 'disabled'],\n    // disabled class is necessary for displaying global variant\n    action: ['action', checked && 'checked', disableIcon && disabled && 'disabled', // add disabled class to action element for displaying global variant\n    focusVisible && 'focusVisible'],\n    input: ['input'],\n    label: ['label']\n  };\n  return composeClasses(slots, getCheckboxUtilityClass, {});\n};\n\nconst CheckboxRoot = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref4 => {\n  let {\n    ownerState,\n    theme\n  } = _ref4;\n\n  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;\n\n  return _extends({\n    '--Icon-fontSize': 'var(--Checkbox-size)'\n  }, ownerState.size === 'sm' && {\n    '--Checkbox-size': '1rem',\n    '--Checkbox-gap': '0.375rem',\n    fontSize: theme.vars.fontSize.sm\n  }, ownerState.size === 'md' && {\n    '--Checkbox-size': '1.25rem',\n    '--Checkbox-gap': '0.5rem',\n    fontSize: theme.vars.fontSize.md\n  }, ownerState.size === 'lg' && {\n    '--Checkbox-size': '1.5rem',\n    '--Checkbox-gap': '0.625rem',\n    fontSize: theme.vars.fontSize.lg\n  }, {\n    position: ownerState.overlay ? 'initial' : 'relative',\n    display: 'inline-flex',\n    fontFamily: theme.vars.fontFamily.body,\n    lineHeight: 'var(--Checkbox-size)',\n    // prevent label from having larger height than the checkbox\n    color: theme.vars.palette.text.primary,\n    [`&.${checkboxClasses.disabled}`]: {\n      color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.plainDisabledColor\n    }\n  }, ownerState.disableIcon && {\n    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`],\n    [`&.${checkboxClasses.disabled}`]: {\n      color: (_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3[`${ownerState.variant}DisabledColor`]\n    }\n  });\n});\nconst CheckboxCheckbox = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Checkbox',\n  overridesResolver: (props, styles) => styles.checkbox\n})(_ref5 => {\n  let {\n    theme,\n    ownerState\n  } = _ref5;\n\n  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;\n\n  return [_extends({\n    boxSizing: 'border-box',\n    borderRadius: theme.vars.radius.xs,\n    width: 'var(--Checkbox-size)',\n    height: 'var(--Checkbox-size)',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0,\n    // TODO: discuss the transition approach in a separate PR. This value is copied from mui-material Button.\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, ownerState.disableIcon && {\n    display: 'contents'\n  }), ...(!ownerState.disableIcon ? [(_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {\n    '&:hover': (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]\n  }, {\n    '&:active': (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]\n  }] : [])];\n});\nconst CheckboxAction = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})(_ref6 => {\n  let {\n    theme,\n    ownerState\n  } = _ref6;\n\n  var _theme$variants5, _theme$variants6, _theme$variants7, _theme$variants8;\n\n  return [{\n    borderRadius: `var(--Checkbox-action-radius, ${ownerState.overlay ? 'var(--internal-action-radius, inherit)' : 'inherit'})`,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 1,\n    // The action element usually cover the area of nearest positioned parent\n    // TODO: discuss the transition approach in a separate PR. This value is copied from mui-material Button.\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    [theme.focus.selector]: theme.focus.default\n  }, ...(ownerState.disableIcon ? [(_theme$variants5 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants5[ownerState.color], {\n    '&:hover': (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]\n  }, {\n    '&:active': (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]\n  }] : [])];\n});\nconst CheckboxInput = styled('input', {\n  name: 'JoyCheckbox',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(() => ({\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n}));\nconst CheckboxLabel = styled('label', {\n  name: 'JoyCheckbox',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(_ref7 => {\n  let {\n    ownerState\n  } = _ref7;\n  return _extends({\n    flex: 1,\n    minWidth: 0\n  }, ownerState.disableIcon ? {\n    zIndex: 1,\n    // label should stay on top of the action.\n    pointerEvents: 'none' // makes hover ineffect.\n\n  } : {\n    marginInlineStart: 'var(--Checkbox-gap)'\n  });\n});\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _ref, _inProps$disabled, _ref2, _inProps$size, _ref3, _inProps$color;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCheckbox'\n  });\n\n  const {\n    checked: checkedProp,\n    uncheckedIcon,\n    checkedIcon = defaultCheckedIcon,\n    label,\n    defaultChecked,\n    disabled: disabledExternalProp,\n    disableIcon = false,\n    overlay,\n    id: idOverride,\n    indeterminate = false,\n    indeterminateIcon = defaultIndeterminateIcon,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly,\n    required,\n    value,\n    color: colorProp,\n    variant,\n    size: sizeProp = 'md'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const formControl = React.useContext(FormControlContext);\n  const disabledProp = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledExternalProp;\n  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;\n  const color = formControl != null && formControl.error ? 'danger' : (_ref3 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref3 : colorProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    const registerEffect = formControl == null ? void 0 : formControl.registerEffect; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (registerEffect) {\n        return registerEffect();\n      }\n\n      return undefined;\n    }, [registerEffect]);\n  }\n\n  const id = useId(idOverride != null ? idOverride : formControl == null ? void 0 : formControl.htmlFor);\n  const useCheckboxProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible\n  } = useSwitch(useCheckboxProps);\n  const isCheckboxActive = checked || indeterminate;\n  const activeColor = color || 'primary';\n  const inactiveColor = color || 'neutral';\n  const activeVariant = variant || 'solid';\n  const inactiveVariant = variant || 'outlined';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableIcon,\n    overlay,\n    focusVisible,\n    color: isCheckboxActive ? activeColor : inactiveColor,\n    variant: isCheckboxActive ? activeVariant : inactiveVariant,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CheckboxRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotCheckbox, checkboxProps] = useSlot('checkbox', {\n    className: classes.checkbox,\n    elementType: CheckboxCheckbox,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotAction, actionProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CheckboxAction,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotInput, inputProps] = useSlot('input', {\n    additionalProps: _extends({\n      id,\n      name,\n      value,\n      readOnly,\n      required: required != null ? required : formControl == null ? void 0 : formControl.required,\n      'aria-describedby': formControl == null ? void 0 : formControl['aria-describedby']\n    }, indeterminate && {\n      // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked#values\n      'aria-checked': 'mixed'\n    }),\n    className: classes.input,\n    elementType: CheckboxInput,\n    externalForwardedProps: other,\n    getSlotProps: getInputProps,\n    ownerState\n  });\n  const [SlotLabel, labelProps] = useSlot('label', {\n    additionalProps: {\n      htmlFor: id\n    },\n    className: classes.label,\n    elementType: CheckboxLabel,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotCheckbox, _extends({}, checkboxProps, {\n      children: [/*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n        children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n      })), indeterminate && !checked && !disableIcon && indeterminateIcon, checked && !disableIcon && checkedIcon, !checked && !disableIcon && !indeterminate && uncheckedIcon]\n    })), label && /*#__PURE__*/_jsx(TypographyContext.Provider, {\n      value: true,\n      children: /*#__PURE__*/_jsx(SlotLabel, _extends({}, labelProps, {\n        children: label\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the checked icon is removed and the selected variant is applied on the `action` element instead.\n   * @default false\n   */\n  disableIcon: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * The label element next to the checkbox.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The `name` attribute of the input.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the root element's position is set to initial which allows the action area to fill the nearest positioned parent.\n   * This prop is useful for composing Checkbox with ListItem component.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The icon when `checked` is false.\n   */\n  uncheckedIcon: PropTypes.node,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Checkbox;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/Checkbox/Checkbox.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","unstable_useId","useId","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","useSwitch","styled","useThemeProps","useSlot","checkboxClasses","getCheckboxUtilityClass","CheckIcon","IndeterminateIcon","TypographyContext","FormControlContext","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","checked","disabled","disableIcon","focusVisible","color","variant","size","slots","root","checkbox","action","input","label","CheckboxRoot","name","slot","overridesResolver","props","styles","theme","_theme$vars$palette","_theme$vars$palette2","_theme$vars$palette3","fontSize","vars","sm","md","lg","position","overlay","display","fontFamily","body","lineHeight","palette","text","primary","plainDisabledColor","CheckboxCheckbox","_theme$variants","_theme$variants2","_theme$variants3","_theme$variants4","boxSizing","borderRadius","radius","xs","width","height","justifyContent","alignItems","flexShrink","transition","variants","CheckboxAction","_theme$variants5","_theme$variants6","_theme$variants7","_theme$variants8","top","left","bottom","right","zIndex","focus","selector","default","CheckboxInput","margin","opacity","cursor","CheckboxLabel","flex","minWidth","pointerEvents","marginInlineStart","defaultCheckedIcon","defaultIndeterminateIcon","Checkbox","forwardRef","inProps","ref","_ref","_inProps$disabled","_ref2","_inProps$size","_ref3","_inProps$color","checkedProp","uncheckedIcon","checkedIcon","defaultChecked","disabledExternalProp","id","idOverride","indeterminate","indeterminateIcon","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","value","colorProp","sizeProp","other","formControl","useContext","disabledProp","error","process","env","NODE_ENV","registerEffect","useEffect","undefined","htmlFor","useCheckboxProps","getInputProps","isCheckboxActive","activeColor","inactiveColor","activeVariant","inactiveVariant","classes","SlotRoot","rootProps","className","elementType","externalForwardedProps","SlotCheckbox","checkboxProps","SlotAction","actionProps","SlotInput","inputProps","additionalProps","getSlotProps","SlotLabel","labelProps","children","Provider","propTypes","bool","node","string","oneOfType","oneOf","func","sx","arrayOf","object","number"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,MAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,aAA7B,EAA4C,OAA5C,EAAqD,gBAArD,EAAuE,UAAvE,EAAmF,aAAnF,EAAkG,SAAlG,EAA6G,IAA7G,EAAmH,eAAnH,EAAoI,mBAApI,EAAyJ,MAAzJ,EAAiK,QAAjK,EAA2K,UAA3K,EAAuL,SAAvL,EAAkM,gBAAlM,EAAoN,UAApN,EAAgO,UAAhO,EAA4O,OAA5O,EAAqP,OAArP,EAA8P,SAA9P,EAAyQ,MAAzQ,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAc,IAAIC,KAA3B,EAAkCC,mBAAmB,IAAIC,UAAzD,QAA2E,YAA3E;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,WAA1D;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,WAAtC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,eAAP,IAA0BC,uBAA1B,QAAyD,mBAAzD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AACA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA;AAPI,MAQFP,UARJ;AASA,QAAMQ,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASR,OAAO,IAAI,SAApB,EAA+BC,QAAQ,IAAI,UAA3C,EAAuDE,YAAY,IAAI,cAAvE,EAAuFE,OAAO,IAAK,UAASxB,UAAU,CAACwB,OAAD,CAAU,EAAhI,EAAmID,KAAK,IAAK,QAAOvB,UAAU,CAACuB,KAAD,CAAQ,EAAtK,EAAyKE,IAAI,IAAK,OAAMzB,UAAU,CAACyB,IAAD,CAAO,EAAzM,CADM;AAEZG,IAAAA,QAAQ,EAAE,CAAC,UAAD,EAAaT,OAAO,IAAI,SAAxB,EAAmCC,QAAQ,IAAI,UAA/C,CAFE;AAGZ;AACAS,IAAAA,MAAM,EAAE,CAAC,QAAD,EAAWV,OAAO,IAAI,SAAtB,EAAiCE,WAAW,IAAID,QAAf,IAA2B,UAA5D,EACR;AACAE,IAAAA,YAAY,IAAI,cAFR,CAJI;AAOZQ,IAAAA,KAAK,EAAE,CAAC,OAAD,CAPK;AAQZC,IAAAA,KAAK,EAAE,CAAC,OAAD;AARK,GAAd;AAUA,SAAO7B,cAAc,CAACwB,KAAD,EAAQlB,uBAAR,EAAiC,EAAjC,CAArB;AACD,CArBD;;AAsBA,MAAMwB,YAAY,GAAG5B,MAAM,CAAC,MAAD,EAAS;AAClC6B,EAAAA,IAAI,EAAE,aAD4B;AAElCC,EAAAA,IAAI,EAAE,MAF4B;AAGlCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACV;AAHX,CAAT,CAAN,CAIlB,SAGG;AAAA,MAHF;AACFT,IAAAA,UADE;AAEFoB,IAAAA;AAFE,GAGE;;AACJ,MAAIC,mBAAJ,EAAyBC,oBAAzB,EAA+CC,oBAA/C;;AACA,SAAOhD,QAAQ,CAAC;AACd,uBAAmB;AADL,GAAD,EAEZyB,UAAU,CAACO,IAAX,KAAoB,IAApB,IAA4B;AAC7B,uBAAmB,MADU;AAE7B,sBAAkB,UAFW;AAG7BiB,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAAN,CAAWD,QAAX,CAAoBE;AAHD,GAFhB,EAMZ1B,UAAU,CAACO,IAAX,KAAoB,IAApB,IAA4B;AAC7B,uBAAmB,SADU;AAE7B,sBAAkB,QAFW;AAG7BiB,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAAN,CAAWD,QAAX,CAAoBG;AAHD,GANhB,EAUZ3B,UAAU,CAACO,IAAX,KAAoB,IAApB,IAA4B;AAC7B,uBAAmB,QADU;AAE7B,sBAAkB,UAFW;AAG7BiB,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAAN,CAAWD,QAAX,CAAoBI;AAHD,GAVhB,EAcZ;AACDC,IAAAA,QAAQ,EAAE7B,UAAU,CAAC8B,OAAX,GAAqB,SAArB,GAAiC,UAD1C;AAEDC,IAAAA,OAAO,EAAE,aAFR;AAGDC,IAAAA,UAAU,EAAEZ,KAAK,CAACK,IAAN,CAAWO,UAAX,CAAsBC,IAHjC;AAIDC,IAAAA,UAAU,EAAE,sBAJX;AAKD;AACA7B,IAAAA,KAAK,EAAEe,KAAK,CAACK,IAAN,CAAWU,OAAX,CAAmBC,IAAnB,CAAwBC,OAN9B;AAOD,KAAE,KAAIhD,eAAe,CAACa,QAAS,EAA/B,GAAmC;AACjCG,MAAAA,KAAK,EAAE,CAACgB,mBAAmB,GAAGD,KAAK,CAACK,IAAN,CAAWU,OAAX,CAAmBnC,UAAU,CAACK,KAA9B,CAAvB,KAAgE,IAAhE,GAAuE,KAAK,CAA5E,GAAgFgB,mBAAmB,CAACiB;AAD1E;AAPlC,GAdY,EAwBZtC,UAAU,CAACG,WAAX,IAA0B;AAC3BE,IAAAA,KAAK,EAAE,CAACiB,oBAAoB,GAAGF,KAAK,CAACK,IAAN,CAAWU,OAAX,CAAmBnC,UAAU,CAACK,KAA9B,CAAxB,KAAiE,IAAjE,GAAwE,KAAK,CAA7E,GAAiFiB,oBAAoB,CAAE,GAAEtB,UAAU,CAACM,OAAQ,OAAvB,CADjF;AAE3B,KAAE,KAAIjB,eAAe,CAACa,QAAS,EAA/B,GAAmC;AACjCG,MAAAA,KAAK,EAAE,CAACkB,oBAAoB,GAAGH,KAAK,CAACK,IAAN,CAAWU,OAAX,CAAmBnC,UAAU,CAACK,KAA9B,CAAxB,KAAiE,IAAjE,GAAwE,KAAK,CAA7E,GAAiFkB,oBAAoB,CAAE,GAAEvB,UAAU,CAACM,OAAQ,eAAvB;AAD3E;AAFR,GAxBd,CAAf;AA8BD,CAvCoB,CAArB;AAwCA,MAAMiC,gBAAgB,GAAGrD,MAAM,CAAC,MAAD,EAAS;AACtC6B,EAAAA,IAAI,EAAE,aADgC;AAEtCC,EAAAA,IAAI,EAAE,UAFgC;AAGtCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACT;AAHP,CAAT,CAAN,CAItB,SAGG;AAAA,MAHF;AACFU,IAAAA,KADE;AAEFpB,IAAAA;AAFE,GAGE;;AACJ,MAAIwC,eAAJ,EAAqBC,gBAArB,EAAuCC,gBAAvC,EAAyDC,gBAAzD;;AACA,SAAO,CAACpE,QAAQ,CAAC;AACfqE,IAAAA,SAAS,EAAE,YADI;AAEfC,IAAAA,YAAY,EAAEzB,KAAK,CAACK,IAAN,CAAWqB,MAAX,CAAkBC,EAFjB;AAGfC,IAAAA,KAAK,EAAE,sBAHQ;AAIfC,IAAAA,MAAM,EAAE,sBAJO;AAKflB,IAAAA,OAAO,EAAE,aALM;AAMfmB,IAAAA,cAAc,EAAE,QAND;AAOfC,IAAAA,UAAU,EAAE,QAPG;AAQfC,IAAAA,UAAU,EAAE,CARG;AASf;AACAC,IAAAA,UAAU,EAAE;AAVG,GAAD,EAWbrD,UAAU,CAACG,WAAX,IAA0B;AAC3B4B,IAAAA,OAAO,EAAE;AADkB,GAXb,CAAT,EAaH,IAAI,CAAC/B,UAAU,CAACG,WAAZ,GAA0B,CAAC,CAACqC,eAAe,GAAGpB,KAAK,CAACkC,QAAN,CAAetD,UAAU,CAACM,OAA1B,CAAnB,KAA0D,IAA1D,GAAiE,KAAK,CAAtE,GAA0EkC,eAAe,CAACxC,UAAU,CAACK,KAAZ,CAA1F,EAA8G;AAC9I,eAAW,CAACoC,gBAAgB,GAAGrB,KAAK,CAACkC,QAAN,CAAgB,GAAEtD,UAAU,CAACM,OAAQ,OAArC,CAApB,KAAqE,IAArE,GAA4E,KAAK,CAAjF,GAAqFmC,gBAAgB,CAACzC,UAAU,CAACK,KAAZ;AAD8B,GAA9G,EAE/B;AACD,gBAAY,CAACqC,gBAAgB,GAAGtB,KAAK,CAACkC,QAAN,CAAgB,GAAEtD,UAAU,CAACM,OAAQ,QAArC,CAApB,KAAsE,IAAtE,GAA6E,KAAK,CAAlF,GAAsFoC,gBAAgB,CAAC1C,UAAU,CAACK,KAAZ;AADjH,GAF+B,EAI/B;AACD,KAAE,KAAIhB,eAAe,CAACa,QAAS,EAA/B,GAAmC,CAACyC,gBAAgB,GAAGvB,KAAK,CAACkC,QAAN,CAAgB,GAAEtD,UAAU,CAACM,OAAQ,UAArC,CAApB,KAAwE,IAAxE,GAA+E,KAAK,CAApF,GAAwFqC,gBAAgB,CAAC3C,UAAU,CAACK,KAAZ;AAD1I,GAJ+B,CAA1B,GAMH,EAND,CAbG,CAAP;AAoBD,CA7BwB,CAAzB;AA8BA,MAAMkD,cAAc,GAAGrE,MAAM,CAAC,MAAD,EAAS;AACpC6B,EAAAA,IAAI,EAAE,aAD8B;AAEpCC,EAAAA,IAAI,EAAE,QAF8B;AAGpCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACR;AAHT,CAAT,CAAN,CAIpB,SAGG;AAAA,MAHF;AACFS,IAAAA,KADE;AAEFpB,IAAAA;AAFE,GAGE;;AACJ,MAAIwD,gBAAJ,EAAsBC,gBAAtB,EAAwCC,gBAAxC,EAA0DC,gBAA1D;;AACA,SAAO,CAAC;AACNd,IAAAA,YAAY,EAAG,iCAAgC7C,UAAU,CAAC8B,OAAX,GAAqB,wCAArB,GAAgE,SAAU,GADnH;AAEND,IAAAA,QAAQ,EAAE,UAFJ;AAGN+B,IAAAA,GAAG,EAAE,CAHC;AAINC,IAAAA,IAAI,EAAE,CAJA;AAKNC,IAAAA,MAAM,EAAE,CALF;AAMNC,IAAAA,KAAK,EAAE,CAND;AAONC,IAAAA,MAAM,EAAE,CAPF;AAQN;AACA;AACAX,IAAAA,UAAU,EAAE,4GAVN;AAWN,KAACjC,KAAK,CAAC6C,KAAN,CAAYC,QAAb,GAAwB9C,KAAK,CAAC6C,KAAN,CAAYE;AAX9B,GAAD,EAYJ,IAAInE,UAAU,CAACG,WAAX,GAAyB,CAAC,CAACqD,gBAAgB,GAAGpC,KAAK,CAACkC,QAAN,CAAetD,UAAU,CAACM,OAA1B,CAApB,KAA2D,IAA3D,GAAkE,KAAK,CAAvE,GAA2EkD,gBAAgB,CAACxD,UAAU,CAACK,KAAZ,CAA5F,EAAgH;AAC9I,eAAW,CAACoD,gBAAgB,GAAGrC,KAAK,CAACkC,QAAN,CAAgB,GAAEtD,UAAU,CAACM,OAAQ,OAArC,CAApB,KAAqE,IAArE,GAA4E,KAAK,CAAjF,GAAqFmD,gBAAgB,CAACzD,UAAU,CAACK,KAAZ;AAD8B,GAAhH,EAE7B;AACD,gBAAY,CAACqD,gBAAgB,GAAGtC,KAAK,CAACkC,QAAN,CAAgB,GAAEtD,UAAU,CAACM,OAAQ,QAArC,CAApB,KAAsE,IAAtE,GAA6E,KAAK,CAAlF,GAAsFoD,gBAAgB,CAAC1D,UAAU,CAACK,KAAZ;AADjH,GAF6B,EAI7B;AACD,KAAE,KAAIhB,eAAe,CAACa,QAAS,EAA/B,GAAmC,CAACyD,gBAAgB,GAAGvC,KAAK,CAACkC,QAAN,CAAgB,GAAEtD,UAAU,CAACM,OAAQ,UAArC,CAApB,KAAwE,IAAxE,GAA+E,KAAK,CAApF,GAAwFqD,gBAAgB,CAAC3D,UAAU,CAACK,KAAZ;AAD1I,GAJ6B,CAAzB,GAMF,EANF,CAZI,CAAP;AAmBD,CA5BsB,CAAvB;AA6BA,MAAM+D,aAAa,GAAGlF,MAAM,CAAC,OAAD,EAAU;AACpC6B,EAAAA,IAAI,EAAE,aAD8B;AAEpCC,EAAAA,IAAI,EAAE,OAF8B;AAGpCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACP;AAHT,CAAV,CAAN,CAInB,OAAO;AACRyD,EAAAA,MAAM,EAAE,CADA;AAERC,EAAAA,OAAO,EAAE,CAFD;AAGRzC,EAAAA,QAAQ,EAAE,UAHF;AAIRmB,EAAAA,KAAK,EAAE,MAJC;AAKRC,EAAAA,MAAM,EAAE,MALA;AAMRsB,EAAAA,MAAM,EAAE;AANA,CAAP,CAJmB,CAAtB;AAYA,MAAMC,aAAa,GAAGtF,MAAM,CAAC,OAAD,EAAU;AACpC6B,EAAAA,IAAI,EAAE,aAD8B;AAEpCC,EAAAA,IAAI,EAAE,OAF8B;AAGpCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACN;AAHT,CAAV,CAAN,CAInB;AAAA,MAAC;AACFb,IAAAA;AADE,GAAD;AAAA,SAEGzB,QAAQ,CAAC;AACbkG,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,QAAQ,EAAE;AAFG,GAAD,EAGX1E,UAAU,CAACG,WAAX,GAAyB;AAC1B6D,IAAAA,MAAM,EAAE,CADkB;AAE1B;AACAW,IAAAA,aAAa,EAAE,MAHW,CAGJ;;AAHI,GAAzB,GAIC;AACFC,IAAAA,iBAAiB,EAAE;AADjB,GAPU,CAFX;AAAA,CAJmB,CAAtB;;AAgBA,MAAMC,kBAAkB,GAAG,aAAajF,IAAI,CAACL,SAAD,EAAY,EAAZ,CAA5C;;AACA,MAAMuF,wBAAwB,GAAG,aAAalF,IAAI,CAACJ,iBAAD,EAAoB,EAApB,CAAlD;;AACA,MAAMuF,QAAQ,GAAG,aAAatG,KAAK,CAACuG,UAAN,CAAiB,SAASD,QAAT,CAAkBE,OAAlB,EAA2BC,GAA3B,EAAgC;AAC7E,MAAIC,IAAJ,EAAUC,iBAAV,EAA6BC,KAA7B,EAAoCC,aAApC,EAAmDC,KAAnD,EAA0DC,cAA1D;;AACA,QAAMtE,KAAK,GAAG/B,aAAa,CAAC;AAC1B+B,IAAAA,KAAK,EAAE+D,OADmB;AAE1BlE,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAIA,QAAM;AACFd,IAAAA,OAAO,EAAEwF,WADP;AAEFC,IAAAA,aAFE;AAGFC,IAAAA,WAAW,GAAGd,kBAHZ;AAIFhE,IAAAA,KAJE;AAKF+E,IAAAA,cALE;AAMF1F,IAAAA,QAAQ,EAAE2F,oBANR;AAOF1F,IAAAA,WAAW,GAAG,KAPZ;AAQF2B,IAAAA,OARE;AASFgE,IAAAA,EAAE,EAAEC,UATF;AAUFC,IAAAA,aAAa,GAAG,KAVd;AAWFC,IAAAA,iBAAiB,GAAGnB,wBAXlB;AAYF/D,IAAAA,IAZE;AAaFmF,IAAAA,MAbE;AAcFC,IAAAA,QAdE;AAeFC,IAAAA,OAfE;AAgBFC,IAAAA,cAhBE;AAiBFC,IAAAA,QAjBE;AAkBFC,IAAAA,QAlBE;AAmBFC,IAAAA,KAnBE;AAoBFnG,IAAAA,KAAK,EAAEoG,SApBL;AAqBFnG,IAAAA,OArBE;AAsBFC,IAAAA,IAAI,EAAEmG,QAAQ,GAAG;AAtBf,MAuBAxF,KAvBN;AAAA,QAwBEyF,KAAK,GAAGrI,6BAA6B,CAAC4C,KAAD,EAAQ1C,SAAR,CAxBvC;;AAyBA,QAAMoI,WAAW,GAAGnI,KAAK,CAACoI,UAAN,CAAiBnH,kBAAjB,CAApB;AACA,QAAMoH,YAAY,GAAG,CAAC3B,IAAI,GAAG,CAACC,iBAAiB,GAAGH,OAAO,CAAC/E,QAA7B,KAA0C,IAA1C,GAAiDkF,iBAAjD,GAAqEwB,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAAC1G,QAAxH,KAAqI,IAArI,GAA4IiF,IAA5I,GAAmJU,oBAAxK;AACA,QAAMtF,IAAI,GAAG,CAAC8E,KAAK,GAAG,CAACC,aAAa,GAAGL,OAAO,CAAC1E,IAAzB,KAAkC,IAAlC,GAAyC+E,aAAzC,GAAyDsB,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACrG,IAA7G,KAAsH,IAAtH,GAA6H8E,KAA7H,GAAqIqB,QAAlJ;AACA,QAAMrG,KAAK,GAAGuG,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAACG,KAAnC,GAA2C,QAA3C,GAAsD,CAACxB,KAAK,GAAG,CAACC,cAAc,GAAGP,OAAO,CAAC5E,KAA1B,KAAoC,IAApC,GAA2CmF,cAA3C,GAA4DoB,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACvG,KAAhH,KAA0H,IAA1H,GAAiIkF,KAAjI,GAAyIkB,SAA7M;;AACA,MAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAMC,cAAc,GAAGP,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACO,cAAlE,CADyC,CAEzC;;AACA1I,IAAAA,KAAK,CAAC2I,SAAN,CAAgB,MAAM;AACpB,UAAID,cAAJ,EAAoB;AAClB,eAAOA,cAAc,EAArB;AACD;;AACD,aAAOE,SAAP;AACD,KALD,EAKG,CAACF,cAAD,CALH;AAMD;;AACD,QAAMrB,EAAE,GAAGlH,KAAK,CAACmH,UAAU,IAAI,IAAd,GAAqBA,UAArB,GAAkCa,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACU,OAA9E,CAAhB;AACA,QAAMC,gBAAgB,GAAG;AACvBtH,IAAAA,OAAO,EAAEwF,WADc;AAEvBG,IAAAA,cAFuB;AAGvB1F,IAAAA,QAAQ,EAAE4G,YAHa;AAIvBZ,IAAAA,MAJuB;AAKvBC,IAAAA,QALuB;AAMvBC,IAAAA,OANuB;AAOvBC,IAAAA;AAPuB,GAAzB;AASA,QAAM;AACJmB,IAAAA,aADI;AAEJvH,IAAAA,OAFI;AAGJC,IAAAA,QAHI;AAIJE,IAAAA;AAJI,MAKFnB,SAAS,CAACsI,gBAAD,CALb;AAMA,QAAME,gBAAgB,GAAGxH,OAAO,IAAI+F,aAApC;AACA,QAAM0B,WAAW,GAAGrH,KAAK,IAAI,SAA7B;AACA,QAAMsH,aAAa,GAAGtH,KAAK,IAAI,SAA/B;AACA,QAAMuH,aAAa,GAAGtH,OAAO,IAAI,OAAjC;AACA,QAAMuH,eAAe,GAAGvH,OAAO,IAAI,UAAnC;;AACA,QAAMN,UAAU,GAAGzB,QAAQ,CAAC,EAAD,EAAK2C,KAAL,EAAY;AACrCjB,IAAAA,OADqC;AAErCC,IAAAA,QAFqC;AAGrCC,IAAAA,WAHqC;AAIrC2B,IAAAA,OAJqC;AAKrC1B,IAAAA,YALqC;AAMrCC,IAAAA,KAAK,EAAEoH,gBAAgB,GAAGC,WAAH,GAAiBC,aANH;AAOrCrH,IAAAA,OAAO,EAAEmH,gBAAgB,GAAGG,aAAH,GAAmBC,eAPP;AAQrCtH,IAAAA;AARqC,GAAZ,CAA3B;;AAUA,QAAMuH,OAAO,GAAG/H,iBAAiB,CAACC,UAAD,CAAjC;AACA,QAAM,CAAC+H,QAAD,EAAWC,SAAX,IAAwB5I,OAAO,CAAC,MAAD,EAAS;AAC5C8F,IAAAA,GAD4C;AAE5C+C,IAAAA,SAAS,EAAEH,OAAO,CAACrH,IAFyB;AAG5CyH,IAAAA,WAAW,EAAEpH,YAH+B;AAI5CqH,IAAAA,sBAAsB,EAAExB,KAJoB;AAK5C3G,IAAAA;AAL4C,GAAT,CAArC;AAOA,QAAM,CAACoI,YAAD,EAAeC,aAAf,IAAgCjJ,OAAO,CAAC,UAAD,EAAa;AACxD6I,IAAAA,SAAS,EAAEH,OAAO,CAACpH,QADqC;AAExDwH,IAAAA,WAAW,EAAE3F,gBAF2C;AAGxD4F,IAAAA,sBAAsB,EAAExB,KAHgC;AAIxD3G,IAAAA;AAJwD,GAAb,CAA7C;AAMA,QAAM,CAACsI,UAAD,EAAaC,WAAb,IAA4BnJ,OAAO,CAAC,QAAD,EAAW;AAClD6I,IAAAA,SAAS,EAAEH,OAAO,CAACnH,MAD+B;AAElDuH,IAAAA,WAAW,EAAE3E,cAFqC;AAGlD4E,IAAAA,sBAAsB,EAAExB,KAH0B;AAIlD3G,IAAAA;AAJkD,GAAX,CAAzC;AAMA,QAAM,CAACwI,SAAD,EAAYC,UAAZ,IAA0BrJ,OAAO,CAAC,OAAD,EAAU;AAC/CsJ,IAAAA,eAAe,EAAEnK,QAAQ,CAAC;AACxBuH,MAAAA,EADwB;AAExB/E,MAAAA,IAFwB;AAGxByF,MAAAA,KAHwB;AAIxBF,MAAAA,QAJwB;AAKxBC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,IAAZ,GAAmBA,QAAnB,GAA8BK,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACL,QAL3D;AAMxB,0BAAoBK,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAAC,kBAAD;AANtC,KAAD,EAOtBZ,aAAa,IAAI;AAClB;AACA,sBAAgB;AAFE,KAPK,CADsB;AAY/CiC,IAAAA,SAAS,EAAEH,OAAO,CAAClH,KAZ4B;AAa/CsH,IAAAA,WAAW,EAAE9D,aAbkC;AAc/C+D,IAAAA,sBAAsB,EAAExB,KAduB;AAe/CgC,IAAAA,YAAY,EAAEnB,aAfiC;AAgB/CxH,IAAAA;AAhB+C,GAAV,CAAvC;AAkBA,QAAM,CAAC4I,SAAD,EAAYC,UAAZ,IAA0BzJ,OAAO,CAAC,OAAD,EAAU;AAC/CsJ,IAAAA,eAAe,EAAE;AACfpB,MAAAA,OAAO,EAAExB;AADM,KAD8B;AAI/CmC,IAAAA,SAAS,EAAEH,OAAO,CAACjH,KAJ4B;AAK/CqH,IAAAA,WAAW,EAAE1D,aALkC;AAM/C2D,IAAAA,sBAAsB,EAAExB,KANuB;AAO/C3G,IAAAA;AAP+C,GAAV,CAAvC;AASA,SAAO,aAAaF,KAAK,CAACiI,QAAD,EAAWxJ,QAAQ,CAAC,EAAD,EAAKyJ,SAAL,EAAgB;AAC1Dc,IAAAA,QAAQ,EAAE,CAAC,aAAahJ,KAAK,CAACsI,YAAD,EAAe7J,QAAQ,CAAC,EAAD,EAAK8J,aAAL,EAAoB;AACtES,MAAAA,QAAQ,EAAE,CAAC,aAAalJ,IAAI,CAAC0I,UAAD,EAAa/J,QAAQ,CAAC,EAAD,EAAKgK,WAAL,EAAkB;AACjEO,QAAAA,QAAQ,EAAE,aAAalJ,IAAI,CAAC4I,SAAD,EAAYjK,QAAQ,CAAC,EAAD,EAAKkK,UAAL,CAApB;AADsC,OAAlB,CAArB,CAAlB,EAELzC,aAAa,IAAI,CAAC/F,OAAlB,IAA6B,CAACE,WAA9B,IAA6C8F,iBAFxC,EAE2DhG,OAAO,IAAI,CAACE,WAAZ,IAA2BwF,WAFtF,EAEmG,CAAC1F,OAAD,IAAY,CAACE,WAAb,IAA4B,CAAC6F,aAA7B,IAA8CN,aAFjJ;AAD4D,KAApB,CAAvB,CAAnB,EAIL7E,KAAK,IAAI,aAAajB,IAAI,CAACH,iBAAiB,CAACsJ,QAAnB,EAA6B;AAC1DvC,MAAAA,KAAK,EAAE,IADmD;AAE1DsC,MAAAA,QAAQ,EAAE,aAAalJ,IAAI,CAACgJ,SAAD,EAAYrK,QAAQ,CAAC,EAAD,EAAKsK,UAAL,EAAiB;AAC9DC,QAAAA,QAAQ,EAAEjI;AADoD,OAAjB,CAApB;AAF+B,KAA7B,CAJrB;AADgD,GAAhB,CAAnB,CAAzB;AAYD,CAvI6B,CAA9B;AAwIAmG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnC,QAAQ,CAACiE;AAAU;AAAnB,EAA4C;AAClF;AACA;AACA;AACA;;AACA;AACF;AACA;AACE/I,EAAAA,OAAO,EAAEvB,SAAS,CAACuK,IAR+D;;AASlF;AACF;AACA;AACA;AACEtD,EAAAA,WAAW,EAAEjH,SAAS,CAACwK,IAb2D;;AAclF;AACF;AACA;AACEJ,EAAAA,QAAQ,EAAEpK,SAAS,CAACwK,IAjB8D;;AAkBlF;AACF;AACA;AACEjB,EAAAA,SAAS,EAAEvJ,SAAS,CAACyK,MArB6D;;AAsBlF;AACF;AACA;AACA;AACE9I,EAAAA,KAAK,EAAE3B;AAAU;AAAD,GAAuC0K,SAAhD,CAA0D,CAAC1K,SAAS,CAAC2K,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,SAA9B,EAAyC,SAAzC,CAAhB,CAAD,EAAuE3K,SAAS,CAACyK,MAAjF,CAA1D,CA1B2E;;AA2BlF;AACF;AACA;AACEvD,EAAAA,cAAc,EAAElH,SAAS,CAACuK,IA9BwD;;AA+BlF;AACF;AACA;AACE/I,EAAAA,QAAQ,EAAExB,SAAS,CAACuK,IAlC8D;;AAmClF;AACF;AACA;AACA;AACE9I,EAAAA,WAAW,EAAEzB,SAAS,CAACuK,IAvC2D;;AAwClF;AACF;AACA;AACEnD,EAAAA,EAAE,EAAEpH,SAAS,CAACyK,MA3CoE;;AA4ClF;AACF;AACA;AACA;AACA;AACA;AACA;AACEnD,EAAAA,aAAa,EAAEtH,SAAS,CAACuK,IAnDyD;;AAoDlF;AACF;AACA;AACA;AACEhD,EAAAA,iBAAiB,EAAEvH,SAAS,CAACwK,IAxDqD;;AAyDlF;AACF;AACA;AACErI,EAAAA,KAAK,EAAEnC,SAAS,CAACwK,IA5DiE;;AA6DlF;AACF;AACA;AACEnI,EAAAA,IAAI,EAAErC,SAAS,CAACyK,MAhEkE;;AAiElF;AACF;AACA;AACEjD,EAAAA,MAAM,EAAExH,SAAS,CAAC4K,IApEgE;;AAqElF;AACF;AACA;AACA;AACA;AACA;AACA;AACEnD,EAAAA,QAAQ,EAAEzH,SAAS,CAAC4K,IA5E8D;;AA6ElF;AACF;AACA;AACElD,EAAAA,OAAO,EAAE1H,SAAS,CAAC4K,IAhF+D;;AAiFlF;AACF;AACA;AACEjD,EAAAA,cAAc,EAAE3H,SAAS,CAAC4K,IApFwD;;AAqFlF;AACF;AACA;AACA;AACA;AACExH,EAAAA,OAAO,EAAEpD,SAAS,CAACuK,IA1F+D;;AA2FlF;AACF;AACA;AACE3C,EAAAA,QAAQ,EAAE5H,SAAS,CAACuK,IA9F8D;;AA+FlF;AACF;AACA;AACE1C,EAAAA,QAAQ,EAAE7H,SAAS,CAACuK,IAlG8D;;AAmGlF;AACF;AACA;AACA;AACE1I,EAAAA,IAAI,EAAE7B;AAAU;AAAD,GAAuC0K,SAAhD,CAA0D,CAAC1K,SAAS,CAAC2K,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAhB,CAAD,EAAsC3K,SAAS,CAACyK,MAAhD,CAA1D,CAvG4E;;AAwGlF;AACF;AACA;AACEI,EAAAA,EAAE,EAAE7K,SAAS,CAAC0K,SAAV,CAAoB,CAAC1K,SAAS,CAAC8K,OAAV,CAAkB9K,SAAS,CAAC0K,SAAV,CAAoB,CAAC1K,SAAS,CAAC4K,IAAX,EAAiB5K,SAAS,CAAC+K,MAA3B,EAAmC/K,SAAS,CAACuK,IAA7C,CAApB,CAAlB,CAAD,EAA6FvK,SAAS,CAAC4K,IAAvG,EAA6G5K,SAAS,CAAC+K,MAAvH,CAApB,CA3G8E;;AA4GlF;AACF;AACA;AACE/D,EAAAA,aAAa,EAAEhH,SAAS,CAACwK,IA/GyD;;AAgHlF;AACF;AACA;AACA;AACE1C,EAAAA,KAAK,EAAE9H,SAAS,CAAC0K,SAAV,CAAoB,CAAC1K,SAAS,CAAC8K,OAAV,CAAkB9K,SAAS,CAACyK,MAA5B,CAAD,EAAsCzK,SAAS,CAACgL,MAAhD,EAAwDhL,SAAS,CAACyK,MAAlE,CAApB,CApH2E;;AAqHlF;AACF;AACA;AACA;AACE7I,EAAAA,OAAO,EAAE5B;AAAU;AAAD,GAAuC0K,SAAhD,CAA0D,CAAC1K,SAAS,CAAC2K,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,EAAsB,MAAtB,EAA8B,OAA9B,CAAhB,CAAD,EAA0D3K,SAAS,CAACyK,MAApE,CAA1D;AAzHyE,CAApF,GA0HI,KAAK,CA1HT;AA2HA,eAAepE,QAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"uncheckedIcon\", \"checkedIcon\", \"label\", \"defaultChecked\", \"disabled\", \"disableIcon\", \"overlay\", \"id\", \"indeterminate\", \"indeterminateIcon\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\", \"value\", \"color\", \"variant\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useSwitch } from '@mui/base/SwitchUnstyled';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport CheckIcon from '../internal/svg-icons/Check';\nimport IndeterminateIcon from '../internal/svg-icons/HorizontalRule';\nimport { TypographyContext } from '../Typography/Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    checked,\n    disabled,\n    disableIcon,\n    focusVisible,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],\n    checkbox: ['checkbox', checked && 'checked', disabled && 'disabled'],\n    // disabled class is necessary for displaying global variant\n    action: ['action', checked && 'checked', disableIcon && disabled && 'disabled',\n    // add disabled class to action element for displaying global variant\n    focusVisible && 'focusVisible'],\n    input: ['input'],\n    label: ['label']\n  };\n  return composeClasses(slots, getCheckboxUtilityClass, {});\n};\nconst CheckboxRoot = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => {\n  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;\n  return _extends({\n    '--Icon-fontSize': 'var(--Checkbox-size)'\n  }, ownerState.size === 'sm' && {\n    '--Checkbox-size': '1rem',\n    '--Checkbox-gap': '0.375rem',\n    fontSize: theme.vars.fontSize.sm\n  }, ownerState.size === 'md' && {\n    '--Checkbox-size': '1.25rem',\n    '--Checkbox-gap': '0.5rem',\n    fontSize: theme.vars.fontSize.md\n  }, ownerState.size === 'lg' && {\n    '--Checkbox-size': '1.5rem',\n    '--Checkbox-gap': '0.625rem',\n    fontSize: theme.vars.fontSize.lg\n  }, {\n    position: ownerState.overlay ? 'initial' : 'relative',\n    display: 'inline-flex',\n    fontFamily: theme.vars.fontFamily.body,\n    lineHeight: 'var(--Checkbox-size)',\n    // prevent label from having larger height than the checkbox\n    color: theme.vars.palette.text.primary,\n    [`&.${checkboxClasses.disabled}`]: {\n      color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.plainDisabledColor\n    }\n  }, ownerState.disableIcon && {\n    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`],\n    [`&.${checkboxClasses.disabled}`]: {\n      color: (_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3[`${ownerState.variant}DisabledColor`]\n    }\n  });\n});\nconst CheckboxCheckbox = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Checkbox',\n  overridesResolver: (props, styles) => styles.checkbox\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;\n  return [_extends({\n    boxSizing: 'border-box',\n    borderRadius: theme.vars.radius.xs,\n    width: 'var(--Checkbox-size)',\n    height: 'var(--Checkbox-size)',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0,\n    // TODO: discuss the transition approach in a separate PR. This value is copied from mui-material Button.\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n  }, ownerState.disableIcon && {\n    display: 'contents'\n  }), ...(!ownerState.disableIcon ? [(_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {\n    '&:hover': (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]\n  }, {\n    '&:active': (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]\n  }] : [])];\n});\nconst CheckboxAction = styled('span', {\n  name: 'JoyCheckbox',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants5, _theme$variants6, _theme$variants7, _theme$variants8;\n  return [{\n    borderRadius: `var(--Checkbox-action-radius, ${ownerState.overlay ? 'var(--internal-action-radius, inherit)' : 'inherit'})`,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 1,\n    // The action element usually cover the area of nearest positioned parent\n    // TODO: discuss the transition approach in a separate PR. This value is copied from mui-material Button.\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    [theme.focus.selector]: theme.focus.default\n  }, ...(ownerState.disableIcon ? [(_theme$variants5 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants5[ownerState.color], {\n    '&:hover': (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]\n  }, {\n    '&:active': (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]\n  }, {\n    [`&.${checkboxClasses.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]\n  }] : [])];\n});\nconst CheckboxInput = styled('input', {\n  name: 'JoyCheckbox',\n  slot: 'Input',\n  overridesResolver: (props, styles) => styles.input\n})(() => ({\n  margin: 0,\n  opacity: 0,\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n}));\nconst CheckboxLabel = styled('label', {\n  name: 'JoyCheckbox',\n  slot: 'Label',\n  overridesResolver: (props, styles) => styles.label\n})(({\n  ownerState\n}) => _extends({\n  flex: 1,\n  minWidth: 0\n}, ownerState.disableIcon ? {\n  zIndex: 1,\n  // label should stay on top of the action.\n  pointerEvents: 'none' // makes hover ineffect.\n} : {\n  marginInlineStart: 'var(--Checkbox-gap)'\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _ref, _inProps$disabled, _ref2, _inProps$size, _ref3, _inProps$color;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCheckbox'\n  });\n  const {\n      checked: checkedProp,\n      uncheckedIcon,\n      checkedIcon = defaultCheckedIcon,\n      label,\n      defaultChecked,\n      disabled: disabledExternalProp,\n      disableIcon = false,\n      overlay,\n      id: idOverride,\n      indeterminate = false,\n      indeterminateIcon = defaultIndeterminateIcon,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      onFocusVisible,\n      readOnly,\n      required,\n      value,\n      color: colorProp,\n      variant,\n      size: sizeProp = 'md'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const formControl = React.useContext(FormControlContext);\n  const disabledProp = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledExternalProp;\n  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;\n  const color = formControl != null && formControl.error ? 'danger' : (_ref3 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref3 : colorProp;\n  if (process.env.NODE_ENV !== 'production') {\n    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (registerEffect) {\n        return registerEffect();\n      }\n      return undefined;\n    }, [registerEffect]);\n  }\n  const id = useId(idOverride != null ? idOverride : formControl == null ? void 0 : formControl.htmlFor);\n  const useCheckboxProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible\n  } = useSwitch(useCheckboxProps);\n  const isCheckboxActive = checked || indeterminate;\n  const activeColor = color || 'primary';\n  const inactiveColor = color || 'neutral';\n  const activeVariant = variant || 'solid';\n  const inactiveVariant = variant || 'outlined';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableIcon,\n    overlay,\n    focusVisible,\n    color: isCheckboxActive ? activeColor : inactiveColor,\n    variant: isCheckboxActive ? activeVariant : inactiveVariant,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CheckboxRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotCheckbox, checkboxProps] = useSlot('checkbox', {\n    className: classes.checkbox,\n    elementType: CheckboxCheckbox,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotAction, actionProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CheckboxAction,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotInput, inputProps] = useSlot('input', {\n    additionalProps: _extends({\n      id,\n      name,\n      value,\n      readOnly,\n      required: required != null ? required : formControl == null ? void 0 : formControl.required,\n      'aria-describedby': formControl == null ? void 0 : formControl['aria-describedby']\n    }, indeterminate && {\n      // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked#values\n      'aria-checked': 'mixed'\n    }),\n    className: classes.input,\n    elementType: CheckboxInput,\n    externalForwardedProps: other,\n    getSlotProps: getInputProps,\n    ownerState\n  });\n  const [SlotLabel, labelProps] = useSlot('label', {\n    additionalProps: {\n      htmlFor: id\n    },\n    className: classes.label,\n    elementType: CheckboxLabel,\n    externalForwardedProps: other,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsxs(SlotCheckbox, _extends({}, checkboxProps, {\n      children: [/*#__PURE__*/_jsx(SlotAction, _extends({}, actionProps, {\n        children: /*#__PURE__*/_jsx(SlotInput, _extends({}, inputProps))\n      })), indeterminate && !checked && !disableIcon && indeterminateIcon, checked && !disableIcon && checkedIcon, !checked && !disableIcon && !indeterminate && uncheckedIcon]\n    })), label && /*#__PURE__*/_jsx(TypographyContext.Provider, {\n      value: true,\n      children: /*#__PURE__*/_jsx(SlotLabel, _extends({}, labelProps, {\n        children: label\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the checked icon is removed and the selected variant is applied on the `action` element instead.\n   * @default false\n   */\n  disableIcon: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * The label element next to the checkbox.\n   */\n  label: PropTypes.node,\n  /**\n   * The `name` attribute of the input.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * If `true`, the root element's position is set to initial which allows the action area to fill the nearest positioned parent.\n   * This prop is useful for composing Checkbox with ListItem component.\n   * @default false\n   */\n  overlay: PropTypes.bool,\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The icon when `checked` is false.\n   */\n  uncheckedIcon: PropTypes.node,\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n  /**\n   * The variant to use.\n   * @default 'solid'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}