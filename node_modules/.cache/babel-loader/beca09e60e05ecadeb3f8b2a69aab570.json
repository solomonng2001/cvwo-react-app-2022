{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport RowListContext from './RowListContext';\nimport WrapListContext from './WrapListContext';\nimport NestedListContext from './NestedListContext';\n/**\n * This variables should be used in a List to create a scope\n * that will not inherit variables from the upper scope.\n *\n * Used in `Menu`, `MenuList`, `TabList`, `Select`, and `Autocomplete` to communicate with nested List.\n *\n * e.g. menu group:\n * <Menu>\n *   <List>...</List>\n *   <List>...</List>\n * </Menu>\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const scopedVariables = {\n  '--NestedList-marginRight': '0px',\n  '--NestedList-marginLeft': '0px',\n  '--NestedList-item-paddingLeft': 'var(--List-item-paddingX)',\n  // reset ListItem, ListItemButton negative margin (caused by NestedListItem)\n  '--List-itemButton-marginBlock': '0px',\n  '--List-itemButton-marginInline': '0px',\n  '--List-item-marginBlock': '0px',\n  '--List-item-marginInline': '0px'\n}; // internal component\n\nfunction ListProvider(_ref) {\n  let {\n    children,\n    nested,\n    row = false,\n    wrap = false\n  } = _ref;\n\n  const baseProviders = /*#__PURE__*/_jsx(RowListContext.Provider, {\n    value: row,\n    children: /*#__PURE__*/_jsx(WrapListContext.Provider, {\n      value: wrap,\n      children: React.Children.map(children, (child, index) => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, _extends({}, index === 0 && {\n        'data-first-child': ''\n      })) : child)\n    })\n  });\n\n  if (nested === undefined) {\n    return baseProviders;\n  }\n\n  return /*#__PURE__*/_jsx(NestedListContext.Provider, {\n    value: nested,\n    children: baseProviders\n  });\n}\n\nexport default ListProvider;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/List/ListProvider.js"],"names":["_extends","React","RowListContext","WrapListContext","NestedListContext","jsx","_jsx","scopedVariables","ListProvider","children","nested","row","wrap","baseProviders","Provider","value","Children","map","child","index","isValidElement","cloneElement","undefined"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,MAAMC,eAAe,GAAG;AAC7B,8BAA4B,KADC;AAE7B,6BAA2B,KAFE;AAG7B,mCAAiC,2BAHJ;AAI7B;AACA,mCAAiC,KALJ;AAM7B,oCAAkC,KANL;AAO7B,6BAA2B,KAPE;AAQ7B,8BAA4B;AARC,CAAxB,C,CAUP;;AACA,SAASC,YAAT,OAKG;AAAA,MALmB;AACpBC,IAAAA,QADoB;AAEpBC,IAAAA,MAFoB;AAGpBC,IAAAA,GAAG,GAAG,KAHc;AAIpBC,IAAAA,IAAI,GAAG;AAJa,GAKnB;;AACD,QAAMC,aAAa,GAAG,aAAaP,IAAI,CAACJ,cAAc,CAACY,QAAhB,EAA0B;AAC/DC,IAAAA,KAAK,EAAEJ,GADwD;AAE/DF,IAAAA,QAAQ,EAAE,aAAaH,IAAI,CAACH,eAAe,CAACW,QAAjB,EAA2B;AACpDC,MAAAA,KAAK,EAAEH,IAD6C;AAEpDH,MAAAA,QAAQ,EAAER,KAAK,CAACe,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,EAA6B,CAACS,KAAD,EAAQC,KAAR,KAAkB,aAAalB,KAAK,CAACmB,cAAN,CAAqBF,KAArB,IAA8B,aAAajB,KAAK,CAACoB,YAAN,CAAmBH,KAAnB,EAA0BlB,QAAQ,CAAC,EAAD,EAAKmB,KAAK,KAAK,CAAV,IAAe;AACrK,4BAAoB;AADiJ,OAApB,CAAlC,CAA3C,GAEhED,KAFI;AAF0C,KAA3B;AAFoC,GAA1B,CAAvC;;AASA,MAAIR,MAAM,KAAKY,SAAf,EAA0B;AACxB,WAAOT,aAAP;AACD;;AACD,SAAO,aAAaP,IAAI,CAACF,iBAAiB,CAACU,QAAnB,EAA6B;AACnDC,IAAAA,KAAK,EAAEL,MAD4C;AAEnDD,IAAAA,QAAQ,EAAEI;AAFyC,GAA7B,CAAxB;AAID;;AACD,eAAeL,YAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport RowListContext from './RowListContext';\nimport WrapListContext from './WrapListContext';\nimport NestedListContext from './NestedListContext';\n\n/**\n * This variables should be used in a List to create a scope\n * that will not inherit variables from the upper scope.\n *\n * Used in `Menu`, `MenuList`, `TabList`, `Select`, and `Autocomplete` to communicate with nested List.\n *\n * e.g. menu group:\n * <Menu>\n *   <List>...</List>\n *   <List>...</List>\n * </Menu>\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const scopedVariables = {\n  '--NestedList-marginRight': '0px',\n  '--NestedList-marginLeft': '0px',\n  '--NestedList-item-paddingLeft': 'var(--List-item-paddingX)',\n  // reset ListItem, ListItemButton negative margin (caused by NestedListItem)\n  '--List-itemButton-marginBlock': '0px',\n  '--List-itemButton-marginInline': '0px',\n  '--List-item-marginBlock': '0px',\n  '--List-item-marginInline': '0px'\n};\n// internal component\nfunction ListProvider({\n  children,\n  nested,\n  row = false,\n  wrap = false\n}) {\n  const baseProviders = /*#__PURE__*/_jsx(RowListContext.Provider, {\n    value: row,\n    children: /*#__PURE__*/_jsx(WrapListContext.Provider, {\n      value: wrap,\n      children: React.Children.map(children, (child, index) => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, _extends({}, index === 0 && {\n        'data-first-child': ''\n      })) : child)\n    })\n  });\n  if (nested === undefined) {\n    return baseProviders;\n  }\n  return /*#__PURE__*/_jsx(NestedListContext.Provider, {\n    value: nested,\n    children: baseProviders\n  });\n}\nexport default ListProvider;"]},"metadata":{},"sourceType":"module"}