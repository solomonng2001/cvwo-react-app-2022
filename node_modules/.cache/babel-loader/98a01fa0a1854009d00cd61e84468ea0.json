{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateComment.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateComment = _ref => {\n  _s();\n\n  let {\n    openCreateComment,\n    handleCloseCreateComment,\n    thread_page_id,\n    currentUserState\n  } = _ref;\n  const [body, setBody] = useState(\"\");\n  const [severity, setSeverity] = useState(undefined);\n  const [message, setMessage] = useState([]);\n\n  const resetCreateComment = () => {\n    setBody(\"\");\n  };\n\n  const handleSubmitCreateComment = () => {\n    const user_id = currentUserState.currentUser.id;\n    let new_message = [];\n\n    if (body === \"\") {\n      new_message.push(\"Fill in all fields\");\n    }\n\n    if (new_message.length > 0) {\n      setSeverity('error');\n      setMessage(new_message);\n    } else {\n      fetch(\"http://localhost:3000/thread_pages/\" + thread_page_id.toString() + \"/comments\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          body,\n          user_id,\n          thread_page_id\n        })\n      }).then(response => {\n        if (response.ok) {\n          setSeverity('success');\n          new_message.push(\"You have created a new comment!\");\n          setMessage(new_message);\n          resetCreateComment();\n          setTimeout(() => window.location.reload(), 1000);\n        } else {\n          setSeverity('error');\n          new_message.push(\"Some error occured\");\n          setMessage(new_message);\n        }\n      }).catch(error => console.log(error.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openCreateComment,\n    onClose: handleCloseCreateComment,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"What's on your mind?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(AlertUser, {\n        severity: severity,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: body,\n        autoFocus: true,\n        type: \"text\",\n        margin: \"normal\",\n        label: \"Say something here...\",\n        fullWidth: true,\n        variant: \"standard\",\n        multiline: true,\n        onChange: event => setBody(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCloseCreateComment,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmitCreateComment,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateComment, \"efoDXvgSbdw74wCRVuIYFNWIbdA=\");\n\n_c = CreateComment;\nexport default CreateComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComment\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateComment.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","AlertUser","React","useState","CreateComment","openCreateComment","handleCloseCreateComment","thread_page_id","currentUserState","body","setBody","severity","setSeverity","undefined","message","setMessage","resetCreateComment","handleSubmitCreateComment","user_id","currentUser","id","new_message","push","length","fetch","toString","method","headers","JSON","stringify","then","response","ok","setTimeout","window","location","reload","catch","error","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\nimport CurrentUserState from '../types/CurrentUserState';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openCreateComment: boolean;\n    handleCloseCreateComment: () => void;\n    thread_page_id: number;\n    currentUserState: CurrentUserState;\n    API: string;\n}\n\nconst CreateComment: React.FC<Props> = ({openCreateComment, handleCloseCreateComment, thread_page_id, currentUserState}: Props) => {\n    const [body, setBody] = useState<string>(\"\");\n    const [severity, setSeverity] = useState<AlertColor | undefined>(undefined);\n    const [message, setMessage] = useState<string[]>([]);\n\n    const resetCreateComment = () => {\n        setBody(\"\");\n    }\n    \n    const handleSubmitCreateComment = () => {\n        const user_id = currentUserState.currentUser.id\n        let new_message: string[] = [];\n        if (body === \"\") {\n            new_message.push(\"Fill in all fields\");\n        }\n        if (new_message.length > 0) {\n            setSeverity('error');\n            setMessage(new_message);\n        } else {\n            fetch(\"http://localhost:3000/thread_pages/\" + thread_page_id.toString() + \"/comments\", {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                body: JSON.stringify({\n                    body,\n                    user_id,\n                    thread_page_id,\n                }),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSeverity('success');\n                        new_message.push(\"You have created a new comment!\")\n                        setMessage(new_message);\n                        resetCreateComment();\n                        setTimeout(() => window.location.reload(), 1000);\n                    } else {\n                        setSeverity('error');\n                        new_message.push(\"Some error occured\");\n                        setMessage(new_message);\n                    }\n                })\n                .catch((error) => console.log(error.message));\n        }\n    }\n\n    return (\n        <Dialog open={openCreateComment} onClose={handleCloseCreateComment} fullWidth>\n            <DialogTitle>What's on your mind?</DialogTitle>\n            <DialogContent>\n                <AlertUser severity={severity} message={message}/>\n                <TextField\n                    value = {body}\n                    autoFocus\n                    type='text'\n                    margin=\"normal\"\n                    label=\"Say something here...\"\n                    fullWidth\n                    variant=\"standard\"\n                    multiline\n                    onChange={(event) => setBody(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseCreateComment}>Cancel</Button>\n                <Button onClick={handleSubmitCreateComment}>Comment</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default CreateComment;"]},"metadata":{},"sourceType":"module"}