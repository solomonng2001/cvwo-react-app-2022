{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/DeleteEditCommentOnThread.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Stack from '@mui/material/Stack';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport CreateComment from './CreateComment';\nimport DeleteThread from './DeleteThread';\nimport UpdateThread from './UpdateThread';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteEditCommentOnThread = _ref => {\n  _s();\n\n  let {\n    currentUserState,\n    thread\n  } = _ref;\n  const [openCreateComment, setOpenCreateComment] = React.useState(false);\n\n  const handleClickOpenCreateComment = () => {\n    setOpenCreateComment(true);\n  };\n\n  const handleCloseCreateComment = () => {\n    setOpenCreateComment(false);\n  };\n\n  const [openDeleteThread, setOpenDeleteThread] = React.useState(false);\n\n  const handleClickOpenDeleteThread = () => {\n    setOpenDeleteThread(true);\n  };\n\n  const handleCloseDeleteThread = () => {\n    setOpenDeleteThread(false);\n  };\n\n  const [openUpdateThread, setOpenUpdateThread] = React.useState(false);\n\n  const handleClickOpenUpdateThread = () => {\n    setOpenUpdateThread(true);\n  };\n\n  const handleCloseUpdateThread = () => {\n    setOpenUpdateThread(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    spacing: 1,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleClickOpenCreateComment,\n      children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateComment, {\n      thread_page_id: thread.id,\n      openCreateComment: openCreateComment,\n      handleCloseCreateComment: handleCloseCreateComment,\n      currentUserState: currentUserState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), thread.user_id === currentUserState.currentUser.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClickOpenUpdateThread,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UpdateThread, {\n        thread_page_id: thread.id,\n        openUpdateThread: openUpdateThread,\n        handleCloseUpdateThread: handleCloseUpdateThread\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), thread.user_id === currentUserState.currentUser.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClickOpenDeleteThread,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteThread, {\n        thread_page_id: thread.id,\n        openDeleteThread: openDeleteThread,\n        handleCloseDeleteThread: handleCloseDeleteThread\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteEditCommentOnThread, \"G91caCq6uG2qzFUKQzj/EiUREc8=\");\n\n_c = DeleteEditCommentOnThread;\nexport default DeleteEditCommentOnThread;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteEditCommentOnThread\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/DeleteEditCommentOnThread.tsx"],"names":["React","IconButton","DeleteIcon","EditIcon","Stack","CommentIcon","CreateComment","DeleteThread","UpdateThread","DeleteEditCommentOnThread","currentUserState","thread","openCreateComment","setOpenCreateComment","useState","handleClickOpenCreateComment","handleCloseCreateComment","openDeleteThread","setOpenDeleteThread","handleClickOpenDeleteThread","handleCloseDeleteThread","openUpdateThread","setOpenUpdateThread","handleClickOpenUpdateThread","handleCloseUpdateThread","id","user_id","currentUser"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAUA,MAAMC,yBAA0C,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,GAAwC;AACxF,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cb,KAAK,CAACc,QAAN,CAAwB,KAAxB,CAAlD;;AACA,QAAMC,4BAA4B,GAAG,MAAM;AACzCF,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAFD;;AAGA,QAAMG,wBAAwB,GAAG,MAAM;AACrCH,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD;;AAIA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0ClB,KAAK,CAACc,QAAN,CAAwB,KAAxB,CAAhD;;AACA,QAAMK,2BAA2B,GAAG,MAAM;AACxCD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAFD;;AAGA,QAAME,uBAAuB,GAAG,MAAM;AACpCF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAFD;;AAIA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0CtB,KAAK,CAACc,QAAN,CAAwB,KAAxB,CAAhD;;AACA,QAAMS,2BAA2B,GAAG,MAAM;AACxCD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAFD;;AAGA,QAAME,uBAAuB,GAAG,MAAM;AACpCF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAFD;;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAuB,IAAA,cAAc,EAAC,UAAtC;AAAiD,IAAA,UAAU,EAAC,QAA5D;AAAqE,IAAA,OAAO,EAAE,CAA9E;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEP,4BAArB;AAAA,6BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,aAAD;AAAe,MAAA,cAAc,EAAEJ,MAAM,CAACc,EAAtC;AAA0C,MAAA,iBAAiB,EAAEb,iBAA7D;AAAgF,MAAA,wBAAwB,EAAEI,wBAA1G;AAAoI,MAAA,gBAAgB,EAAEN;AAAtJ;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKMC,MAAM,CAACe,OAAP,KAAmBhB,gBAAgB,CAACiB,WAAjB,CAA6BF,EAAhD,iBACA;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEF,2BAArB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD;AAAc,QAAA,cAAc,EAAEZ,MAAM,CAACc,EAArC;AAAyC,QAAA,gBAAgB,EAAEJ,gBAA3D;AAA6E,QAAA,uBAAuB,EAAEG;AAAtG;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBANN,EAaMb,MAAM,CAACe,OAAP,KAAmBhB,gBAAgB,CAACiB,WAAjB,CAA6BF,EAAhD,iBACA;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEN,2BAArB;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD;AAAc,QAAA,cAAc,EAAER,MAAM,CAACc,EAArC;AAAyC,QAAA,gBAAgB,EAAER,gBAA3D;AAA6E,QAAA,uBAAuB,EAAEG;AAAtG;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBAdN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAjDD;;GAAMX,yB;;KAAAA,yB;AAmDN,eAAeA,yBAAf","sourcesContent":["import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Stack from '@mui/material/Stack';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport CreateComment from './CreateComment';\nimport DeleteThread from './DeleteThread';\nimport UpdateThread from './UpdateThread';\nimport CurrentUserState from '../types/CurrentUserState';\nimport {Thread} from '../types/Thread';\n\ntype Props = {\n    commentable: boolean;\n    thread: Thread;\n    currentUserState: CurrentUserState;\n};\n\nconst DeleteEditCommentOnThread: React.FC<Props> = ({ currentUserState, thread }: Props) => {\n    const [openCreateComment, setOpenCreateComment] = React.useState<boolean>(false);\n    const handleClickOpenCreateComment = () => {\n      setOpenCreateComment(true);\n    };\n    const handleCloseCreateComment = () => {\n      setOpenCreateComment(false);\n    };\n\n    const [openDeleteThread, setOpenDeleteThread] = React.useState<boolean>(false);\n    const handleClickOpenDeleteThread = () => {\n      setOpenDeleteThread(true);\n    };\n    const handleCloseDeleteThread = () => {\n      setOpenDeleteThread(false);\n    };\n\n    const [openUpdateThread, setOpenUpdateThread] = React.useState<boolean>(false);\n    const handleClickOpenUpdateThread = () => {\n      setOpenUpdateThread(true);\n    };\n    const handleCloseUpdateThread = () => {\n      setOpenUpdateThread(false);\n    };\n    \n    return (\n        <Stack direction=\"row\" justifyContent='flex-end' alignItems=\"center\" spacing={1}>\n            <IconButton onClick={handleClickOpenCreateComment}>\n                <CommentIcon />\n            </IconButton>\n            <CreateComment thread_page_id={thread.id} openCreateComment={openCreateComment} handleCloseCreateComment={handleCloseCreateComment} currentUserState={currentUserState}/>\n            { thread.user_id === currentUserState.currentUser.id &&\n              <>\n                <IconButton onClick={handleClickOpenUpdateThread}>\n                  <EditIcon />\n                </IconButton>\n                <UpdateThread thread_page_id={thread.id} openUpdateThread={openUpdateThread} handleCloseUpdateThread={handleCloseUpdateThread} />\n              </>\n            }\n            { thread.user_id === currentUserState.currentUser.id &&\n              <>\n                <IconButton onClick={handleClickOpenDeleteThread}>\n                  <DeleteIcon />\n                </IconButton>\n                <DeleteThread thread_page_id={thread.id} openDeleteThread={openDeleteThread} handleCloseDeleteThread={handleCloseDeleteThread} />\n              </>\n            }\n        </Stack>\n    );\n};\n\nexport default DeleteEditCommentOnThread;"]},"metadata":{},"sourceType":"module"}