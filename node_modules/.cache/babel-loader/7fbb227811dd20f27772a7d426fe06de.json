{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/BodyAddHTML.tsx\";\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BodyAddHTML = _ref => {\n  let {\n    body,\n    toOverflow\n  } = _ref;\n  const body_array = body.split('\\n').filter(ele => ele !== \"\");\n\n  if (!toOverflow) {\n    return (\n      /*#__PURE__*/\n      // <Stack direction='column' spacing={0}>\n      //     { body_array.map((line, index) => (\n      //         <>\n      //             <Typography align='left' variant=\"body1\" key={index}>\n      //                 {line}\n      //             </Typography>\n      //             <br />\n      //         </>\n      //     ))}\n      // </Stack>\n      _jsxDEV(\"p\", {\n        children: \"woeioweiruoweiurowieur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n  const body_elipsis = body_array.join('...');\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    noWrap: toOverflow,\n    align: \"left\",\n    variant: \"body1\",\n    children: body_elipsis\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BodyAddHTML;\nexport default BodyAddHTML;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyAddHTML\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/BodyAddHTML.tsx"],"names":["Typography","React","BodyAddHTML","body","toOverflow","body_array","split","filter","ele","body_elipsis","join"],"mappings":";AAAA,SAASA,UAAT,QAA2B,mBAA3B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;;AAOA,MAAMC,WAA4B,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAgC;AAClE,QAAMC,UAAoB,GAAGF,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBC,MAAjB,CAAwBC,GAAG,IAAIA,GAAG,KAAK,EAAvC,CAA7B;;AAEA,MAAI,CAACJ,UAAL,EAAiB;AACb;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAaH;;AAED,QAAMK,YAAY,GAAGJ,UAAU,CAACK,IAAX,CAAgB,KAAhB,CAArB;AACA,sBACI,QAAC,UAAD;AAAY,IAAA,MAAM,EAAEN,UAApB;AAAgC,IAAA,KAAK,EAAC,MAAtC;AAA6C,IAAA,OAAO,EAAC,OAArD;AAAA,cACKK;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzBD;;KAAMP,W;AA2BN,eAAeA,WAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\n\nimport React from 'react';\n\ntype Props = {\n    toOverflow: boolean;\n    body: string;\n}\n\nconst BodyAddHTML: React.FC<Props> = ({ body, toOverflow }: Props) => {\n    const body_array: string[] = body.split('\\n').filter(ele => ele !== \"\");\n\n    if (!toOverflow) {\n        return (\n            // <Stack direction='column' spacing={0}>\n            //     { body_array.map((line, index) => (\n            //         <>\n            //             <Typography align='left' variant=\"body1\" key={index}>\n            //                 {line}\n            //             </Typography>\n            //             <br />\n            //         </>\n            //     ))}\n            // </Stack>\n            <p>woeioweiruoweiurowieur</p>\n        );\n    }\n\n    const body_elipsis = body_array.join('...');\n    return (\n        <Typography noWrap={toOverflow} align='left' variant=\"body1\">\n            {body_elipsis}\n        </Typography>\n    );\n};\n\nexport default BodyAddHTML;"]},"metadata":{},"sourceType":"module"}