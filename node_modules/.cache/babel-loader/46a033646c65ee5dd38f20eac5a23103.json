{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"children\", \"color\", \"component\", \"variant\", \"size\", \"layout\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize, unstable_isMuiElement as isMuiElement } from '@mui/utils';\nimport { styled, useThemeProps } from '../styles';\nimport { SheetRoot } from '../Sheet/Sheet';\nimport { getModalDialogUtilityClass } from './modalDialogClasses';\nimport ModalDialogSizeContext from './ModalDialogSizeContext';\nimport ModalDialogVariantColorContext from './ModalDialogVariantColorContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    size,\n    layout\n  } = ownerState;\n  const slots = {\n    root: ['root', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, layout && `layout${capitalize(layout)}`]\n  };\n  return composeClasses(slots, getModalDialogUtilityClass, {});\n};\n\nconst ModalDialogRoot = styled(SheetRoot, {\n  name: 'JoyModalDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    // Divider integration\n    '--Divider-inset': 'calc(-1 * var(--ModalDialog-padding))',\n    '--ModalClose-radius': 'max((var(--ModalDialog-radius) - var(--variant-borderWidth)) - var(--ModalClose-inset), min(var(--ModalClose-inset) / 2, (var(--ModalDialog-radius) - var(--variant-borderWidth)) / 2))'\n  }, ownerState.size === 'sm' && {\n    '--ModalDialog-padding': theme.spacing(1.25),\n    '--ModalDialog-radius': theme.vars.radius.sm,\n    '--ModalClose-inset': theme.spacing(0.75),\n    fontSize: theme.vars.fontSize.sm\n  }, ownerState.size === 'md' && {\n    '--ModalDialog-padding': theme.spacing(2),\n    '--ModalDialog-radius': theme.vars.radius.md,\n    '--ModalClose-inset': theme.spacing(1),\n    fontSize: theme.vars.fontSize.md\n  }, ownerState.size === 'lg' && {\n    '--ModalDialog-padding': theme.spacing(3),\n    '--ModalDialog-radius': theme.vars.radius.md,\n    '--ModalClose-inset': theme.spacing(1.5),\n    fontSize: theme.vars.fontSize.md\n  }, {\n    boxSizing: 'border-box',\n    boxShadow: theme.shadow.md,\n    borderRadius: 'var(--ModalDialog-radius)',\n    fontFamily: theme.vars.fontFamily.body,\n    lineHeight: theme.vars.lineHeight.md,\n    padding: 'var(--ModalDialog-padding)',\n    minWidth: 'min(calc(100vw - 2 * var(--ModalDialog-padding)), var(--ModalDialog-minWidth, 300px))',\n    outline: 'none',\n    position: 'absolute'\n  }, ownerState.layout === 'fullscreen' && {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    border: 0,\n    borderRadius: 0\n  }, ownerState.layout === 'center' && {\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  });\n});\nconst ModalDialog = /*#__PURE__*/React.forwardRef(function ModalDialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyModalDialog'\n  });\n\n  const {\n    className,\n    children,\n    color = 'neutral',\n    component = 'div',\n    variant = 'outlined',\n    size = 'md',\n    layout = 'center'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    layout,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const contextValue = React.useMemo(() => ({\n    variant,\n    color\n  }), [color, variant]);\n  return /*#__PURE__*/_jsx(ModalDialogSizeContext.Provider, {\n    value: size,\n    children: /*#__PURE__*/_jsx(ModalDialogVariantColorContext.Provider, {\n      value: contextValue,\n      children: /*#__PURE__*/_jsx(ModalDialogRoot, _extends({\n        as: component,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        role: \"dialog\",\n        \"aria-modal\": \"true\"\n      }, other, {\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n\n          if (isMuiElement(child, ['Divider'])) {\n            const extraProps = {};\n            extraProps.inset = 'inset' in child.props ? child.props.inset : 'context';\n            return /*#__PURE__*/React.cloneElement(child, extraProps);\n          }\n\n          return child;\n        })\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalDialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The layout of the dialog\n   * @default 'center'\n   */\n  layout: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['center', 'fullscreen']), PropTypes.string]),\n\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default ModalDialog;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/ModalDialog/ModalDialog.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","unstable_capitalize","capitalize","unstable_isMuiElement","isMuiElement","styled","useThemeProps","SheetRoot","getModalDialogUtilityClass","ModalDialogSizeContext","ModalDialogVariantColorContext","jsx","_jsx","useUtilityClasses","ownerState","variant","color","size","layout","slots","root","ModalDialogRoot","name","slot","overridesResolver","props","styles","theme","spacing","vars","radius","sm","fontSize","md","boxSizing","boxShadow","shadow","borderRadius","fontFamily","body","lineHeight","padding","minWidth","outline","position","top","left","right","bottom","border","transform","ModalDialog","forwardRef","inProps","ref","className","children","component","other","classes","contextValue","useMemo","Provider","value","as","role","Children","map","child","isValidElement","extraProps","inset","cloneElement","process","env","NODE_ENV","propTypes","node","string","oneOfType","oneOf","elementType","sx","arrayOf","func","object","bool"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"children\", \"color\", \"component\", \"variant\", \"size\", \"layout\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize, unstable_isMuiElement as isMuiElement } from '@mui/utils';\nimport { styled, useThemeProps } from '../styles';\nimport { SheetRoot } from '../Sheet/Sheet';\nimport { getModalDialogUtilityClass } from './modalDialogClasses';\nimport ModalDialogSizeContext from './ModalDialogSizeContext';\nimport ModalDialogVariantColorContext from './ModalDialogVariantColorContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    size,\n    layout\n  } = ownerState;\n  const slots = {\n    root: ['root', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, layout && `layout${capitalize(layout)}`]\n  };\n  return composeClasses(slots, getModalDialogUtilityClass, {});\n};\nconst ModalDialogRoot = styled(SheetRoot, {\n  name: 'JoyModalDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  // Divider integration\n  '--Divider-inset': 'calc(-1 * var(--ModalDialog-padding))',\n  '--ModalClose-radius': 'max((var(--ModalDialog-radius) - var(--variant-borderWidth)) - var(--ModalClose-inset), min(var(--ModalClose-inset) / 2, (var(--ModalDialog-radius) - var(--variant-borderWidth)) / 2))'\n}, ownerState.size === 'sm' && {\n  '--ModalDialog-padding': theme.spacing(1.25),\n  '--ModalDialog-radius': theme.vars.radius.sm,\n  '--ModalClose-inset': theme.spacing(0.75),\n  fontSize: theme.vars.fontSize.sm\n}, ownerState.size === 'md' && {\n  '--ModalDialog-padding': theme.spacing(2),\n  '--ModalDialog-radius': theme.vars.radius.md,\n  '--ModalClose-inset': theme.spacing(1),\n  fontSize: theme.vars.fontSize.md\n}, ownerState.size === 'lg' && {\n  '--ModalDialog-padding': theme.spacing(3),\n  '--ModalDialog-radius': theme.vars.radius.md,\n  '--ModalClose-inset': theme.spacing(1.5),\n  fontSize: theme.vars.fontSize.md\n}, {\n  boxSizing: 'border-box',\n  boxShadow: theme.shadow.md,\n  borderRadius: 'var(--ModalDialog-radius)',\n  fontFamily: theme.vars.fontFamily.body,\n  lineHeight: theme.vars.lineHeight.md,\n  padding: 'var(--ModalDialog-padding)',\n  minWidth: 'min(calc(100vw - 2 * var(--ModalDialog-padding)), var(--ModalDialog-minWidth, 300px))',\n  outline: 'none',\n  position: 'absolute'\n}, ownerState.layout === 'fullscreen' && {\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  border: 0,\n  borderRadius: 0\n}, ownerState.layout === 'center' && {\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)'\n}));\nconst ModalDialog = /*#__PURE__*/React.forwardRef(function ModalDialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyModalDialog'\n  });\n  const {\n      className,\n      children,\n      color = 'neutral',\n      component = 'div',\n      variant = 'outlined',\n      size = 'md',\n      layout = 'center'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    layout,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const contextValue = React.useMemo(() => ({\n    variant,\n    color\n  }), [color, variant]);\n  return /*#__PURE__*/_jsx(ModalDialogSizeContext.Provider, {\n    value: size,\n    children: /*#__PURE__*/_jsx(ModalDialogVariantColorContext.Provider, {\n      value: contextValue,\n      children: /*#__PURE__*/_jsx(ModalDialogRoot, _extends({\n        as: component,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        role: \"dialog\",\n        \"aria-modal\": \"true\"\n      }, other, {\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          if (isMuiElement(child, ['Divider'])) {\n            const extraProps = {};\n            extraProps.inset = 'inset' in child.props ? child.props.inset : 'context';\n            return /*#__PURE__*/React.cloneElement(child, extraProps);\n          }\n          return child;\n        })\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalDialog.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The layout of the dialog\n   * @default 'center'\n   */\n  layout: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['center', 'fullscreen']), PropTypes.string]),\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default ModalDialog;"]},"metadata":{},"sourceType":"module"}