{"ast":null,"code":"import _slicedToArray from\"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Typography,Box,AppBar,Container,Toolbar,Tooltip,IconButton,Avatar,CardActionArea}from'@material-ui/core';import ForumIcon from'@mui/icons-material/Forum';import AccountSettings from'./account/AccountSettings';import Stack from'@mui/material/Stack';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// Navigation bar menu: contains home button, my threads button and account settings dropdown menu (accessible on all pages)\nvar NavBar=function NavBar(_ref){var API=_ref.API,currentUserState=_ref.currentUserState,globalMessageState=_ref.globalMessageState;// Anchor settings menu (dropdown menu: contains log in, log out and creaete account buttons)\nvar _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),anchorElAccountSettings=_React$useState2[0],setAnchorElAccountSettings=_React$useState2[1];var openAccountSettings=Boolean(anchorElAccountSettings);var handleClickAccountSettings=function handleClickAccountSettings(event){setAnchorElAccountSettings(event.currentTarget);};var handleCloseAccountSettings=function handleCloseAccountSettings(){setAnchorElAccountSettings(null);};// Other buttons on navbar that redirect to other pages (other than \"home\" and \"account settings\" buttons)\nvar myThreads={pageName:\"MyThreads\",href:\"/mythreads\"};var pages=[myThreads];return/*#__PURE__*/_jsx(Box,{marginBottom:'70px',children:/*#__PURE__*/_jsx(AppBar,{position:\"fixed\",style:{zIndex:'1200'},children:/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsxs(Toolbar,{disableGutters:true,children:[/*#__PURE__*/_jsxs(Box,{flexGrow:1,display:\"flex\",alignItems:'center',children:[/*#__PURE__*/_jsx(ForumIcon,{sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"a\",href:\"/\",style:{color:'inherit',textDecoration:'none',marginRight:'40px'},children:\"ChitChat\"}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",children:currentUserState.isLoggedIn&&pages.map(function(page){return/*#__PURE__*/_jsx(CardActionArea,{style:{padding:'10px',borderRadius:'10px'},href:page.href,children:/*#__PURE__*/_jsx(Typography,{children:page.pageName})},page.pageName);})})]}),/*#__PURE__*/_jsx(Tooltip,{title:\"Account Settings\",children:/*#__PURE__*/_jsx(IconButton,{id:\"basic-button\",\"aria-controls\":openAccountSettings?'account-settings':undefined,\"aria-haspopup\":\"true\",\"aria-expanded\":openAccountSettings?'true':undefined,onClick:handleClickAccountSettings,children:/*#__PURE__*/_jsx(Avatar,{})})}),/*#__PURE__*/_jsx(AccountSettings,{API:API,anchorElAccountSettings:anchorElAccountSettings,openAccountSettings:openAccountSettings,handleCloseAccountSettings:handleCloseAccountSettings,currentUserState:currentUserState,globalMessageState:globalMessageState})]})})})});};export default NavBar;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/NavBar.tsx"],"names":["Typography","Box","AppBar","Container","Toolbar","Tooltip","IconButton","Avatar","CardActionArea","ForumIcon","AccountSettings","Stack","React","NavBar","API","currentUserState","globalMessageState","useState","anchorElAccountSettings","setAnchorElAccountSettings","openAccountSettings","Boolean","handleClickAccountSettings","event","currentTarget","handleCloseAccountSettings","myThreads","pageName","href","pages","zIndex","mr","color","textDecoration","marginRight","isLoggedIn","map","page","padding","borderRadius","undefined"],"mappings":"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","sourcesContent":["import { Typography, Box, AppBar, Container, Toolbar, Tooltip,\n  IconButton, Avatar, CardActionArea } from '@material-ui/core';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport AccountSettings from './account/AccountSettings';\nimport CurrentUserState from '../types/CurrentUserState';\nimport GlobalMessageState from '../types/GlobalMessageState';\nimport Stack from '@mui/material/Stack';\n\nimport React from 'react';\n\ntype Props = {\n  currentUserState: CurrentUserState;\n  globalMessageState: GlobalMessageState;\n  API: string;\n}\n\n// Navigation bar menu: contains home button, my threads button and account settings dropdown menu (accessible on all pages)\nconst NavBar: React.FC<Props> = ({API, currentUserState, globalMessageState}: Props) => {\n\n  // Anchor settings menu (dropdown menu: contains log in, log out and creaete account buttons)\n  const [anchorElAccountSettings, setAnchorElAccountSettings] = React.useState<null | HTMLElement>(null);\n  const openAccountSettings = Boolean(anchorElAccountSettings);\n  const handleClickAccountSettings = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorElAccountSettings(event.currentTarget);\n  };\n  const handleCloseAccountSettings = () => {\n    setAnchorElAccountSettings(null);\n  };\n\n  // Other buttons on navbar that redirect to other pages (other than \"home\" and \"account settings\" buttons)\n  type page = {\n    pageName: string;\n    href: string;\n  }\n  const myThreads: page = {\n    pageName: \"MyThreads\",\n    href: \"/mythreads\",\n  }\n  const pages:page[] = [myThreads];\n\n  return (\n    <Box marginBottom={'70px'}>\n      <AppBar position='fixed' style={{zIndex: '1200'}}>\n        <Container maxWidth='xl'>\n          <Toolbar disableGutters>\n            <Box flexGrow={1} display='flex' alignItems={'center'}>\n              {/* Logo and website name */}\n              <ForumIcon sx={{mr: 1}} />\n              <Typography variant='h6' component='a' href='/'\n                style={{\n                  color: 'inherit',\n                  textDecoration: 'none',\n                  marginRight: '40px',\n                }}\n              >\n                ChitChat\n              </Typography>\n              <Stack direction='row'>\n                {/* Other buttons redirecting to other pages */}\n                {currentUserState.isLoggedIn && pages.map(page => (\n                  <CardActionArea key={page.pageName} style={{padding: '10px', borderRadius: '10px'}} href={page.href}>\n                    <Typography>{page.pageName}</Typography>\n                  </CardActionArea>\n                ))}\n              </Stack>\n            </Box>\n            {/* Account settings button with dropdown menu containing login, logout, change password and create account */}\n            <Tooltip title=\"Account Settings\">\n              <IconButton\n                id=\"basic-button\"\n                aria-controls={openAccountSettings ? 'account-settings' : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={openAccountSettings ? 'true' : undefined}\n                onClick={handleClickAccountSettings}\n              >\n                <Avatar/>\n              </IconButton>\n            </Tooltip>\n            <AccountSettings API={API} anchorElAccountSettings={anchorElAccountSettings} openAccountSettings={openAccountSettings} \n              handleCloseAccountSettings={handleCloseAccountSettings} currentUserState={currentUserState} globalMessageState={globalMessageState}/>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}