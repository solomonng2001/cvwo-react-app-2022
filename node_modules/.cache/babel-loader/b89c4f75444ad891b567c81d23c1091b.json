{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\nimport CreateThread from './CreateThread';\nimport { Typography, CardActionArea } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  let navigate = useNavigate();\n\n  const handleRedirectToThreadPage = () => {};\n\n  const [openCreateThread, setOpenCreateThread] = React.useState(false);\n\n  const handleClickOpenCreateThread = () => {\n    setOpenCreateThread(true);\n  };\n\n  const handleCloseCreateThread = () => {\n    setOpenCreateThread(false);\n  };\n\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const title = search;\n    fetch(\"http://localhost:3000/thread_pages/search/title\", {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title\n      })\n    }).then(res => res.json()).then(result => {\n      setResults(result);\n    });\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: '20px',\n      paddingBottom: '20px',\n      position: 'sticky',\n      top: '50px',\n      zIndex: '1100'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      sx: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          ml: 1,\n          flex: 1\n        },\n        placeholder: \"Who's chatting about what?\",\n        value: search,\n        onChange: event => setSearch(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          height: 28,\n          m: 0.5\n        },\n        orientation: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClickOpenCreateThread,\n        children: /*#__PURE__*/_jsxDEV(LibraryAddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateThread, {\n        openCreateThread: openCreateThread,\n        handleCloseCreateThread: handleCloseCreateThread\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        justifyItems: \"flex-start\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        alignItems: \"flex-start\",\n        children: results.map(result => /*#__PURE__*/_jsxDEV(CardActionArea, {\n          style: {\n            paddingTop: 3,\n            paddingBottom: 3,\n            paddingLeft: 8\n          },\n          onClick: handleRedirectToThreadPage,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"left\",\n            children: result.title\n          }, result.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"800xhtwDLL41eiGa/x/veJcSUKY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/SearchBar.tsx"],"names":["React","useEffect","useState","Paper","InputBase","Divider","IconButton","SearchIcon","LibraryAddIcon","CreateThread","Typography","CardActionArea","Stack","useNavigate","SearchBar","navigate","handleRedirectToThreadPage","openCreateThread","setOpenCreateThread","handleClickOpenCreateThread","handleCloseCreateThread","search","setSearch","results","setResults","title","fetch","method","mode","headers","body","JSON","stringify","then","res","json","result","paddingTop","paddingBottom","position","top","zIndex","display","alignItems","ml","flex","event","target","value","height","m","length","justifyItems","map","paddingLeft","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\nimport CreateThread from './CreateThread';\nimport ThreadSearch from '../types/ThreadSearch';\nimport { Typography, CardActionArea, Card } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport { useNavigate } from \"react-router-dom\";\n\nconst SearchBar: React.FC = () => {\n    let navigate = useNavigate();\n    const handleRedirectToThreadPage = () => {\n    }\n\n    const [openCreateThread, setOpenCreateThread] = React.useState<boolean>(false);\n\n    const handleClickOpenCreateThread = () => {\n      setOpenCreateThread(true);\n    };\n  \n    const handleCloseCreateThread = () => {\n      setOpenCreateThread(false);\n    };\n\n    const [search, setSearch] = useState<string>(\"\");\n    const [results, setResults] = useState<ThreadSearch[]>([]);\n\n    useEffect(() => {\n        const title = search;\n        fetch(\"http://localhost:3000/thread_pages/search/title\", {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                title,\n            }),\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setResults(result);\n                }\n            )\n    }, [search]);\n\n    return (\n        <div style={{paddingTop: '20px', paddingBottom: '20px', position: 'sticky', top: '50px', zIndex: '1100'}}>\n            <Paper\n            component=\"form\" \n            sx={{ display: 'flex', alignItems: 'center' }}\n            >\n                <InputBase\n                    sx={{ ml: 1, flex: 1 }}\n                    placeholder=\"Who's chatting about what?\"\n                    value={search}\n                    onChange={event => setSearch(event.target.value)}\n                />\n                <IconButton>\n                    <SearchIcon />\n                </IconButton>\n                <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n                <IconButton onClick={handleClickOpenCreateThread}>\n                    <LibraryAddIcon />\n                </IconButton>\n                <CreateThread openCreateThread={openCreateThread} handleCloseCreateThread={handleCloseCreateThread} />\n            </Paper>\n            { results.length > 0 &&\n                <Paper sx={{justifyItems: \"flex-start\"}}>\n                    <Stack direction=\"column\" alignItems=\"flex-start\">\n                        { results.map(result =>\n                                <CardActionArea style={{paddingTop: 3, paddingBottom: 3, paddingLeft: 8}} \n                                    onClick={handleRedirectToThreadPage}\n                                >\n                                    <Typography key={result.id} align=\"left\">{result.title}</Typography>\n                                </CardActionArea>\n                        )}\n                    </Stack>\n                </Paper>\n            }\n        </div>\n    );\n};\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}