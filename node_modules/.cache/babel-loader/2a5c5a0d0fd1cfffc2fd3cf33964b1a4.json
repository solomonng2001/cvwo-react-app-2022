{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/NavBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography, Box, AppBar, Container, Toolbar, Tooltip, IconButton, Avatar, CardActionArea } from '@material-ui/core';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport AccountSettings from './account/AccountSettings';\nimport Stack from '@mui/material/Stack';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Navigation bar menu: contains home button, my threads button and account settings dropdown menu (accessible on all pages)\nconst NavBar = _ref => {\n  _s();\n\n  let {\n    API,\n    currentUserState,\n    globalMessageState\n  } = _ref;\n  // Anchor settings menu (dropdown menu: contains log in, log out and creaete account buttons)\n  const [anchorElAccountSettings, setAnchorElAccountSettings] = React.useState(null);\n  const openAccountSettings = Boolean(anchorElAccountSettings);\n\n  const handleClickAccountSettings = event => {\n    setAnchorElAccountSettings(event.currentTarget);\n  };\n\n  const handleCloseAccountSettings = () => {\n    setAnchorElAccountSettings(null);\n  }; // Other buttons on navbar that redirect to other pages (other than \"home\" and \"account settings\" buttons)\n\n\n  const myThreads = {\n    pageName: \"MyThreads\",\n    href: \"/mythreads\"\n  };\n  const pages = [myThreads];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    marginBottom: '70px',\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      style: {\n        zIndex: '1200'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            flexGrow: 1,\n            display: \"flex\",\n            alignItems: 'center',\n            children: [/*#__PURE__*/_jsxDEV(ForumIcon, {\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"a\",\n              href: \"/\",\n              style: {\n                color: 'inherit',\n                textDecoration: 'none',\n                marginRight: '40px'\n              },\n              children: \"ChitChat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              children: currentUserState.isLoggedIn && pages.map(page => /*#__PURE__*/_jsxDEV(CardActionArea, {\n                style: {\n                  padding: '10px',\n                  borderRadius: '10px'\n                },\n                href: page.href,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: page.pageName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)\n              }, page.pageName, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Account Settings\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              id: \"basic-button\",\n              \"aria-controls\": openAccountSettings ? 'account-settings' : undefined,\n              \"aria-haspopup\": \"true\",\n              \"aria-expanded\": openAccountSettings ? 'true' : undefined,\n              onClick: handleClickAccountSettings,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccountSettings, {\n            API: API,\n            anchorElAccountSettings: anchorElAccountSettings,\n            openAccountSettings: openAccountSettings,\n            handleCloseAccountSettings: handleCloseAccountSettings,\n            currentUserState: currentUserState,\n            globalMessageState: globalMessageState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"S7MXqc5kWiBw3mlWT6ANWbLEW7Q=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/NavBar.tsx"],"names":["Typography","Box","AppBar","Container","Toolbar","Tooltip","IconButton","Avatar","CardActionArea","ForumIcon","AccountSettings","Stack","React","NavBar","API","currentUserState","globalMessageState","anchorElAccountSettings","setAnchorElAccountSettings","useState","openAccountSettings","Boolean","handleClickAccountSettings","event","currentTarget","handleCloseAccountSettings","myThreads","pageName","href","pages","zIndex","mr","color","textDecoration","marginRight","isLoggedIn","map","page","padding","borderRadius","undefined"],"mappings":"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","sourcesContent":["import { Typography, Box, AppBar, Container, Toolbar, Tooltip,\n  IconButton, Avatar, CardActionArea } from '@material-ui/core';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport AccountSettings from './account/AccountSettings';\nimport CurrentUserState from '../types/CurrentUserState';\nimport GlobalMessageState from '../types/GlobalMessageState';\nimport Stack from '@mui/material/Stack';\n\nimport React from 'react';\n\ntype Props = {\n  currentUserState: CurrentUserState;\n  globalMessageState: GlobalMessageState;\n  API: string;\n}\n\n// Navigation bar menu: contains home button, my threads button and account settings dropdown menu (accessible on all pages)\nconst NavBar: React.FC<Props> = ({API, currentUserState, globalMessageState}: Props) => {\n\n  // Anchor settings menu (dropdown menu: contains log in, log out and creaete account buttons)\n  const [anchorElAccountSettings, setAnchorElAccountSettings] = React.useState<null | HTMLElement>(null);\n  const openAccountSettings = Boolean(anchorElAccountSettings);\n  const handleClickAccountSettings = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorElAccountSettings(event.currentTarget);\n  };\n  const handleCloseAccountSettings = () => {\n    setAnchorElAccountSettings(null);\n  };\n\n  // Other buttons on navbar that redirect to other pages (other than \"home\" and \"account settings\" buttons)\n  type page = {\n    pageName: string;\n    href: string;\n  }\n  const myThreads: page = {\n    pageName: \"MyThreads\",\n    href: \"/mythreads\",\n  }\n  const pages:page[] = [myThreads];\n\n  return (\n    <Box marginBottom={'70px'}>\n      <AppBar position='fixed' style={{zIndex: '1200'}}>\n        <Container maxWidth='xl'>\n          <Toolbar disableGutters>\n            <Box flexGrow={1} display='flex' alignItems={'center'}>\n              {/* Logo and website name */}\n              <ForumIcon sx={{mr: 1}} />\n              <Typography variant='h6' component='a' href='/'\n                style={{\n                  color: 'inherit',\n                  textDecoration: 'none',\n                  marginRight: '40px',\n                }}\n              >\n                ChitChat\n              </Typography>\n              <Stack direction='row'>\n                {/* Other buttons redirecting to other pages */}\n                {currentUserState.isLoggedIn && pages.map(page => (\n                  <CardActionArea key={page.pageName} style={{padding: '10px', borderRadius: '10px'}} href={page.href}>\n                    <Typography>{page.pageName}</Typography>\n                  </CardActionArea>\n                ))}\n              </Stack>\n            </Box>\n            {/* Account settings button with dropdown menu containing login, logout, change password and create account */}\n            <Tooltip title=\"Account Settings\">\n              <IconButton\n                id=\"basic-button\"\n                aria-controls={openAccountSettings ? 'account-settings' : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={openAccountSettings ? 'true' : undefined}\n                onClick={handleClickAccountSettings}\n              >\n                <Avatar/>\n              </IconButton>\n            </Tooltip>\n            <AccountSettings API={API} anchorElAccountSettings={anchorElAccountSettings} openAccountSettings={openAccountSettings} \n              handleCloseAccountSettings={handleCloseAccountSettings} currentUserState={currentUserState} globalMessageState={globalMessageState}/>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}