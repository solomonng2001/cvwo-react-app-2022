{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/GlobalMessage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GlobalMessage(globalMessage, severityGlobalMessage) {\n  _s();\n\n  const [openGlobalMessage, setOpenGlobalMessage] = useState(true);\n\n  const handleCloseGlobalMessage = () => {\n    setOpenGlobalMessage(false);\n  };\n\n  if (globalMessage.length !== 0 && severityGlobalMessage !== undefined) {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: globalMessage.map(message => /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: openGlobalMessage,\n        autoHideDuration: 6000,\n        onClose: handleCloseGlobalMessage,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseGlobalMessage,\n          severity: severityGlobalMessage,\n          sx: {\n            width: '100%'\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  } else {\n    return;\n  }\n}\n\n_s(GlobalMessage, \"DVi/9JjiuKLFLOSPYIyk7eUVXAM=\");\n\n_c = GlobalMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalMessage\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/GlobalMessage.tsx"],"names":["React","useState","Snackbar","Alert","Stack","GlobalMessage","globalMessage","severityGlobalMessage","openGlobalMessage","setOpenGlobalMessage","handleCloseGlobalMessage","length","undefined","map","message","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkC,qBAAlC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,aAAvB,EAAgDC,qBAAhD,EAA+F;AAAA;;AAC1G,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAAU,IAAV,CAA1D;;AAEA,QAAMS,wBAAwB,GAAG,MAAM;AACnCD,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GAFD;;AAIA,MAAIH,aAAa,CAACK,MAAd,KAAyB,CAAzB,IAA8BJ,qBAAqB,KAAKK,SAA5D,EAAuE;AACnE,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,gBACMN,aAAa,CAACO,GAAd,CAAkBC,OAAO,iBACvB,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEN,iBAAhB;AAAmC,QAAA,gBAAgB,EAAE,IAArD;AAA2D,QAAA,OAAO,EAAEE,wBAApE;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEA,wBAAhB;AAA0C,UAAA,QAAQ,EAAEH,qBAApD;AAA2E,UAAA,EAAE,EAAE;AAAEQ,YAAAA,KAAK,EAAE;AAAT,WAA/E;AAAA,oBACKD;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF;AADN;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAZD,MAYO;AACH;AACH;AACJ;;GAtBuBT,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert, { AlertColor } from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\nexport default function GlobalMessage(globalMessage: string[], severityGlobalMessage: AlertColor | undefined) {\n    const [openGlobalMessage, setOpenGlobalMessage] = useState<boolean>(true);\n\n    const handleCloseGlobalMessage = () => {\n        setOpenGlobalMessage(false);\n    }\n\n    if (globalMessage.length !== 0 && severityGlobalMessage !== undefined) {\n        return (\n            <Stack spacing={2}>\n                { globalMessage.map(message =>\n                    <Snackbar open={openGlobalMessage} autoHideDuration={6000} onClose={handleCloseGlobalMessage}>\n                        <Alert onClose={handleCloseGlobalMessage} severity={severityGlobalMessage} sx={{ width: '100%' }}>\n                            {message}\n                        </Alert>\n                    </Snackbar>\n                )}\n            </Stack>\n        );\n    } else {\n        return;\n    }\n}"]},"metadata":{},"sourceType":"module"}