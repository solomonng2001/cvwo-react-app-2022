{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Home from './pages/Home';\nimport ThreadPage from './pages/ThreadPage';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport NavBar from './components/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000'\n    }\n  }\n});\n\nconst App = () => {\n  _s();\n\n  const emptyCurrentUser = {\n    id: 0,\n    username: \"\",\n    password_digest: \"\",\n    created_at: \"\",\n    updated_at: \"\"\n  };\n  const [currentUser, setCurrentUser] = useState(emptyCurrentUser);\n  const currentUserState = {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    emptyCurrentUser: emptyCurrentUser,\n    isLoggedIn: currentUser === emptyCurrentUser\n  };\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      fetch(\"http://localhost:3000/login\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        alert(data);\n        currentUserState.setCurrentUser(data); // alert(currentUserState.currentUser.username);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        currentUserState: currentUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/thread/:threadID\",\n            element: /*#__PURE__*/_jsxDEV(ThreadPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"q9aKtBxzR9UtdSul4q2dbq1nfpw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/App.tsx"],"names":["Home","ThreadPage","React","useEffect","useState","BrowserRouter","Route","Routes","createTheme","ThemeProvider","NavBar","theme","palette","primary","light","main","dark","contrastText","secondary","App","emptyCurrentUser","id","username","password_digest","created_at","updated_at","currentUser","setCurrentUser","currentUserState","isLoggedIn","token","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","data","alert"],"mappings":"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","sourcesContent":["import Home from './pages/Home';\nimport ThreadPage from './pages/ThreadPage';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport NavBar from './components/NavBar';\nimport CurrentUser from './types/CurrentUser';\nimport CurrentUserState from './types/CurrentUserState';\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        light: '#757ce8',\n        main: '#3f50b5',\n        dark: '#002884',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ff7961',\n        main: '#f44336',\n        dark: '#ba000d',\n        contrastText: '#000',\n      },\n    },\n  });\n\nconst App: React.FC = () => {\n  const emptyCurrentUser = {\n    id: 0,\n    username: \"\",\n    password_digest: \"\",\n    created_at: \"\",\n    updated_at: \"\",\n  }\n  const [currentUser, setCurrentUser] = useState<CurrentUser>(emptyCurrentUser);\n  const currentUserState = {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    emptyCurrentUser: emptyCurrentUser,\n    isLoggedIn: currentUser === emptyCurrentUser,\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      fetch(\"http://localhost:3000/login\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `${token}`\n        }\n      })\n      .then(response => response.json())\n      .then(data => {\n        alert(data);\n        currentUserState.setCurrentUser(data);\n        // alert(currentUserState.currentUser.username);\n      })\n    }\n  }, [])\n\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={theme}>\n                <NavBar currentUserState={currentUserState} />\n                <BrowserRouter>\n                    <Routes>\n                        <Route path=\"/thread/:threadID\" element={<ThreadPage />} />\n                        <Route path=\"/\" element={<Home />} />\n                    </Routes>\n                </BrowserRouter>\n            </ThemeProvider>\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}