{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"component\", \"color\", \"variant\", \"size\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { useSlotProps } from '@mui/base/utils';\nimport { useButton } from '@mui/base/ButtonUnstyled';\nimport { useThemeProps, styled } from '../styles';\nimport { StyledIconButton } from '../IconButton/IconButton';\nimport { getModalCloseUtilityClass } from './modalCloseClasses';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport CloseModalContext from '../Modal/CloseModalContext';\nimport ModalDialogSizeContext from '../ModalDialog/ModalDialogSizeContext';\nimport ModalDialogVariantColorContext from '../ModalDialog/ModalDialogVariantColorContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    disabled,\n    focusVisible,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getModalCloseUtilityClass, {});\n};\n\nexport const ModalCloseRoot = styled(StyledIconButton, {\n  name: 'JoyModalClose',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref4 => {\n  let {\n    ownerState,\n    theme\n  } = _ref4;\n\n  var _theme$variants, _theme$variants2;\n\n  return _extends({}, ownerState.size === 'sm' && {\n    '--IconButton-size': '28px'\n  }, ownerState.size === 'md' && {\n    '--IconButton-size': '36px'\n  }, ownerState.size === 'lg' && {\n    '--IconButton-size': '40px'\n  }, {\n    position: 'absolute',\n    top: `var(--ModalClose-inset, ${theme.spacing(1)})`,\n    right: `var(--ModalClose-inset, ${theme.spacing(1)})`,\n    borderRadius: `var(--ModalClose-radius, ${theme.vars.radius.sm})`\n  }, !((_theme$variants = theme.variants[ownerState.variant]) != null && (_theme$variants2 = _theme$variants[ownerState.color]) != null && _theme$variants2.backgroundColor) && {\n    color: theme.vars.palette.text.secondary\n  });\n});\nconst modalDialogVariantMapping = {\n  plain: 'plain',\n  outlined: 'plain',\n  soft: 'soft',\n  solid: 'solid'\n};\nconst ModalClose = /*#__PURE__*/React.forwardRef(function ModalClose(inProps, ref) {\n  var _ref, _inProps$color, _ref2, _inProps$variant, _ref3, _inProps$size;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyModalClose'\n  });\n\n  const {\n    component = 'button',\n    color: colorProp = 'neutral',\n    variant: variantProp = 'plain',\n    size: sizeProp = 'md',\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const closeModalContext = React.useContext(CloseModalContext);\n  const modalDialogVariantColor = React.useContext(ModalDialogVariantColorContext);\n  const color = (_ref = (_inProps$color = inProps.color) != null ? _inProps$color : modalDialogVariantColor == null ? void 0 : modalDialogVariantColor.color) != null ? _ref : colorProp;\n  const variant = (_ref2 = (_inProps$variant = inProps.variant) != null ? _inProps$variant : modalDialogVariantMapping[modalDialogVariantColor == null ? void 0 : modalDialogVariantColor.variant]) != null ? _ref2 : variantProp;\n  const modalDialogSize = React.useContext(ModalDialogSizeContext);\n  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : modalDialogSize) != null ? _ref3 : sizeProp;\n  const {\n    focusVisible,\n    getRootProps\n  } = useButton(_extends({}, props, {\n    ref\n  }));\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    variant,\n    size,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    elementType: ModalCloseRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: _extends({\n      onClick: event => {\n        closeModalContext == null ? void 0 : closeModalContext(event, 'closeClick');\n        onClick == null ? void 0 : onClick(event);\n      }\n    }, other),\n    additionalProps: {\n      as: component\n    },\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(ModalCloseRoot, _extends({}, rootProps, {\n    children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {}))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalClose.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default ModalClose;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/ModalClose/ModalClose.js"],"names":["_objectWithoutPropertiesLoose","_extends","_CloseIcon","_excluded","React","PropTypes","unstable_composeClasses","composeClasses","unstable_capitalize","capitalize","useSlotProps","useButton","useThemeProps","styled","StyledIconButton","getModalCloseUtilityClass","CloseIcon","CloseModalContext","ModalDialogSizeContext","ModalDialogVariantColorContext","jsx","_jsx","useUtilityClasses","ownerState","variant","color","disabled","focusVisible","size","slots","root","ModalCloseRoot","name","slot","overridesResolver","props","styles","theme","_theme$variants","_theme$variants2","position","top","spacing","right","borderRadius","vars","radius","sm","variants","backgroundColor","palette","text","secondary","modalDialogVariantMapping","plain","outlined","soft","solid","ModalClose","forwardRef","inProps","ref","_ref","_inProps$color","_ref2","_inProps$variant","_ref3","_inProps$size","component","colorProp","variantProp","sizeProp","onClick","other","closeModalContext","useContext","modalDialogVariantColor","modalDialogSize","getRootProps","classes","rootProps","elementType","getSlotProps","externalSlotProps","event","additionalProps","as","className","children","process","env","NODE_ENV","propTypes","node","oneOfType","oneOf","string","func","sx","arrayOf","object","bool"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _CloseIcon;\nconst _excluded = [\"component\", \"color\", \"variant\", \"size\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { useSlotProps } from '@mui/base/utils';\nimport { useButton } from '@mui/base/ButtonUnstyled';\nimport { useThemeProps, styled } from '../styles';\nimport { StyledIconButton } from '../IconButton/IconButton';\nimport { getModalCloseUtilityClass } from './modalCloseClasses';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport CloseModalContext from '../Modal/CloseModalContext';\nimport ModalDialogSizeContext from '../ModalDialog/ModalDialogSizeContext';\nimport ModalDialogVariantColorContext from '../ModalDialog/ModalDialogVariantColorContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    disabled,\n    focusVisible,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getModalCloseUtilityClass, {});\n};\nexport const ModalCloseRoot = styled(StyledIconButton, {\n  name: 'JoyModalClose',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => {\n  var _theme$variants, _theme$variants2;\n  return _extends({}, ownerState.size === 'sm' && {\n    '--IconButton-size': '28px'\n  }, ownerState.size === 'md' && {\n    '--IconButton-size': '36px'\n  }, ownerState.size === 'lg' && {\n    '--IconButton-size': '40px'\n  }, {\n    position: 'absolute',\n    top: `var(--ModalClose-inset, ${theme.spacing(1)})`,\n    right: `var(--ModalClose-inset, ${theme.spacing(1)})`,\n    borderRadius: `var(--ModalClose-radius, ${theme.vars.radius.sm})`\n  }, !((_theme$variants = theme.variants[ownerState.variant]) != null && (_theme$variants2 = _theme$variants[ownerState.color]) != null && _theme$variants2.backgroundColor) && {\n    color: theme.vars.palette.text.secondary\n  });\n});\nconst modalDialogVariantMapping = {\n  plain: 'plain',\n  outlined: 'plain',\n  soft: 'soft',\n  solid: 'solid'\n};\nconst ModalClose = /*#__PURE__*/React.forwardRef(function ModalClose(inProps, ref) {\n  var _ref, _inProps$color, _ref2, _inProps$variant, _ref3, _inProps$size;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyModalClose'\n  });\n  const {\n      component = 'button',\n      color: colorProp = 'neutral',\n      variant: variantProp = 'plain',\n      size: sizeProp = 'md',\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const closeModalContext = React.useContext(CloseModalContext);\n  const modalDialogVariantColor = React.useContext(ModalDialogVariantColorContext);\n  const color = (_ref = (_inProps$color = inProps.color) != null ? _inProps$color : modalDialogVariantColor == null ? void 0 : modalDialogVariantColor.color) != null ? _ref : colorProp;\n  const variant = (_ref2 = (_inProps$variant = inProps.variant) != null ? _inProps$variant : modalDialogVariantMapping[modalDialogVariantColor == null ? void 0 : modalDialogVariantColor.variant]) != null ? _ref2 : variantProp;\n  const modalDialogSize = React.useContext(ModalDialogSizeContext);\n  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : modalDialogSize) != null ? _ref3 : sizeProp;\n  const {\n    focusVisible,\n    getRootProps\n  } = useButton(_extends({}, props, {\n    ref\n  }));\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    variant,\n    size,\n    focusVisible\n  });\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    elementType: ModalCloseRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: _extends({\n      onClick: event => {\n        closeModalContext == null ? void 0 : closeModalContext(event, 'closeClick');\n        onClick == null ? void 0 : onClick(event);\n      }\n    }, other),\n    additionalProps: {\n      as: component\n    },\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(ModalCloseRoot, _extends({}, rootProps, {\n    children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {}))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalClose.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'info', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default ModalClose;"]},"metadata":{},"sourceType":"module"}