{"ast":null,"code":"import _slicedToArray from\"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import Menu from'@mui/material/Menu';import MenuItem from'@mui/material/MenuItem';import LogIn from'./LogIn';import CreateAccount from'./CreateAccount';import ChangePassword from'./ChangePassword';// Sourced Menu component from https://mui.com/material-ui/react-menu/#main-content and modified for use\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// account settings button with dropdown menu containing more settings\nvar AccountSettings=function AccountSettings(_ref){var API=_ref.API,anchorElAccountSettings=_ref.anchorElAccountSettings,openAccountSettings=_ref.openAccountSettings,handleCloseAccountSettings=_ref.handleCloseAccountSettings,currentUserState=_ref.currentUserState,globalMessageState=_ref.globalMessageState;// toggle close/open login dialog page\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),openLogIn=_React$useState2[0],setOpenLogIn=_React$useState2[1];var handleClickOpenLogIn=function handleClickOpenLogIn(){setOpenLogIn(true);};var handleCloseLogIn=function handleCloseLogIn(){setOpenLogIn(false);};// toggle close/open create account dialog page\nvar _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),openCreateAccount=_React$useState4[0],setOpenCreateAccount=_React$useState4[1];var handleClickOpenCreateAccount=function handleClickOpenCreateAccount(){setOpenCreateAccount(true);};var handleCloseCreateAccount=function handleCloseCreateAccount(){setOpenCreateAccount(false);};// toggle close/open change password dialog page\nvar _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),openChangePassword=_React$useState6[0],setOpenChangePassword=_React$useState6[1];var handleClickOpenChangePassword=function handleClickOpenChangePassword(){setOpenChangePassword(true);};var handleCloseChangePassword=function handleCloseChangePassword(){setOpenChangePassword(false);};// when logout, forget user cache: user info and jwt token\nvar handleLogOut=function handleLogOut(){currentUserState.setCurrentUser(currentUserState.emptyCurrentUser);localStorage.removeItem(\"token\");window.location.reload();// refresh page to update without any user logged in\n};return/*#__PURE__*/_jsx(\"div\",{children:currentUserState.isLoggedIn?/*#__PURE__*/_jsxs(Menu,{id:\"account-settings\",anchorEl:anchorElAccountSettings,open:openAccountSettings,onClose:handleCloseAccountSettings,MenuListProps:{'aria-labelledby':'basic-button'},children:[/*#__PURE__*/_jsx(MenuItem,{onClick:handleClickOpenChangePassword,children:\"Change Password\"}),/*#__PURE__*/_jsx(ChangePassword,{API:API,openChangePassword:openChangePassword,handleCloseChangePassword:handleCloseChangePassword,currentUserState:currentUserState}),/*#__PURE__*/_jsx(MenuItem,{onClick:handleLogOut,children:\"Log Out\"})]}):/*#__PURE__*/ // else if user not logged in, display create account and login in dropdown menu\n_jsxs(Menu,{id:\"account-settings\",anchorEl:anchorElAccountSettings,open:openAccountSettings,onClose:handleCloseAccountSettings,MenuListProps:{'aria-labelledby':'basic-button'},children:[/*#__PURE__*/_jsx(MenuItem,{onClick:handleClickOpenLogIn,children:\"Log In\"}),/*#__PURE__*/_jsx(LogIn,{API:API,openLogIn:openLogIn,handleCloseLogIn:handleCloseLogIn,currentUserState:currentUserState,globalMessageState:globalMessageState}),/*#__PURE__*/_jsx(MenuItem,{onClick:handleClickOpenCreateAccount,children:\"Create Account\"}),/*#__PURE__*/_jsx(CreateAccount,{API:API,openCreateAccount:openCreateAccount,handleCloseCreateAccount:handleCloseCreateAccount})]})});};export default AccountSettings;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/account/AccountSettings.tsx"],"names":["React","Menu","MenuItem","LogIn","CreateAccount","ChangePassword","AccountSettings","API","anchorElAccountSettings","openAccountSettings","handleCloseAccountSettings","currentUserState","globalMessageState","useState","openLogIn","setOpenLogIn","handleClickOpenLogIn","handleCloseLogIn","openCreateAccount","setOpenCreateAccount","handleClickOpenCreateAccount","handleCloseCreateAccount","openChangePassword","setOpenChangePassword","handleClickOpenChangePassword","handleCloseChangePassword","handleLogOut","setCurrentUser","emptyCurrentUser","localStorage","removeItem","window","location","reload","isLoggedIn"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport LogIn from './LogIn';\nimport CreateAccount from './CreateAccount';\nimport CurrentUserState from '../../types/CurrentUserState';\nimport GlobalMessageState from '../../types/GlobalMessageState';\nimport ChangePassword from './ChangePassword';\n\n// Sourced Menu component from https://mui.com/material-ui/react-menu/#main-content and modified for use\n\ntype Props = {\n    anchorElAccountSettings: HTMLElement | null,\n    openAccountSettings: boolean,\n    handleCloseAccountSettings: () => void,\n    currentUserState: CurrentUserState;\n    globalMessageState: GlobalMessageState;\n    API: string;\n}\n\n// account settings button with dropdown menu containing more settings\nconst AccountSettings: React.FC<Props> = ({API, anchorElAccountSettings, openAccountSettings, handleCloseAccountSettings, currentUserState, globalMessageState}: Props) => {\n  \n  // toggle close/open login dialog page\n  const [openLogIn, setOpenLogIn] = React.useState<boolean>(false);\n    const handleClickOpenLogIn = () => {\n      setOpenLogIn(true);\n    };\n    const handleCloseLogIn = () => {\n      setOpenLogIn(false);\n    };\n\n    // toggle close/open create account dialog page\n    const [openCreateAccount, setOpenCreateAccount] = React.useState<boolean>(false);\n    const handleClickOpenCreateAccount = () => {\n      setOpenCreateAccount(true);\n    };\n    const handleCloseCreateAccount = () => {\n      setOpenCreateAccount(false);\n    };\n\n    // toggle close/open change password dialog page\n    const [openChangePassword, setOpenChangePassword] = React.useState<boolean>(false);\n    const handleClickOpenChangePassword = () => {\n      setOpenChangePassword(true);\n    };\n    const handleCloseChangePassword = () => {\n      setOpenChangePassword(false);\n    };\n\n    // when logout, forget user cache: user info and jwt token\n    const handleLogOut = () => {\n      currentUserState.setCurrentUser(currentUserState.emptyCurrentUser);\n      localStorage.removeItem(\"token\");\n      window.location.reload(); // refresh page to update without any user logged in\n    }\n\n    return (\n        <div>\n          {/* if user logged in, display change password and logout in dropdown menu */}\n          { currentUserState.isLoggedIn ? \n            <Menu\n                id=\"account-settings\"\n                anchorEl={anchorElAccountSettings}\n                open={openAccountSettings}\n                onClose={handleCloseAccountSettings}\n                MenuListProps={{\n                'aria-labelledby': 'basic-button',\n                }}\n            >            \n              <MenuItem onClick={handleClickOpenChangePassword}>Change Password</MenuItem>\n              <ChangePassword API={API} openChangePassword={openChangePassword} handleCloseChangePassword={handleCloseChangePassword} currentUserState={currentUserState}/>\n              <MenuItem onClick={handleLogOut}>Log Out</MenuItem>\n            </Menu> :\n            // else if user not logged in, display create account and login in dropdown menu\n            <Menu\n              id=\"account-settings\"\n              anchorEl={anchorElAccountSettings}\n              open={openAccountSettings}\n              onClose={handleCloseAccountSettings}\n              MenuListProps={{\n              'aria-labelledby': 'basic-button',\n              }}\n            >            \n              <MenuItem onClick={handleClickOpenLogIn}>Log In</MenuItem>\n              <LogIn API={API} openLogIn={openLogIn} handleCloseLogIn={handleCloseLogIn} currentUserState={currentUserState} globalMessageState={globalMessageState}/>\n              <MenuItem onClick={handleClickOpenCreateAccount}>Create Account</MenuItem>\n              <CreateAccount API={API} openCreateAccount={openCreateAccount} handleCloseCreateAccount={handleCloseCreateAccount}/>\n            </Menu>\n              }\n        </div>\n    );\n};\n\nexport default AccountSettings;"]},"metadata":{},"sourceType":"module"}