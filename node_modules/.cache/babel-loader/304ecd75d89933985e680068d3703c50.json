{"ast":null,"code":"import _slicedToArray from\"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,TextField,Dialog,DialogActions,DialogContent,DialogTitle}from'@material-ui/core';import AlertUser from'./AlertUser';import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChangePassword=function ChangePassword(_ref){var API=_ref.API,openChangePassword=_ref.openChangePassword,handleCloseChangePassword=_ref.handleCloseChangePassword,currentUserState=_ref.currentUserState;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),newPassword=_useState2[0],setNewPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newPasswordConfirmation=_useState4[0],setNewPasswordConfirmation=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),severity=_useState6[0],setSeverity=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var resetChangePassword=function resetChangePassword(){setNewPassword(\"\");setNewPasswordConfirmation(\"\");};var handleSubmitChangePassword=function handleSubmitChangePassword(){var password=newPassword;var password_confirmation=newPasswordConfirmation;var new_message=[];fetch(API+\"/users/\"+currentUserState.currentUser.id,{method:'PATCH',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,password_confirmation:password_confirmation})}).then(function(response){if(response.ok){setSeverity('success');new_message.push(\"Password Changed!\");setMessage(new_message);resetChangePassword();setTimeout(function(){return window.location.reload();},1000);}return response.json();}).then(function(data){if(data.error){setSeverity('error');data.error.map(function(error){return new_message.push(error);});setMessage(new_message);}}).catch(function(error){return console.log(error.message);});// }\n};return/*#__PURE__*/_jsxs(Dialog,{open:openChangePassword,onClose:handleCloseChangePassword,fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Change Password\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(AlertUser,{severity:severity,message:message}),/*#__PURE__*/_jsx(TextField,{value:newPassword,type:\"password\",margin:\"normal\",label:\"Password\",fullWidth:true,variant:\"outlined\",onChange:function onChange(event){return setNewPassword(event.target.value);}}),/*#__PURE__*/_jsx(TextField,{value:newPasswordConfirmation,type:\"password\",margin:\"normal\",label:\"Confirm Password\",fullWidth:true,variant:\"outlined\",onChange:function onChange(event){return setNewPasswordConfirmation(event.target.value);}})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseChangePassword,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmitChangePassword,children:\"Change Password\"})]})]});};export default ChangePassword;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/ChangePassword.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","AlertUser","React","useState","ChangePassword","API","openChangePassword","handleCloseChangePassword","currentUserState","newPassword","setNewPassword","newPasswordConfirmation","setNewPasswordConfirmation","undefined","severity","setSeverity","message","setMessage","resetChangePassword","handleSubmitChangePassword","password","password_confirmation","new_message","fetch","currentUser","id","method","headers","body","JSON","stringify","then","response","ok","push","setTimeout","window","location","reload","json","data","error","map","catch","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\nimport CurrentUserState from '../types/CurrentUserState';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openChangePassword: boolean;\n    handleCloseChangePassword: () => void;\n    currentUserState: CurrentUserState;\n    API: string;\n}\n\nconst ChangePassword: React.FC<Props> = ({API, openChangePassword, handleCloseChangePassword, currentUserState}: Props) => {\n    const [newPassword, setNewPassword] = useState<string>(\"\");\n    const [newPasswordConfirmation, setNewPasswordConfirmation] = useState<string>(\"\");\n    const [severity, setSeverity] = useState<AlertColor | undefined>(undefined);\n    const [message, setMessage] = useState<string[]>([]);\n\n    const resetChangePassword = () => {\n        setNewPassword(\"\");\n        setNewPasswordConfirmation(\"\");\n    }\n\n    const handleSubmitChangePassword = () => {\n        const password = newPassword;\n        const password_confirmation = newPasswordConfirmation;\n        let new_message: string[] = [];\n            fetch(API + \"/users/\" + currentUserState.currentUser.id, {\n                method: 'PATCH',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                body: JSON.stringify({\n                    password,\n                    password_confirmation,\n                }),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSeverity('success');\n                        new_message.push(\"Password Changed!\")\n                        setMessage(new_message);\n                        resetChangePassword();\n                        setTimeout(() => window.location.reload(), 1000);\n                    }\n                    return response.json();\n                })\n                .then((data) => {\n                    if (data.error) {\n                        setSeverity('error');\n                        data.error.map((error: string) =>\n                            new_message.push(error));\n                        setMessage(new_message);\n                    }\n                })\n                .catch((error) => console.log(error.message));\n        // }\n    }\n\n    return (\n        <Dialog open={openChangePassword} onClose={handleCloseChangePassword} fullWidth>\n            <DialogTitle>Change Password</DialogTitle>\n            <DialogContent>\n                <AlertUser severity={severity} message={message}/>\n                    <TextField\n                        value={newPassword}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setNewPassword(event.target.value)}\n                    />\n                    <TextField\n                        value={newPasswordConfirmation}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Confirm Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setNewPasswordConfirmation(event.target.value)}\n                    />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseChangePassword}>Close</Button>\n                <Button onClick={handleSubmitChangePassword}>Change Password</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}