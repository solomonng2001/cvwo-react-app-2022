{"ast":null,"code":"import React from'react';import{Card,CardContent,Typography,CardActionArea}from'@material-ui/core';import Stack from'@mui/material/Stack';import AvatarUserTimeTags from'../AvatarUserTimeTags';import DeleteEditCommentOnThread from'./DeleteEditCommentOnThread';import BodyAddHTML from'../BodyAddHTML';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// display individual thread: title, body, user, tags, and button icons to edit, delete or comment\nvar ThreadPost=function ThreadPost(_ref){var API=_ref.API,toOverflow=_ref.toOverflow,thread=_ref.thread,currentUserState=_ref.currentUserState,globalMessageState=_ref.globalMessageState;return/*#__PURE__*/ (// Clickable title: redirect to individual thread page (expecially on home page, where threads have text-oveflow and comments are hidden)\n_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardActionArea,{style:{padding:'20px'},href:'/thread/'+thread.id,children:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"left\",children:thread.title})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Stack,{direction:\"column\",spacing:3,children:[/*#__PURE__*/_jsx(AvatarUserTimeTags,{tagged:true,user:thread.user.username,time:new Date(thread.created_at),tags:thread.tags}),/*#__PURE__*/_jsx(BodyAddHTML,{body:thread.body,toOverflow:toOverflow}),/*#__PURE__*/_jsx(DeleteEditCommentOnThread,{globalMessageState:globalMessageState,API:API,commentable:true,thread:thread,currentUserState:currentUserState})]})})]}));};export default ThreadPost;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/thread/ThreadMainPost.tsx"],"names":["React","Card","CardContent","Typography","CardActionArea","Stack","AvatarUserTimeTags","DeleteEditCommentOnThread","BodyAddHTML","ThreadPost","API","toOverflow","thread","currentUserState","globalMessageState","padding","id","title","user","username","Date","created_at","tags","body"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,WAAf,CAA4BC,UAA5B,CAAwCC,cAAxC,KAA8D,mBAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,yBAAP,KAAsC,6BAAtC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,C,wFAYA;AACA,GAAMC,CAAAA,UAA2B,CAAG,QAA9BA,CAAAA,UAA8B,MAA6E,IAA1EC,CAAAA,GAA0E,MAA1EA,GAA0E,CAArEC,UAAqE,MAArEA,UAAqE,CAAzDC,MAAyD,MAAzDA,MAAyD,CAAjDC,gBAAiD,MAAjDA,gBAAiD,CAA/BC,kBAA+B,MAA/BA,kBAA+B,CAC7G,oBACI;AACA,MAAC,IAAD,yBACI,KAAC,cAAD,EAAgB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAvB,CAA4C,IAAI,CAAE,WAAaH,MAAM,CAACI,EAAtE,uBACI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,KAAK,CAAC,MAA/B,UACKJ,MAAM,CAACK,KADZ,EADJ,EADJ,cAMI,KAAC,WAAD,wBACI,MAAC,KAAD,EAAO,SAAS,CAAC,QAAjB,CAA0B,OAAO,CAAE,CAAnC,wBAEI,KAAC,kBAAD,EAAoB,MAAM,CAAE,IAA5B,CAAkC,IAAI,CAAEL,MAAM,CAACM,IAAP,CAAYC,QAApD,CAA8D,IAAI,CAAE,GAAIC,CAAAA,IAAJ,CAASR,MAAM,CAACS,UAAhB,CAApE,CAAiG,IAAI,CAAET,MAAM,CAACU,IAA9G,EAFJ,cAII,KAAC,WAAD,EAAa,IAAI,CAAEV,MAAM,CAACW,IAA1B,CAAgC,UAAU,CAAEZ,UAA5C,EAJJ,cAMI,KAAC,yBAAD,EAA2B,kBAAkB,CAAEG,kBAA/C,CAAmE,GAAG,CAAEJ,GAAxE,CAA6E,WAAW,CAAE,IAA1F,CAAgG,MAAM,CAAEE,MAAxG,CAAgH,gBAAgB,CAAEC,gBAAlI,EANJ,GADJ,EANJ,GAFJ,EAoBH,CArBD,CAuBA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, CardActionArea } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport AvatarUserTimeTags from '../AvatarUserTimeTags';\nimport DeleteEditCommentOnThread from './DeleteEditCommentOnThread';\nimport { Thread } from '../../types/Thread';\nimport BodyAddHTML from '../BodyAddHTML';\nimport CurrentUserState from '../../types/CurrentUserState';\nimport GlobalMessageState from '../../types/GlobalMessageState';\n\ntype Props = {\n    toOverflow: boolean;\n    thread: Thread;\n    currentUserState: CurrentUserState;\n    API: string;\n    globalMessageState: GlobalMessageState;\n}\n\n// display individual thread: title, body, user, tags, and button icons to edit, delete or comment\nconst ThreadPost: React.FC<Props> = ( {API, toOverflow, thread, currentUserState, globalMessageState}: Props) => {\n    return (\n        // Clickable title: redirect to individual thread page (expecially on home page, where threads have text-oveflow and comments are hidden)\n        <Card>\n            <CardActionArea style={{ padding: '20px' }} href={'/thread/' + thread.id}>\n                <Typography variant='h4' align='left'>\n                    {thread.title}\n                </Typography>\n            </CardActionArea>\n            <CardContent>\n                <Stack direction='column' spacing={3}>\n                    {/* Section of thread displaying creator, date and time, and tags */}\n                    <AvatarUserTimeTags tagged={true} user={thread.user.username} time={new Date(thread.created_at)} tags={thread.tags}/>\n                    {/* Body text with html properties handled */}\n                    <BodyAddHTML body={thread.body} toOverflow={toOverflow} />\n                    {/* Button icons for deleting, editing and commenting */}\n                    <DeleteEditCommentOnThread globalMessageState={globalMessageState} API={API} commentable={true} thread={thread} currentUserState={currentUserState}/>\n                </Stack>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ThreadPost;"]},"metadata":{},"sourceType":"module"}