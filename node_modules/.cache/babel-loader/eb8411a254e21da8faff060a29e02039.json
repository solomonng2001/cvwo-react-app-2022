{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/account/AccountSettings.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport LogIn from './LogIn';\nimport CreateAccount from '../CreateAccount';\nimport ChangePassword from '../ChangePassword'; // Sourced Menu component from https://mui.com/material-ui/react-menu/#main-content and modified for use\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// account settings button with dropdown menu containing more settings\nconst AccountSettings = _ref => {\n  _s();\n\n  let {\n    API,\n    anchorElAccountSettings,\n    openAccountSettings,\n    handleCloseAccountSettings,\n    currentUserState,\n    globalMessageState\n  } = _ref;\n  // toggle close/open login dialog page\n  const [openLogIn, setOpenLogIn] = React.useState(false);\n\n  const handleClickOpenLogIn = () => {\n    setOpenLogIn(true);\n  };\n\n  const handleCloseLogIn = () => {\n    setOpenLogIn(false);\n  }; // toggle close/open create account dialog page\n\n\n  const [openCreateAccount, setOpenCreateAccount] = React.useState(false);\n\n  const handleClickOpenCreateAccount = () => {\n    setOpenCreateAccount(true);\n  };\n\n  const handleCloseCreateAccount = () => {\n    setOpenCreateAccount(false);\n  }; // toggle close/open change password dialog page\n\n\n  const [openChangePassword, setOpenChangePassword] = React.useState(false);\n\n  const handleClickOpenChangePassword = () => {\n    setOpenChangePassword(true);\n  };\n\n  const handleCloseChangePassword = () => {\n    setOpenChangePassword(false);\n  }; // when logout, forget user cache: user info and jwt token\n\n\n  const handleLogOut = () => {\n    currentUserState.setCurrentUser(currentUserState.emptyCurrentUser);\n    localStorage.removeItem(\"token\");\n    window.location.reload(); // refresh page to update without any user logged in\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentUserState.isLoggedIn ? /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"account-settings\",\n      anchorEl: anchorElAccountSettings,\n      open: openAccountSettings,\n      onClose: handleCloseAccountSettings,\n      MenuListProps: {\n        'aria-labelledby': 'basic-button'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClickOpenChangePassword,\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ChangePassword, {\n        API: API,\n        openChangePassword: openChangePassword,\n        handleCloseChangePassword: handleCloseChangePassword,\n        currentUserState: currentUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleLogOut,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this) :\n    /*#__PURE__*/\n    // else if user not logged in, display create account and login in dropdown menu\n    _jsxDEV(Menu, {\n      id: \"account-settings\",\n      anchorEl: anchorElAccountSettings,\n      open: openAccountSettings,\n      onClose: handleCloseAccountSettings,\n      MenuListProps: {\n        'aria-labelledby': 'basic-button'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClickOpenLogIn,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(LogIn, {\n        API: API,\n        openLogIn: openLogIn,\n        handleCloseLogIn: handleCloseLogIn,\n        currentUserState: currentUserState,\n        globalMessageState: globalMessageState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClickOpenCreateAccount,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CreateAccount, {\n        API: API,\n        openCreateAccount: openCreateAccount,\n        handleCloseCreateAccount: handleCloseCreateAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AccountSettings, \"3R4H7MnqxljPtPCg99bjFLzV/4w=\");\n\n_c = AccountSettings;\nexport default AccountSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettings\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/account/AccountSettings.tsx"],"names":["React","Menu","MenuItem","LogIn","CreateAccount","ChangePassword","AccountSettings","API","anchorElAccountSettings","openAccountSettings","handleCloseAccountSettings","currentUserState","globalMessageState","openLogIn","setOpenLogIn","useState","handleClickOpenLogIn","handleCloseLogIn","openCreateAccount","setOpenCreateAccount","handleClickOpenCreateAccount","handleCloseCreateAccount","openChangePassword","setOpenChangePassword","handleClickOpenChangePassword","handleCloseChangePassword","handleLogOut","setCurrentUser","emptyCurrentUser","localStorage","removeItem","window","location","reload","isLoggedIn"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport LogIn from './LogIn';\nimport CreateAccount from '../CreateAccount';\nimport CurrentUserState from '../../types/CurrentUserState';\nimport GlobalMessageState from '../../types/GlobalMessageState';\nimport ChangePassword from '../ChangePassword';\n\n// Sourced Menu component from https://mui.com/material-ui/react-menu/#main-content and modified for use\n\ntype Props = {\n    anchorElAccountSettings: HTMLElement | null,\n    openAccountSettings: boolean,\n    handleCloseAccountSettings: () => void,\n    currentUserState: CurrentUserState;\n    globalMessageState: GlobalMessageState;\n    API: string;\n}\n\n// account settings button with dropdown menu containing more settings\nconst AccountSettings: React.FC<Props> = ({API, anchorElAccountSettings, openAccountSettings, handleCloseAccountSettings, currentUserState, globalMessageState}: Props) => {\n  \n  // toggle close/open login dialog page\n  const [openLogIn, setOpenLogIn] = React.useState<boolean>(false);\n    const handleClickOpenLogIn = () => {\n      setOpenLogIn(true);\n    };\n    const handleCloseLogIn = () => {\n      setOpenLogIn(false);\n    };\n\n    // toggle close/open create account dialog page\n    const [openCreateAccount, setOpenCreateAccount] = React.useState<boolean>(false);\n    const handleClickOpenCreateAccount = () => {\n      setOpenCreateAccount(true);\n    };\n    const handleCloseCreateAccount = () => {\n      setOpenCreateAccount(false);\n    };\n\n    // toggle close/open change password dialog page\n    const [openChangePassword, setOpenChangePassword] = React.useState<boolean>(false);\n    const handleClickOpenChangePassword = () => {\n      setOpenChangePassword(true);\n    };\n    const handleCloseChangePassword = () => {\n      setOpenChangePassword(false);\n    };\n\n    // when logout, forget user cache: user info and jwt token\n    const handleLogOut = () => {\n      currentUserState.setCurrentUser(currentUserState.emptyCurrentUser);\n      localStorage.removeItem(\"token\");\n      window.location.reload(); // refresh page to update without any user logged in\n    }\n\n    return (\n        <div>\n          {/* if user logged in, display change password and logout in dropdown menu */}\n          { currentUserState.isLoggedIn ? \n            <Menu\n                id=\"account-settings\"\n                anchorEl={anchorElAccountSettings}\n                open={openAccountSettings}\n                onClose={handleCloseAccountSettings}\n                MenuListProps={{\n                'aria-labelledby': 'basic-button',\n                }}\n            >            \n              <MenuItem onClick={handleClickOpenChangePassword}>Change Password</MenuItem>\n              <ChangePassword API={API} openChangePassword={openChangePassword} handleCloseChangePassword={handleCloseChangePassword} currentUserState={currentUserState}/>\n              <MenuItem onClick={handleLogOut}>Log Out</MenuItem>\n            </Menu> :\n            // else if user not logged in, display create account and login in dropdown menu\n            <Menu\n              id=\"account-settings\"\n              anchorEl={anchorElAccountSettings}\n              open={openAccountSettings}\n              onClose={handleCloseAccountSettings}\n              MenuListProps={{\n              'aria-labelledby': 'basic-button',\n              }}\n            >            \n              <MenuItem onClick={handleClickOpenLogIn}>Log In</MenuItem>\n              <LogIn API={API} openLogIn={openLogIn} handleCloseLogIn={handleCloseLogIn} currentUserState={currentUserState} globalMessageState={globalMessageState}/>\n              <MenuItem onClick={handleClickOpenCreateAccount}>Create Account</MenuItem>\n              <CreateAccount API={API} openCreateAccount={openCreateAccount} handleCloseCreateAccount={handleCloseCreateAccount}/>\n            </Menu>\n              }\n        </div>\n    );\n};\n\nexport default AccountSettings;"]},"metadata":{},"sourceType":"module"}