{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateAccount.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateAccount = _ref => {\n  _s();\n\n  let {\n    openCreateAccount,\n    handleCloseCreateAccount\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [severity, setSeverity] = useState('success');\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmitCreateAccount = () => {\n    // setSeverity(undefined);\n    // setMessage(\"1234\");\n    // console.log(\"testing\");\n    // if (password !== confirmPassword) {\n    //     setSeverity('error');\n    //     setMessage(message + \"Passwords do not match. \");\n    //     console.log(\"testing1\");\n    // }\n    // console.log(\"testing2\");\n    // if (username === \"\" || password === \"\" || confirmPassword === \"\") {\n    //     setSeverity('error');\n    //     setMessage(\"Fill in all fields. \");\n    //     console.log(\"testing3\");\n    // }\n    // console.log(\"testing4\");\n    setMessage('');\n    setSeverity('error');\n    setMessage(message + '1');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openCreateAccount,\n    onClose: handleCloseCreateAccount,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Join the ChitChat Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Dont have an account? Create one to create threads, comment and more...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlertUser, {\n        severity: severity,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: username,\n        type: \"text\",\n        margin: \"normal\",\n        label: \"Username\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: password,\n        type: \"password\",\n        margin: \"normal\",\n        label: \"Password\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: confirmPassword,\n        type: \"password\",\n        margin: \"normal\",\n        label: \"Confirm Password\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: event => setConfirmPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCloseCreateAccount,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmitCreateAccount,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateAccount, \"XB6/UrLcZO27lIoQKyafQ4Tdjrs=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/CreateAccount.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","AlertUser","React","useState","CreateAccount","openCreateAccount","handleCloseCreateAccount","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","severity","setSeverity","message","setMessage","handleSubmitCreateAccount","event","target","value"],"mappings":"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","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle, DialogContentText } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport { AlertColor } from '@mui/material/Alert';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openCreateAccount: boolean;\n    handleCloseCreateAccount: () => void;\n}\n\nconst CreateAccount: React.FC<Props> = ({openCreateAccount, handleCloseCreateAccount}: Props) => {\n    const [username, setUsername] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\n    const [severity, setSeverity] = useState<AlertColor | undefined>('success');\n    const [message, setMessage] = useState<string>(\"\");\n\n    const handleSubmitCreateAccount = () => {\n        // setSeverity(undefined);\n        // setMessage(\"1234\");\n        // console.log(\"testing\");\n        // if (password !== confirmPassword) {\n        //     setSeverity('error');\n        //     setMessage(message + \"Passwords do not match. \");\n        //     console.log(\"testing1\");\n        // }\n        // console.log(\"testing2\");\n        // if (username === \"\" || password === \"\" || confirmPassword === \"\") {\n        //     setSeverity('error');\n        //     setMessage(\"Fill in all fields. \");\n        //     console.log(\"testing3\");\n        // }\n        // console.log(\"testing4\");\n        setMessage('');\n        setSeverity('error');\n        setMessage(message + '1');\n    }\n\n    return (\n        <Dialog open={openCreateAccount} onClose={handleCloseCreateAccount} fullWidth>\n            <DialogTitle>Join the ChitChat Community!</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Dont have an account? Create one to create threads, comment and more...\n                </DialogContentText>\n                <AlertUser severity={severity} message={message}/>\n                    <TextField\n                        autoFocus\n                        value={username}\n                        type='text'\n                        margin=\"normal\"\n                        label=\"Username\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        value={password}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setPassword(event.target.value)}\n                    />\n                    <TextField\n                        value={confirmPassword}\n                        type='password'\n                        margin=\"normal\"\n                        label=\"Confirm Password\"\n                        fullWidth\n                        variant=\"outlined\"\n                        onChange={event => setConfirmPassword(event.target.value)}\n                    />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseCreateAccount}>Cancel</Button>\n                <Button onClick={handleSubmitCreateAccount}>Create Account</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}