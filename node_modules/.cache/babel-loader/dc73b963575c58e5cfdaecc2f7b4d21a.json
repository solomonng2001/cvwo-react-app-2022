{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/BodyAddHTML.tsx\";\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BodyAddHTML = _ref => {\n  let {\n    body,\n    toOverflow\n  } = _ref;\n  const body_array = body.split('\\n');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: body_array.map(line => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        noWrap: toOverflow,\n        align: \"left\",\n        variant: \"body1\",\n        children: line\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true))\n  }, void 0, false);\n};\n\n_c = BodyAddHTML;\nexport default BodyAddHTML;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyAddHTML\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/BodyAddHTML.tsx"],"names":["Typography","React","BodyAddHTML","body","toOverflow","body_array","split","map","line"],"mappings":";AAAA,SAASA,UAAT,QAA2B,mBAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAOA,MAAMC,WAA4B,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAgC;AAClE,QAAMC,UAAoB,GAAGF,IAAI,CAACG,KAAL,CAAW,IAAX,CAA7B;AAEA,sBACI;AAAA,cACMD,UAAU,CAACE,GAAX,CAAeC,IAAI,iBACjB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEJ,UAApB;AAAgC,QAAA,KAAK,EAAC,MAAtC;AAA6C,QAAA,OAAO,EAAC,OAArD;AAAA,kBACKI;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADF;AADN,mBADJ;AAaH,CAhBD;;KAAMN,W;AAkBN,eAAeA,WAAf","sourcesContent":["import { Typography } from '@material-ui/core';\n\nimport React from 'react';\n\ntype Props = {\n    toOverflow: boolean;\n    body: string;\n}\n\nconst BodyAddHTML: React.FC<Props> = ({ body, toOverflow }: Props) => {\n    const body_array: string[] = body.split('\\n');\n\n    return (\n        <>\n            { body_array.map(line => (\n                <>\n                    <Typography noWrap={toOverflow} align='left' variant=\"body1\">\n                        {line}\n                    </Typography>\n                    <br />\n                </>\n            ))\n            }\n        </>\n    );\n};\n\nexport default BodyAddHTML;"]},"metadata":{},"sourceType":"module"}