{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/AvatarUserTimeTags.tsx\";\nimport React from 'react';\nimport { Grid, Chip, Typography } from '@material-ui/core';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvatarUserTimeTags = _ref => {\n  let {\n    tagged,\n    user,\n    time,\n    tags\n  } = _ref;\n  const tagsArray = tags.split(\",\");\n  const first_letter = user[0].toUpperCase();\n\n  if (tagged) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        container: true,\n        direction: \"row\",\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: 80\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"rounded\",\n            sx: {\n              width: 70,\n              height: 70\n            },\n            children: first_letter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"h5\",\n              children: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n              children: [\"Posted on \", time.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 6,\n        direction: \"row\",\n        spacing: 1,\n        justifyContent: \"flex-end\",\n        alignItems: \"flex-start\",\n        children: tagsArray.map(tag => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: tag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  } // Without tags\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      container: true,\n      direction: \"row\",\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\",\n          sx: {\n            width: 70,\n            height: 70\n          },\n          children: first_letter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        container: true,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"left\",\n            variant: \"h5\",\n            children: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"left\",\n            variant: \"subtitle1\",\n            color: \"textSecondary\",\n            children: [\"Posted on \", time.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AvatarUserTimeTags;\nexport default AvatarUserTimeTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarUserTimeTags\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/AvatarUserTimeTags.tsx"],"names":["React","Grid","Chip","Typography","Avatar","AvatarUserTimeTags","tagged","user","time","tags","tagsArray","split","first_letter","toUpperCase","width","height","toLocaleString","map","tag"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Chip, Typography } from '@material-ui/core';\nimport Avatar from '@mui/material/Avatar';\nimport Moment from 'react-moment';\n\ntype Props = {\n    tagged: boolean;\n    user: string;\n    time: Date;\n    tags: string;\n};\n\nconst AvatarUserTimeTags: React.FC<Props> = ({ tagged, user, time, tags }: Props) => {\n    const tagsArray= tags.split(\",\");\n    const first_letter = user[0].toUpperCase();\n    if (tagged) {\n        return (\n            <Grid container>\n                <Grid item xs={6} container direction='row' spacing ={5}>\n                    <Grid item style={{width: 80}} >\n                        <Avatar variant='rounded' sx={{ width: 70, height: 70 }}>{ first_letter }</Avatar>\n                    </Grid>\n                    <Grid item xs={9} container direction='column'>\n                        <Grid item>\n                            <Typography align='left' variant='h5'>{ user }</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography align='left' variant='subtitle1' color='textSecondary'>Posted on { time.toLocaleString() }</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item container xs={6} direction='row' spacing={1} justifyContent='flex-end' alignItems='flex-start'>\n                    { tagsArray.map(tag =>\n                        <Grid item>\n                            <Chip label={tag} />\n                        </Grid>\n                    )}\n                </Grid>\n            </Grid>\n        );\n    }\n\n    // Without tags\n    return (\n        <Grid container>\n            <Grid item xs={6} container direction='row' spacing ={5}>\n                <Grid item xs={3} >\n                    <Avatar variant='rounded' sx={{ width: 70, height: 70 }}>{ first_letter }</Avatar>\n                </Grid>\n                <Grid item xs={9} container direction='column'>\n                    <Grid item>\n                        <Typography align='left' variant='h5'>{ user }</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography align='left' variant='subtitle1' color='textSecondary'>Posted on { time.toLocaleString() }</Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={6}>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default AvatarUserTimeTags;"]},"metadata":{},"sourceType":"module"}