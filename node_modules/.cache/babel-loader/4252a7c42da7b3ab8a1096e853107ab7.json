{"ast":null,"code":"var _jsxFileName = \"/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/LogIn.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText } from '@material-ui/core';\nimport AlertUser from './AlertUser';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = _ref => {\n  _s();\n\n  let {\n    openLogIn,\n    handleCloseLogIn\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [severity, setSeverity] = useState('success');\n  const [message, setMessage] = useState([]);\n\n  const resetFormInputs = () => {\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  const handleSubmitLogIn = () => {\n    let new_message = [];\n    fetch(\"http://localhost:3000/login\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => {\n      if (response.ok) {\n        setSeverity('success');\n        new_message.push(\"Logged in successfully!\");\n        setMessage(new_message);\n        resetFormInputs();\n      }\n\n      return response.json();\n    }).then(data => {\n      if (data.error) {\n        setSeverity('error');\n        data.error.map(error => new_message.push(error));\n        setMessage(new_message);\n      }\n    }).catch(error => console.log(error.message)); // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: openLogIn,\n    onClose: handleCloseLogIn,\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Welcome Back!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Log in to create threads, comment and more...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Dont have an account? Create one to do much more!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlertUser, {\n        severity: severity,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: username,\n        type: \"text\",\n        margin: \"normal\",\n        label: \"Username\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: password,\n        type: \"password\",\n        margin: \"normal\",\n        label: \"Password\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCloseLogIn,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmitLogIn,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogIn, \"Z20vuJp9gqhyZu9zbyNTXD376dc=\");\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/src/components/LogIn.tsx"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","AlertUser","React","useState","LogIn","openLogIn","handleCloseLogIn","username","setUsername","password","setPassword","severity","setSeverity","message","setMessage","resetFormInputs","handleSubmitLogIn","new_message","fetch","method","headers","body","JSON","stringify","then","response","ok","push","json","data","error","map","catch","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { Button, TextField, Dialog, DialogActions, DialogContent, \n    DialogTitle, DialogContentText } from '@material-ui/core';\nimport AlertUser from './AlertUser'\nimport { AlertColor } from '@mui/material/Alert';\n\nimport React, { useState } from 'react';\n\ntype Props = {\n    openLogIn: boolean;\n    handleCloseLogIn: () => void;\n}\n\nconst LogIn: React.FC<Props> = ({openLogIn, handleCloseLogIn}: Props) => {\n    const [username, setUsername] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n\n    const [severity, setSeverity] = useState<AlertColor | undefined>('success');\n    const [message, setMessage] = useState<string[]>([]);\n\n    const resetFormInputs = () => {\n        setUsername(\"\");\n        setPassword(\"\");\n    }\n\n    const handleSubmitLogIn = () => {\n        let new_message: string[] = [];\n            fetch(\"http://localhost:3000/login\", {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                body: JSON.stringify({\n                    username,\n                    password,\n                }),\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        setSeverity('success');\n                        new_message.push(\"Logged in successfully!\")\n                        setMessage(new_message);\n                        resetFormInputs();\n                    }\n                    return response.json();\n                })\n                .then((data) => {\n                    if (data.error) {\n                        setSeverity('error');\n                        data.error.map((error: string) =>\n                            new_message.push(error));\n                        setMessage(new_message);\n                    }\n                })\n                .catch((error) => console.log(error.message));\n        // }\n    }\n\n    return (\n        <Dialog open={openLogIn} onClose={handleCloseLogIn} fullWidth>\n            <DialogTitle>Welcome Back!</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Log in to create threads, comment and more...\n                </DialogContentText>\n                <DialogContentText>\n                    Dont have an account? Create one to do much more!\n                </DialogContentText>\n                <AlertUser severity={severity} message={message}/>\n                <TextField\n                    autoFocus\n                    value={username}\n                    type='text'\n                    margin=\"normal\"\n                    label=\"Username\"\n                    fullWidth\n                    variant=\"outlined\"\n                    onChange={event => setUsername(event.target.value)}\n                />\n                <TextField\n                    value={password}\n                    type='password'\n                    margin=\"normal\"\n                    label=\"Password\"\n                    fullWidth\n                    variant=\"outlined\"\n                    onChange={event => setPassword(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCloseLogIn}>Cancel</Button>\n                <Button onClick={handleSubmitLogIn}>Log In</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}