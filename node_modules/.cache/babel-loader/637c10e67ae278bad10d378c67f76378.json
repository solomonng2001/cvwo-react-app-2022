{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onClose\", \"onKeyDown\", \"open\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport Portal from '@mui/base/Portal';\nimport FocusTrap from '@mui/base/FocusTrap';\nimport { ModalManager } from '@mui/base/ModalUnstyled';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport { getModalUtilityClass } from './modalClasses';\nimport CloseModalContext from './CloseModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ariaHidden(element, show) {\n  if (show) {\n    element.setAttribute('aria-hidden', 'true');\n  } else {\n    element.removeAttribute('aria-hidden');\n  }\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, {});\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst manager = new ModalManager();\nconst ModalRoot = styled('div', {\n  name: 'JoyModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    ownerState\n  } = _ref;\n  return _extends({\n    position: 'fixed',\n    zIndex: 9999,\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0\n  }, !ownerState.open && {\n    visibility: 'hidden'\n  });\n});\nconst ModalBackdrop = styled('div', {\n  name: 'JoyModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => styles.backdrop\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return _extends({\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: theme.vars.palette.background.backdrop,\n    WebkitTapHighlightColor: 'transparent'\n  }, ownerState.open && {\n    backdropFilter: 'blur(8px)'\n  });\n});\nconst Modal = /*#__PURE__*/React.forwardRef(function ModalUnstyled(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyModal'\n  });\n\n  const {\n    children,\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    onClose,\n    onKeyDown,\n    open\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded); // @ts-ignore internal logic\n\n\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  let ariaHiddenProp = true;\n\n  if (props['aria-hidden'] === 'false' || typeof props['aria-hidden'] === 'boolean' && !props['aria-hidden']) {\n    ariaHiddenProp = false;\n  }\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mount = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n\n  const isTopModal = () => manager.isTopModal(getModal());\n\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else if (modalRef.current) {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else {\n      handleClose();\n    }\n  }, [open, handleClose, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const [SlotRoot, rootProps] = useSlot('root', {\n    additionalProps: {\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    ref: handleRef,\n    className: classes.root,\n    elementType: ModalRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotBackdrop, backdropProps] = useSlot('backdrop', {\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    elementType: ModalBackdrop,\n    externalForwardedProps: other,\n    ownerState\n  });\n\n  if (!keepMounted && !open) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(CloseModalContext.Provider, {\n    value: onClose,\n    children: /*#__PURE__*/_jsx(Portal, {\n      ref: handlePortalRef,\n      container: container,\n      disablePortal: disablePortal,\n      children: /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n        children: [!hideBackdrop ? /*#__PURE__*/_jsx(SlotBackdrop, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n          disableEnforceFocus: disableEnforceFocus,\n          disableAutoFocus: disableAutoFocus,\n          disableRestoreFocus: disableRestoreFocus,\n          isEnabled: isTopModal,\n          open: open,\n          children: React.Children.only(children) && /*#__PURE__*/React.cloneElement(children, _extends({}, children.props.tabIndex === undefined && {\n            tabIndex: -1\n          }))\n        })]\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"closeClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["/Users/solomonng/dev/cvwo-rails-react-app/cvwo-react-app-2022/node_modules/@mui/joy/Modal/Modal.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_useEventCallback","useEventCallback","composeClasses","Portal","FocusTrap","ModalManager","styled","useThemeProps","useSlot","getModalUtilityClass","CloseModalContext","jsx","_jsx","jsxs","_jsxs","ariaHidden","element","show","setAttribute","removeAttribute","useUtilityClasses","ownerState","open","slots","root","backdrop","getContainer","container","manager","ModalRoot","name","slot","overridesResolver","props","styles","position","zIndex","right","bottom","top","left","visibility","ModalBackdrop","theme","backgroundColor","vars","palette","background","WebkitTapHighlightColor","backdropFilter","Modal","forwardRef","ModalUnstyled","inProps","ref","children","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","onClose","onKeyDown","other","modal","useRef","mountNodeRef","modalRef","handleRef","ariaHiddenProp","getDoc","current","getModal","mount","handleMounted","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","handlePortalRef","node","handleClose","useCallback","remove","useEffect","classes","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","SlotRoot","rootProps","additionalProps","role","className","elementType","externalForwardedProps","SlotBackdrop","backdropProps","onClick","Provider","value","isEnabled","Children","only","cloneElement","tabIndex","undefined","process","env","NODE_ENV","propTypes","isRequired","oneOfType","func","bool","sx","arrayOf","object"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,MAAMC,SAAS,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,kBAA1B,EAA8C,qBAA9C,EAAqE,sBAArE,EAA6F,eAA7F,EAA8G,qBAA9G,EAAqI,mBAArI,EAA0J,cAA1J,EAA0K,aAA1K,EAAyL,SAAzL,EAAoM,WAApM,EAAiN,MAAjN,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,EAA+CC,sBAAsB,IAAIC,aAAzE,EAAwFC,mBAAmB,IAAIC,UAA/G,EAA2HC,yBAAyB,IAAIC,gBAAxJ,QAAgL,YAAhL;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,WAAtC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AACA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmC;AACjC,MAAIA,IAAJ,EAAU;AACRD,IAAAA,OAAO,CAACE,YAAR,CAAqB,aAArB,EAAoC,MAApC;AACD,GAFD,MAEO;AACLF,IAAAA,OAAO,CAACG,eAAR,CAAwB,aAAxB;AACD;AACF;;AACD,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA;AADI,MAEFD,UAFJ;AAGA,QAAME,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,CAACF,IAAD,IAAS,QAAlB,CADM;AAEZG,IAAAA,QAAQ,EAAE,CAAC,UAAD;AAFE,GAAd;AAIA,SAAOvB,cAAc,CAACqB,KAAD,EAAQd,oBAAR,EAA8B,EAA9B,CAArB;AACD,CATD;;AAUA,SAASiB,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,SAAO,OAAOA,SAAP,KAAqB,UAArB,GAAkCA,SAAS,EAA3C,GAAgDA,SAAvD;AACD,C,CAED;AACA;;;AACA,MAAMC,OAAO,GAAG,IAAIvB,YAAJ,EAAhB;AACA,MAAMwB,SAAS,GAAGvB,MAAM,CAAC,KAAD,EAAQ;AAC9BwB,EAAAA,IAAI,EAAE,UADwB;AAE9BC,EAAAA,IAAI,EAAE,MAFwB;AAG9BC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACV;AAHf,CAAR,CAAN,CAIf;AAAA,MAAC;AACFH,IAAAA;AADE,GAAD;AAAA,SAEG/B,QAAQ,CAAC;AACb6C,IAAAA,QAAQ,EAAE,OADG;AAEbC,IAAAA,MAAM,EAAE,IAFK;AAGbC,IAAAA,KAAK,EAAE,CAHM;AAIbC,IAAAA,MAAM,EAAE,CAJK;AAKbC,IAAAA,GAAG,EAAE,CALQ;AAMbC,IAAAA,IAAI,EAAE;AANO,GAAD,EAOX,CAACnB,UAAU,CAACC,IAAZ,IAAoB;AACrBmB,IAAAA,UAAU,EAAE;AADS,GAPT,CAFX;AAAA,CAJe,CAAlB;AAgBA,MAAMC,aAAa,GAAGpC,MAAM,CAAC,KAAD,EAAQ;AAClCwB,EAAAA,IAAI,EAAE,UAD4B;AAElCC,EAAAA,IAAI,EAAE,UAF4B;AAGlCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACT;AAHX,CAAR,CAAN,CAInB;AAAA,MAAC;AACFkB,IAAAA,KADE;AAEFtB,IAAAA;AAFE,GAAD;AAAA,SAGG/B,QAAQ,CAAC;AACb8C,IAAAA,MAAM,EAAE,CAAC,CADI;AAEbD,IAAAA,QAAQ,EAAE,OAFG;AAGbE,IAAAA,KAAK,EAAE,CAHM;AAIbC,IAAAA,MAAM,EAAE,CAJK;AAKbC,IAAAA,GAAG,EAAE,CALQ;AAMbC,IAAAA,IAAI,EAAE,CANO;AAObI,IAAAA,eAAe,EAAED,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmBC,UAAnB,CAA8BtB,QAPlC;AAQbuB,IAAAA,uBAAuB,EAAE;AARZ,GAAD,EASX3B,UAAU,CAACC,IAAX,IAAmB;AACpB2B,IAAAA,cAAc,EAAE;AADI,GATR,CAHX;AAAA,CAJmB,CAAtB;AAmBA,MAAMC,KAAK,GAAG,aAAa1D,KAAK,CAAC2D,UAAN,CAAiB,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AAC/E,QAAMrB,KAAK,GAAG1B,aAAa,CAAC;AAC1B0B,IAAAA,KAAK,EAAEoB,OADmB;AAE1BvB,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAIA,QAAM;AACFyB,IAAAA,QADE;AAEF5B,IAAAA,SAFE;AAGF6B,IAAAA,gBAAgB,GAAG,KAHjB;AAIFC,IAAAA,mBAAmB,GAAG,KAJpB;AAKFC,IAAAA,oBAAoB,GAAG,KALrB;AAMFC,IAAAA,aAAa,GAAG,KANd;AAOFC,IAAAA,mBAAmB,GAAG,KAPpB;AAQFC,IAAAA,iBAAiB,GAAG,KARlB;AASFC,IAAAA,YAAY,GAAG,KATb;AAUFC,IAAAA,WAAW,GAAG,KAVZ;AAWFC,IAAAA,OAXE;AAYFC,IAAAA,SAZE;AAaF3C,IAAAA;AAbE,MAcAW,KAdN;AAAA,QAeEiC,KAAK,GAAG7E,6BAA6B,CAAC4C,KAAD,EAAQ1C,SAAR,CAfvC,CAL+E,CAsB/E;;;AACA,QAAM4E,KAAK,GAAG3E,KAAK,CAAC4E,MAAN,CAAa,EAAb,CAAd;AACA,QAAMC,YAAY,GAAG7E,KAAK,CAAC4E,MAAN,CAAa,IAAb,CAArB;AACA,QAAME,QAAQ,GAAG9E,KAAK,CAAC4E,MAAN,CAAa,IAAb,CAAjB;AACA,QAAMG,SAAS,GAAGxE,UAAU,CAACuE,QAAD,EAAWhB,GAAX,CAA5B;AACA,MAAIkB,cAAc,GAAG,IAArB;;AACA,MAAIvC,KAAK,CAAC,aAAD,CAAL,KAAyB,OAAzB,IAAoC,OAAOA,KAAK,CAAC,aAAD,CAAZ,KAAgC,SAAhC,IAA6C,CAACA,KAAK,CAAC,aAAD,CAA3F,EAA4G;AAC1GuC,IAAAA,cAAc,GAAG,KAAjB;AACD;;AACD,QAAMC,MAAM,GAAG,MAAM5E,aAAa,CAACwE,YAAY,CAACK,OAAd,CAAlC;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACrBR,IAAAA,KAAK,CAACO,OAAN,CAAcJ,QAAd,GAAyBA,QAAQ,CAACI,OAAlC;AACAP,IAAAA,KAAK,CAACO,OAAN,CAAcE,KAAd,GAAsBP,YAAY,CAACK,OAAnC;AACA,WAAOP,KAAK,CAACO,OAAb;AACD,GAJD;;AAKA,QAAMG,aAAa,GAAG,MAAM;AAC1BjD,IAAAA,OAAO,CAACgD,KAAR,CAAcD,QAAQ,EAAtB,EAA0B;AACxBd,MAAAA;AADwB,KAA1B,EAD0B,CAK1B;;AACA,QAAIS,QAAQ,CAACI,OAAb,EAAsB;AACpBJ,MAAAA,QAAQ,CAACI,OAAT,CAAiBI,SAAjB,GAA6B,CAA7B;AACD;AACF,GATD;;AAUA,QAAMC,UAAU,GAAG9E,gBAAgB,CAAC,MAAM;AACxC,UAAM+E,iBAAiB,GAAGtD,YAAY,CAACC,SAAD,CAAZ,IAA2B8C,MAAM,GAAGQ,IAA9D;AACArD,IAAAA,OAAO,CAACsD,GAAR,CAAYP,QAAQ,EAApB,EAAwBK,iBAAxB,EAFwC,CAIxC;;AACA,QAAIV,QAAQ,CAACI,OAAb,EAAsB;AACpBG,MAAAA,aAAa;AACd;AACF,GARkC,CAAnC;;AASA,QAAMM,UAAU,GAAG,MAAMvD,OAAO,CAACuD,UAAR,CAAmBR,QAAQ,EAA3B,CAAzB;;AACA,QAAMS,eAAe,GAAGnF,gBAAgB,CAACoF,IAAI,IAAI;AAC/ChB,IAAAA,YAAY,CAACK,OAAb,GAAuBW,IAAvB;;AACA,QAAI,CAACA,IAAL,EAAW;AACT;AACD;;AACD,QAAI/D,IAAI,IAAI6D,UAAU,EAAtB,EAA0B;AACxBN,MAAAA,aAAa;AACd,KAFD,MAEO,IAAIP,QAAQ,CAACI,OAAb,EAAsB;AAC3B3D,MAAAA,UAAU,CAACuD,QAAQ,CAACI,OAAV,EAAmBF,cAAnB,CAAV;AACD;AACF,GAVuC,CAAxC;AAWA,QAAMc,WAAW,GAAG9F,KAAK,CAAC+F,WAAN,CAAkB,MAAM;AAC1C3D,IAAAA,OAAO,CAAC4D,MAAR,CAAeb,QAAQ,EAAvB,EAA2BH,cAA3B;AACD,GAFmB,EAEjB,CAACA,cAAD,CAFiB,CAApB;AAGAhF,EAAAA,KAAK,CAACiG,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACXH,MAAAA,WAAW;AACZ,KAFD;AAGD,GAJD,EAIG,CAACA,WAAD,CAJH;AAKA9F,EAAAA,KAAK,CAACiG,SAAN,CAAgB,MAAM;AACpB,QAAInE,IAAJ,EAAU;AACRyD,MAAAA,UAAU;AACX,KAFD,MAEO;AACLO,MAAAA,WAAW;AACZ;AACF,GAND,EAMG,CAAChE,IAAD,EAAOgE,WAAP,EAAoBP,UAApB,CANH;;AAOA,QAAM1D,UAAU,GAAG/B,QAAQ,CAAC,EAAD,EAAK2C,KAAL,EAAY;AACrCuB,IAAAA,gBADqC;AAErCC,IAAAA,mBAFqC;AAGrCC,IAAAA,oBAHqC;AAIrCC,IAAAA,aAJqC;AAKrCC,IAAAA,mBALqC;AAMrCC,IAAAA,iBANqC;AAOrCC,IAAAA,YAPqC;AAQrCC,IAAAA;AARqC,GAAZ,CAA3B;;AAUA,QAAM2B,OAAO,GAAGtE,iBAAiB,CAACC,UAAD,CAAjC;;AACA,QAAMsE,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAIA,KAAK,CAACC,MAAN,KAAiBD,KAAK,CAACE,aAA3B,EAA0C;AACxC;AACD;;AACD,QAAI9B,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAAC4B,KAAD,EAAQ,eAAR,CAAP;AACD;AACF,GAPD;;AAQA,QAAMG,aAAa,GAAGH,KAAK,IAAI;AAC7B,QAAI3B,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAAC2B,KAAD,CAAT;AACD,KAH4B,CAK7B;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAIA,KAAK,CAACI,GAAN,KAAc,QAAd,IAA0B,CAACb,UAAU,EAAzC,EAA6C;AAC3C;AACD;;AACD,QAAI,CAACzB,oBAAL,EAA2B;AACzB;AACAkC,MAAAA,KAAK,CAACK,eAAN;;AACA,UAAIjC,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAAC4B,KAAD,EAAQ,eAAR,CAAP;AACD;AACF;AACF,GArBD;;AAsBA,QAAM,CAACM,QAAD,EAAWC,SAAX,IAAwB3F,OAAO,CAAC,MAAD,EAAS;AAC5C4F,IAAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAE,cADS;AAEfpC,MAAAA,SAAS,EAAE8B;AAFI,KAD2B;AAK5CzC,IAAAA,GAAG,EAAEiB,SALuC;AAM5C+B,IAAAA,SAAS,EAAEZ,OAAO,CAAClE,IANyB;AAO5C+E,IAAAA,WAAW,EAAE1E,SAP+B;AAQ5C2E,IAAAA,sBAAsB,EAAEtC,KARoB;AAS5C7C,IAAAA;AAT4C,GAAT,CAArC;AAWA,QAAM,CAACoF,YAAD,EAAeC,aAAf,IAAgClG,OAAO,CAAC,UAAD,EAAa;AACxD4F,IAAAA,eAAe,EAAE;AACf,qBAAe,IADA;AAEfO,MAAAA,OAAO,EAAEhB,mBAFM;AAGfrE,MAAAA;AAHe,KADuC;AAMxDgF,IAAAA,SAAS,EAAEZ,OAAO,CAACjE,QANqC;AAOxD8E,IAAAA,WAAW,EAAE7D,aAP2C;AAQxD8D,IAAAA,sBAAsB,EAAEtC,KARgC;AASxD7C,IAAAA;AATwD,GAAb,CAA7C;;AAWA,MAAI,CAAC0C,WAAD,IAAgB,CAACzC,IAArB,EAA2B;AACzB,WAAO,IAAP;AACD;;AACD,SAAO,aAAaV,IAAI,CAACF,iBAAiB,CAACkG,QAAnB,EAA6B;AACnDC,IAAAA,KAAK,EAAE7C,OAD4C;AAEnDT,IAAAA,QAAQ,EAAE,aAAa3C,IAAI,CAACT,MAAD,EAAS;AAClCmD,MAAAA,GAAG,EAAE8B,eAD6B;AAElCzD,MAAAA,SAAS,EAAEA,SAFuB;AAGlCgC,MAAAA,aAAa,EAAEA,aAHmB;AAIlCJ,MAAAA,QAAQ,EAAE,aAAazC,KAAK,CAACoF,QAAD,EAAW5G,QAAQ,CAAC,EAAD,EAAK6G,SAAL,EAAgB;AAC7D5C,QAAAA,QAAQ,EAAE,CAAC,CAACO,YAAD,GAAgB,aAAalD,IAAI,CAAC6F,YAAD,EAAenH,QAAQ,CAAC,EAAD,EAAKoH,aAAL,CAAvB,CAAjC,GAA+E,IAAhF,EAAsF,aAAa9F,IAAI,CAACR,SAAD,EAAY;AAC3HqD,UAAAA,mBAAmB,EAAEA,mBADsG;AAE3HD,UAAAA,gBAAgB,EAAEA,gBAFyG;AAG3HI,UAAAA,mBAAmB,EAAEA,mBAHsG;AAI3HkD,UAAAA,SAAS,EAAE3B,UAJgH;AAK3H7D,UAAAA,IAAI,EAAEA,IALqH;AAM3HiC,UAAAA,QAAQ,EAAE/D,KAAK,CAACuH,QAAN,CAAeC,IAAf,CAAoBzD,QAApB,KAAiC,aAAa/D,KAAK,CAACyH,YAAN,CAAmB1D,QAAnB,EAA6BjE,QAAQ,CAAC,EAAD,EAAKiE,QAAQ,CAACtB,KAAT,CAAeiF,QAAf,KAA4BC,SAA5B,IAAyC;AACzID,YAAAA,QAAQ,EAAE,CAAC;AAD8H,WAA9C,CAArC;AANmE,SAAZ,CAAvG;AADmD,OAAhB,CAAnB;AAJM,KAAT;AAFwB,GAA7B,CAAxB;AAoBD,CAzK0B,CAA3B;AA0KAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCpE,KAAK,CAACqE;AAAU;AAAhB,EAAyC;AAC/E;AACA;AACA;AACA;;AACA;AACF;AACA;AACEhE,EAAAA,QAAQ,EAAE7D,mBAAmB,CAAC8H,UARiD;;AAS/E;AACF;AACA;AACA;AACA;AACA;AACA;AACE7F,EAAAA,SAAS,EAAElC;AAAU;AAAD,GAAuCgI,SAAhD,CAA0D,CAAC9H,eAAD,EAAkBF,SAAS,CAACiI,IAA5B,CAA1D,CAhBoE;;AAiB/E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACElE,EAAAA,gBAAgB,EAAE/D,SAAS,CAACkI,IA1BmD;;AA2B/E;AACF;AACA;AACA;AACA;AACA;AACA;AACElE,EAAAA,mBAAmB,EAAEhE,SAAS,CAACkI,IAlCgD;;AAmC/E;AACF;AACA;AACA;AACEjE,EAAAA,oBAAoB,EAAEjE,SAAS,CAACkI,IAvC+C;;AAwC/E;AACF;AACA;AACA;AACEhE,EAAAA,aAAa,EAAElE,SAAS,CAACkI,IA5CsD;;AA6C/E;AACF;AACA;AACA;AACA;AACE/D,EAAAA,mBAAmB,EAAEnE,SAAS,CAACkI,IAlDgD;;AAmD/E;AACF;AACA;AACA;AACE9D,EAAAA,iBAAiB,EAAEpE,SAAS,CAACkI,IAvDkD;;AAwD/E;AACF;AACA;AACA;AACE7D,EAAAA,YAAY,EAAErE,SAAS,CAACkI,IA5DuD;;AA6D/E;AACF;AACA;AACA;AACA;AACA;AACE5D,EAAAA,WAAW,EAAEtE,SAAS,CAACkI,IAnEwD;;AAoE/E;AACF;AACA;AACA;AACA;AACA;AACA;AACE3D,EAAAA,OAAO,EAAEvE,SAAS,CAACiI,IA3E4D;;AA4E/E;AACF;AACA;AACEzD,EAAAA,SAAS,EAAExE,SAAS,CAACiI,IA/E0D;;AAgF/E;AACF;AACA;AACEpG,EAAAA,IAAI,EAAE7B,SAAS,CAACkI,IAAV,CAAeH,UAnF0D;;AAoF/E;AACF;AACA;AACEI,EAAAA,EAAE,EAAEnI,SAAS,CAACgI,SAAV,CAAoB,CAAChI,SAAS,CAACoI,OAAV,CAAkBpI,SAAS,CAACgI,SAAV,CAAoB,CAAChI,SAAS,CAACiI,IAAX,EAAiBjI,SAAS,CAACqI,MAA3B,EAAmCrI,SAAS,CAACkI,IAA7C,CAApB,CAAlB,CAAD,EAA6FlI,SAAS,CAACiI,IAAvG,EAA6GjI,SAAS,CAACqI,MAAvH,CAApB;AAvF2E,CAAjF,GAwFI,KAAK,CAxFT;AAyFA,eAAe5E,KAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onClose\", \"onKeyDown\", \"open\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport Portal from '@mui/base/Portal';\nimport FocusTrap from '@mui/base/FocusTrap';\nimport { ModalManager } from '@mui/base/ModalUnstyled';\nimport { styled, useThemeProps } from '../styles';\nimport useSlot from '../utils/useSlot';\nimport { getModalUtilityClass } from './modalClasses';\nimport CloseModalContext from './CloseModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ariaHidden(element, show) {\n  if (show) {\n    element.setAttribute('aria-hidden', 'true');\n  } else {\n    element.removeAttribute('aria-hidden');\n  }\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, {});\n};\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n// A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\nconst manager = new ModalManager();\nconst ModalRoot = styled('div', {\n  name: 'JoyModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  zIndex: 9999,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !ownerState.open && {\n  visibility: 'hidden'\n}));\nconst ModalBackdrop = styled('div', {\n  name: 'JoyModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => styles.backdrop\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: -1,\n  position: 'fixed',\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n  backgroundColor: theme.vars.palette.background.backdrop,\n  WebkitTapHighlightColor: 'transparent'\n}, ownerState.open && {\n  backdropFilter: 'blur(8px)'\n}));\nconst Modal = /*#__PURE__*/React.forwardRef(function ModalUnstyled(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyModal'\n  });\n  const {\n      children,\n      container,\n      disableAutoFocus = false,\n      disableEnforceFocus = false,\n      disableEscapeKeyDown = false,\n      disablePortal = false,\n      disableRestoreFocus = false,\n      disableScrollLock = false,\n      hideBackdrop = false,\n      keepMounted = false,\n      onClose,\n      onKeyDown,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  // @ts-ignore internal logic\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  let ariaHiddenProp = true;\n  if (props['aria-hidden'] === 'false' || typeof props['aria-hidden'] === 'boolean' && !props['aria-hidden']) {\n    ariaHiddenProp = false;\n  }\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mount = mountNodeRef.current;\n    return modal.current;\n  };\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    });\n\n    // Fix a bug on Chrome where the scroll isn't initially 0.\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer);\n\n    // The element was already mounted.\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = () => manager.isTopModal(getModal());\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n    if (!node) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else if (modalRef.current) {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else {\n      handleClose();\n    }\n  }, [open, handleClose, handleOpen]);\n  const ownerState = _extends({}, props, {\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  const [SlotRoot, rootProps] = useSlot('root', {\n    additionalProps: {\n      role: 'presentation',\n      onKeyDown: handleKeyDown\n    },\n    ref: handleRef,\n    className: classes.root,\n    elementType: ModalRoot,\n    externalForwardedProps: other,\n    ownerState\n  });\n  const [SlotBackdrop, backdropProps] = useSlot('backdrop', {\n    additionalProps: {\n      'aria-hidden': true,\n      onClick: handleBackdropClick,\n      open\n    },\n    className: classes.backdrop,\n    elementType: ModalBackdrop,\n    externalForwardedProps: other,\n    ownerState\n  });\n  if (!keepMounted && !open) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(CloseModalContext.Provider, {\n    value: onClose,\n    children: /*#__PURE__*/_jsx(Portal, {\n      ref: handlePortalRef,\n      container: container,\n      disablePortal: disablePortal,\n      children: /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n        children: [!hideBackdrop ? /*#__PURE__*/_jsx(SlotBackdrop, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n          disableEnforceFocus: disableEnforceFocus,\n          disableAutoFocus: disableAutoFocus,\n          disableRestoreFocus: disableRestoreFocus,\n          isEnabled: isTopModal,\n          open: open,\n          children: React.Children.only(children) && /*#__PURE__*/React.cloneElement(children, _extends({}, children.props.tabIndex === undefined && {\n            tabIndex: -1\n          }))\n        })]\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"closeClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}